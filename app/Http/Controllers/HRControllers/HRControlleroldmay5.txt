<?php

namespace App\Http\Controllers\HRControllers;

use App\Http\Controllers\Controller;
use \NumberFormatter\NumberFormatter;
use Illuminate\Http\Request;
use DB;
use Crypt;
use \Carbon\Carbon;
use \Carbon\CarbonPeriod;
use App\MoneyCurrency;
use PDF;
use DateTime;
use DateInterval;
use DatePeriod;
use Conversion;
class HRController extends Controller
{
    
    public function payroll($id, Request $request)
    {
        $tardy = 0;
        
        date_default_timezone_set('Asia/Manila');

        $my_id = DB::table('teacher')
            // ->select('id')
            ->where('userid',auth()->user()->id)
            ->where('tid',auth()->user()->email)
            ->where('isactive','1')
            ->first();

        if($id == 'dashboard'){

            $payrolldate = Db::table('payroll')
                ->where('status','1')
                ->get();
            if(count($payrolldate) == 0){

                Db::table('payroll')
                    ->insert([
                        'datefrom'  =>date('Y-m-d'),
                        'dateto'    =>date('Y-m-d'),
                        'status'    =>1,
                        'createdby' => $my_id->id,
                        'createdon' =>date('Y-m-d H:i:s')
                    ]);

                $payrolldate = Db::table('payroll')
                    ->where('status','1')
                    ->get();

                foreach($payrolldate as $datepayroll){

                    $datepayroll->datefrom = date('m-d-Y',strtotime($datepayroll->datefrom));

                    $datepayroll->dateto = date('m-d-Y',strtotime($datepayroll->dateto));

                    $mindate = explode('-',$datepayroll->dateto);

                    $datepayroll->mindate = $mindate[2].'-'.$mindate[0].'-'.$mindate[1];
                }
            }
            else{
                foreach($payrolldate as $datepayroll){

                    $datepayroll->datefrom = date('m-d-Y',strtotime($datepayroll->datefrom));

                    $datepayroll->dateto = date('m-d-Y',strtotime($datepayroll->dateto));

                    $mindate = explode('-',$datepayroll->dateto);

                    $datepayroll->mindate = $mindate[2].'-'.$mindate[0].'-'.$mindate[1];

                }
                
            }
            
            $employeesmasterlist = Db::table('teacher')
                ->select(
                    'teacher.id',
                    'teacher.firstname',
                    'teacher.middlename',
                    'teacher.lastname',
                    'teacher.suffix',
                    'teacher.picurl',
                    'usertype.utype',
                    'employee_personalinfo.gender',
                    'employee_personalinfo.departmentid'
                    )
                ->join('usertype','teacher.usertypeid','usertype.id')
                ->join('employee_personalinfo','teacher.id','=','employee_personalinfo.employeeid')
                ->where('usertype.utype','!=','PARENT')
                ->where('usertype.utype','!=','STUDENT')
                ->where('isactive','1')
                ->orderby('id', 'asc')
                ->get();
            // return $employeesmasterlist;
            $employeeslist = array();

            foreach($employeesmasterlist as $employeemasterlist){

                $checkPayrollHistoryIfExists = Db::table('payroll_history')
                    ->where('employeeid',$employeemasterlist->id)
                    ->where('payrollid',$payrolldate[0]->id)
                    ->get();

                if(count($checkPayrollHistoryIfExists) == 0){

                    array_push($employeeslist, $employeemasterlist);

                }

            }

            foreach($employeeslist as $employee){

                $getdepartmentid = DB::table('employee_personalinfo')
                    ->where('employeeid', $employeemasterlist->id)
                    ->where('departmentid','!=',null)
                    ->get();
                if(count($getdepartmentid) == 0){
                    $employee->departmentid = 0;
                }

            }
            $checkifPayrollExistsInHistory = Db::table('payroll_history')
                ->where('payrollid', $payrolldate[0]->id)
                ->get();

            if(count($checkifPayrollExistsInHistory) == 0){

                $existsinhistory = 0;

            }else{

                $existsinhistory = 1;

            }
            // return $employeesmasterlist;
            
            if(count($employeesmasterlist) == 0){
                return view('hr.employeesalary')
                    ->with('payrolldate',$payrolldate)
                    ->with('filteremployees','all')
                    ->with('noemployees','1')
                    ->with('existsinhistory',$existsinhistory);

            }
            // ====================================================================================================================== date range

            $getdaterange = Db::table('payroll')
                ->where('status','1')
                ->get();
            // return $employeeslist;
            // ====================================================================================================================== get employee info

            // if($exists == 0){
            //     $getemployeeinfo = Db::table('teacher')
            //         ->where('teacher.id',$employeeslist[0]->id)
            //         ->get();
            // }else{
            //     $getemployeeinfo = Db::table('teacher')
            //         ->where('teacher.id',$employeeslist[1]->id)
            //         ->get();
            // }
            
            // ====================================================================================================================== get salary rate
            // return count($employeeslist);
            // return count($employeeslist);

            if(count($employeeslist)>0){
                // $employeeslist[0]->departmentid = 0;
                $getrate = Db::table('employee_basicsalaryinfo')
                    ->select(
                        'employee_basicsalaryinfo.amount',
                        'employee_basistype.type',
                        'employee_basicsalaryinfo.mondays',
                        'employee_basicsalaryinfo.tuesdays',
                        'employee_basicsalaryinfo.wednesdays',
                        'employee_basicsalaryinfo.thursdays',
                        'employee_basicsalaryinfo.fridays',
                        'employee_basicsalaryinfo.saturdays',
                        'employee_basicsalaryinfo.sundays',
                        'employee_basicsalaryinfo.mondayhours',
                        'employee_basicsalaryinfo.tuesdayhours',
                        'employee_basicsalaryinfo.wednesdayhours',
                        'employee_basicsalaryinfo.thursdayhours',
                        'employee_basicsalaryinfo.fridayhours',
                        'employee_basicsalaryinfo.saturdayhours',
                        'employee_basicsalaryinfo.sundayhours',
                        'employee_basicsalaryinfo.holidays',
                        'employee_basicsalaryinfo.hoursperday',
                        'employee_basicsalaryinfo.projectbasedtype',
                        'employee_basicsalaryinfo.hoursperweek',
                        'employee_basicsalaryinfo.noofmonths',
                        'employee_basicsalaryinfo.status'
                        )
                    ->join('employee_basistype','employee_basicsalaryinfo.salarybasistype','=','employee_basistype.id')
                    ->where('employeeid',$employeeslist[0]->id)
                    ->where('status','0')
                    ->get();

                // ====================================================================================================================== get working days
    
                // $typecalendar = CAL_GREGORIAN;
    
                // function getWorkingDays($startDate,$endDate){
    
                //     $startDate = strtotime($startDate);
    
                //     $endDate = strtotime($endDate);
                    
                //     if($startDate <= $endDate){
    
                //         $datediff = $endDate - $startDate;
    
                //         return floor($datediff / (60 * 60 * 24));
    
                //     }
    
                //     return false;
                    
                    
                // }

                

                $payrollworkingdays = array();

                $begin = new DateTime($getdaterange[0]->datefrom);

                $end = new DateTime($getdaterange[0]->dateto);

                $end = $end->modify( '+1 day' ); 
                
                $intervalday = new DateInterval('P1D');

                $daterange = new DatePeriod($begin, $intervalday ,$end);


                foreach($daterange as $date){

                    array_push($payrollworkingdays,$date->format("Y-m-d"));

                }

                
                
                if(count($getrate) == 0){
    
                    $day_count = getWorkingDays($getdaterange[0]->datefrom,$getdaterange[0]->dateto);
                    
                    $day_count+=1;

                    $workdays = array();

                    $begin = new DateTime($getdaterange[0]->datefrom);

                    $end = new DateTime($getdaterange[0]->dateto);

                    $end = $end->modify( '+1 day' ); 
                    
                    $interval = new DateInterval('P1D');

                    $daterange = new DatePeriod($begin, $interval ,$end);

                    $daysperiod = array();
    
                    foreach($daterange as $date){

                        array_push($daysperiod,$date->format("Y-m-d"));
                        
                    }
    
                    foreach($daysperiod as $dayperiod){
                        
                        $day_name = date('D', strtotime($dayperiod)); // Trim day name to 3 chars
                        
                        //if not a weekend add day to array
                        // if($day_name != 'Sun'){
                                
                            $workdays[] = $dayperiod;
    
                        // }
        
    
                    }
        
                    $beginmonth = new DateTime(date('Y-m-01', strtotime($getdaterange[0]->datefrom)));
    
                    $endmonth = new DateTime(date('Y-m-t', strtotime($getdaterange[0]->datefrom)));
    
                    $endmonth = $endmonth->modify( '+1 day' ); 
                    
                    $intervalmonth = new DateInterval('P1D');
    
                    $daterangemonth = new DatePeriod($beginmonth, $intervalmonth ,$endmonth);
    
                    $monthworkdays = array();
    
                    foreach($daterangemonth as $datemonth){
    
                            array_push($monthworkdays,$datemonth->format("Y-m-d"));
    
                    }
                }else{
                    
                    

                    
                    $day_count = count($payrollworkingdays);
                    
                    if(strtolower($getrate[0]->type) == 'hourly'){
                        
                        $workdays = array();
                        // // $begin = new DateTime($getdaterange[0]->datefrom);
                        // // $end = new DateTime($getdaterange[0]->dateto);
                        // // $end = $end->modify( '+1 day' ); 
                        
                        // // $interval = new DateInterval('P1D');
                        // // $daterange = new DatePeriod($begin, $interval ,$end);
                        // $daysperiod = array();
    
                        // foreach($payrollworkingdays as $date){

                        //     array_push($daysperiod,$date->format("Y-m-d"));

                        // }
    
                        foreach($payrollworkingdays as $dayperiod){
                            
                            $day_name = date('D', strtotime($dayperiod)); // Trim day name to 3 chars
                            
                            //if not a weekend add day to array
                            
                            if($day_name == 'Mon'){
                                
                                if(count($getrate) > 0){
                                    
                                    if($getrate[0]->mondays == 1){
            
                                        $workdays[] = $dayperiod;
            
                                    }
    
                                }
        
                            }elseif($day_name == 'Tue'){
                                
                                if(count($getrate) > 0){
                                    
                                    if($getrate[0]->tuesdays == 1){
            
                                        $workdays[] = $dayperiod;
            
                                    }
    
                                }
        
                            }elseif($day_name == 'Wed'){
                                
                                if(count($getrate) > 0){
                                    
                                    if($getrate[0]->wednesdays == 1){
            
                                        $workdays[] = $dayperiod;
            
                                    }
    
                                }
        
                            }elseif($day_name == 'Thu'){
                                
                                if(count($getrate) > 0){
                                    
                                    if($getrate[0]->thursdays == 1){
            
                                        $workdays[] = $dayperiod;
            
                                    }
    
                                }
        
                            }elseif($day_name == 'Fri'){
                                
                                if(count($getrate) > 0){
                                    
                                    if($getrate[0]->fridays == 1){
            
                                        $workdays[] = $dayperiod;
            
                                    }
    
                                }
        
                            }elseif($day_name == 'Sat'){
                                
                                if(count($getrate) > 0){
                                    
                                    if($getrate[0]->saturdays == 1){
            
                                        $workdays[] = $dayperiod;
            
                                    }
    
                                }
        
                            }elseif($day_name == 'Sun'){
                                
                                if(count($getrate) > 0){
                                    
                                    if($getrate[0]->sundays == 1){
    
                                        $workdays[] = $dayperiod;
            
                                    }
    
                                }
                                
        
                            }
    
                        }
                        
                        $beginmonth = new DateTime(date('Y-m-01', strtotime($getdaterange[0]->datefrom)));
    
                        $endmonth = new DateTime(date('Y-m-t', strtotime($getdaterange[0]->datefrom)));
    
                        $endmonth = $endmonth->modify( '+1 day' ); 
                        
                        $intervalmonth = new DateInterval('P1D');
    
                        $daterangemonth = new DatePeriod($beginmonth, $intervalmonth ,$endmonth);
    
                        $monthworkdays = array();
    
                        foreach($daterangemonth as $datemonth){
    
                            if($datemonth->format("D") == 'Sun'){
                                
                                if($getrate[0]->sundays == 1){
        
                                    array_push($monthworkdays,$datemonth->format("Y-m-d"));
        
                                }
        
                            }
                            elseif($datemonth->format("D") == 'Sat'){
                                
                                if($getrate[0]->saturdays == 1){
        
                                    array_push($monthworkdays,$datemonth->format("Y-m-d"));
        
                                }
        
                            }else{
        
                                array_push($monthworkdays,$datemonth->format("Y-m-d"));
        
                            }
    
                        }
        
                    }elseif(strtolower($getrate[0]->type) == 'daily'){
                         //automatic daily rate
    
    
    
                         
                        $workdays = array();
                        // $begin = new DateTime($getdaterange[0]->datefrom);
                        // $end = new DateTime($getdaterange[0]->dateto);
                        // $end = $end->modify( '+1 day' ); 
                        
                        // $interval = new DateInterval('P1D');
                        // $daterange = new DatePeriod($begin, $interval ,$end);
                        // $daysperiod = array();
    
                        // foreach($daterange as $date){
                        //     array_push($daysperiod,$date->format("Y-m-d"));
                        // }
    
                        foreach($payrollworkingdays as $dayperiod){
                            
                            $day_name = date('D', strtotime($dayperiod)); // Trim day name to 3 chars
        
                                $workdays[] = $dayperiod;
    
                        }
                        
                        // $monthworkdays = array();
        
                        // $monthdaycount = getWorkingDays(date('Y-m-01', strtotime($getdaterange[0]->datefrom)), date('Y-m-t', strtotime($getdaterange[0]->datefrom)));
                        
                        // for ($i = 1; $i <= $monthdaycount; $i++) {
            
                        //     $date = date('Y').'/'.date('m').'/'.$i; //format date
            
                        //     $get_name = Carbon::create($date)->isoFormat('ddd'); //get week day
            
                        //     $day_name = substr($get_name, 0, 3); // Trim day name to 3 chars
                            
                        //     $monthworkdays[] = date('Y-m-d', strtotime(date('Y').'-'.date('m').'-'.$i));
                                
                        // }
                        
        
                    }elseif(strtolower($getrate[0]->type) == 'monthly'){
    
                        $workdays = array();
        
                        // $begin = new DateTime($getdaterange[0]->datefrom);
    
                        // $end = new DateTime($getdaterange[0]->dateto);
    
                        // $end = $end->modify( '+1 day' ); 
                        
                        // $interval = new DateInterval('P1D');
    
                        // $daterange = new DatePeriod($begin, $interval ,$end);
    
                        // $daysperiod = array();
    
                        // foreach($daterange as $date){
    
                        //     array_push($daysperiod,$date->format("Y-m-d"));
    
                        // }
                        
                        foreach($payrollworkingdays as $dayperiod){
                            
                            $day_name = date('D', strtotime($dayperiod)); // Trim day name to 3 chars
        
                            if(strtolower($day_name) != 'sunday'){
                                
                                $workdays[] = $dayperiod;
                            }
    
                        }

                        
        
        
                        
                        $beginmonth = new DateTime(date('Y-m-01', strtotime($getdaterange[0]->datefrom)));
    
                        $endmonth = new DateTime(date('Y-m-t', strtotime($getdaterange[0]->datefrom)));
    
                        $endmonth = $endmonth->modify( '+1 day' ); 
                        
                        $intervalmonth = new DateInterval('P1D');
    
                        $daterangemonth = new DatePeriod($beginmonth, $intervalmonth ,$endmonth);
    
                        $monthworkdays = array();
    
                        foreach($daterangemonth as $datemonth){
    
                            array_push($monthworkdays,$datemonth->format("Y-m-d"));
    
                        }
                        
        
                    }elseif(strtolower($getrate[0]->type) == 'project'){
    
                        $workdays = array();
        
                        // $begin = new DateTime($getdaterange[0]->datefrom);
    
                        // $end = new DateTime($getdaterange[0]->dateto);
    
                        // $end = $end->modify( '+1 day' ); 
                        
                        // $interval = new DateInterval('P1D');
    
                        // $daterange = new DatePeriod($begin, $interval ,$end);
    
                        // $daysperiod = array();
    
                        // foreach($daterange as $date){
    
                        //     array_push($daysperiod,$date->format("Y-m-d"));
    
                        // }
                        
                        foreach($payrollworkingdays as $dayperiod){
                            
                            $day_name = date('D', strtotime($dayperiod)); // Trim day name to 3 chars
    
                            if($getrate[0]->projectbasedtype == 'perday'){
    
                                // if($day_name != 'Sun'){
        
                                    $workdays[] = $dayperiod;
                                    
                                // }
    
                            }
                            elseif($getrate[0]->projectbasedtype == 'persalaryperiod'){
        
                                    $workdays[] = $dayperiod;
                                
                            }
                            elseif($getrate[0]->projectbasedtype == 'permonth'){
        
                                    $workdays[] = $dayperiod;
                                
                            }
        
    
                        }
        
                        $beginmonth = new DateTime(date('Y-m-01', strtotime($getdaterange[0]->datefrom)));
    
                        $endmonth = new DateTime(date('Y-m-t', strtotime($getdaterange[0]->datefrom)));
    
                        $endmonth = $endmonth->modify( '+1 day' ); 
                        
                        $intervalmonth = new DateInterval('P1D');
    
                        $daterangemonth = new DatePeriod($beginmonth, $intervalmonth ,$endmonth);
    
                        $monthworkdays = array();
    
                        foreach($daterangemonth as $datemonth){
                            array_push($monthworkdays,$datemonth->format("Y-m-d"));
    
                        }
    
                        // return date('Y-m-t', strtotime($getdaterange[0]->datefrom));
                        // $monthdaycount = getWorkingDays(date('Y-m-01', strtotime($getdaterange[0]->datefrom)), date('Y-m-t', strtotime($getdaterange[0]->datefrom)));
                        // // $monthdaycount+=1;
        
                        // for ($i = 1; $i <= $monthdaycount; $i++) {
            
                        //     $date = date('Y').'-'.date('m',strtotime($getdaterange[0]->datefrom)).'-'.$i; //format date
                        //     // return $date;
                        //     $get_name = Carbon::create($date)->isoFormat('ddd'); //get week day
            
                        //     $day_name = substr($get_name, 0, 3); // Trim day name to 3 chars
        
                        //     //if not a weekend add day to array
                            
                        //     $monthworkdays[] = $date;
                                
                        // }
        
                    }
                }
                // return $monthworkdays;
                // ====================================================================================================================== calculate daily/hpurly rates
                // return $getrate;
    
                if(count($getrate) == 0){
    
                    $getrate = array();
    
                    array_push($getrate,(object)array(
                        'amount'    =>  0,
                        'type'      =>  " ",
                        'hoursperday'      =>  0,
                        'projectbasedtype' => ""
                    ));
    
                    $dailyrate = 0;
    
                    $hourlyrate = 0;
    
    
                }else{
    
                    if(strtolower($getrate[0]->type) == 'monthly'){
    
                        if(count($workdays) == 0){
    
                            $dailyrate =  $getrate[0]->amount / (int)(date('t') - date('01'));
    
                        }else{
                            // round($getrate[0]->amount / $monthdaycount, 2);
                            $dailyrate =  $getrate[0]->amount / count($monthworkdays);
                            
                            
                        }
                        if($dailyrate == 0 || $getrate[0]->hoursperday == 0){
                            $hourlyrate = 0;
                        }else{
                            $hourlyrate = ($dailyrate)/$getrate[0]->hoursperday;
                        }
                        
    
                    }
                    elseif(strtolower($getrate[0]->type) == 'daily'){
        
                        $dailyrate =  round($getrate[0]->amount, 2);
                
                        $hourlyrate = ($dailyrate)/$getrate[0]->hoursperday;
    
                    }
                    elseif(strtolower($getrate[0]->type) == 'hourly'){
                
                        $hoursperday = 0;
                        if($hoursperday == 0){
                            if($getrate[0]->mondayhours > 0){
                                $hoursperday = $getrate[0]->mondayhours;
                            }
                            if($getrate[0]->tuesdayhours > 0){
                                $hoursperday = $getrate[0]->tuesdayhours;
                            }
                            if($getrate[0]->wednesdayhours > 0){
                                $hoursperday = $getrate[0]->wednesdayhours;
                            }
                            if($getrate[0]->thursdayhours > 0){
                                $hoursperday = $getrate[0]->thursdayhours;
                            }
                            if($getrate[0]->fridayhours > 0){
                                $hoursperday = $getrate[0]->fridayhours;
                            }
                            if($getrate[0]->saturdayhours > 0){
                                $hoursperday = $getrate[0]->saturdayhours;
                            }
                            if($getrate[0]->sundayhours > 0){
                                $hoursperday = $getrate[0]->sundayhours;
                            }
                        }
                        
                        $dailyrate = ($getrate[0]->amount/$hoursperday);
                        
                        $hourlyrate = $getrate[0]->amount;
    
                    }
                    elseif(strtolower($getrate[0]->type) == 'project'){
                        // return $getrate[0]->hoursperday;
                        // return $workdays;
                        if($getrate[0]->projectbasedtype == 'persalaryperiod'){
                            
                            $dailyrate =  $getrate[0]->amount/count($workdays); 
    
                            $hourlyrate =  ($getrate[0]->amount/count($workdays))/$getrate[0]->hoursperday; 
    
                        }
                        elseif($getrate[0]->projectbasedtype == 'perday'){
                            
                            $dailyrate = $getrate[0]->amount;
    
                            $hourlyrate = $getrate[0]->amount/$getrate[0]->hoursperday;
    
                        }
                        elseif($getrate[0]->projectbasedtype == 'permonth'){
                            
                            $hourlyrate = ($getrate[0]->amount/count($monthworkdays))/$getrate[0]->hoursperday;
    
                            $dailyrate =  $getrate[0]->amount/count($monthworkdays); 

                            
                            // return
                            
                        }
                        
                    }
                    // return $dailyrate;
    
                }
                
                // ====================================================================================================================== calculate attendance salary
                $getlatedeductionsetup = Db::table('deduction_tardinesssetup')
                    ->where('status','1')
                    ->first();
                    // return 
                    
                if(strtolower($getlatedeductionsetup->type) == 'custom'){
                    
                    $deductiontardinessapplication = Db::table('deduction_tardinessapplication')
                        ->where('departmentid',$employeeslist[0]->departmentid)
                        ->where('deleted','0')
                        ->get();
                    if(count($deductiontardinessapplication)==0){

                    }else{
                        $deductioncomputation = Db::table('deduction_tardinessdetail')
                            ->where('id',$deductiontardinessapplication[0]->tardinessdetailid)
                            ->where('deleted','0')
                            ->get();
                            
                    } 
                }

                
                $getAttendance = Db::table('teacherattendance') 
                    ->where('teacher_id',$employeeslist[0]->id)
                    ->whereBetween('tdate',[$getdaterange[0]->datefrom,$getdaterange[0]->dateto])
                    ->where('deleted','0')
                    ->get();
                    
                    
                $getsyid = DB::table('sy')
                    ->where('isactive','1')
                    ->first();
    
                $getholidays = DB::table('schoolcal')
                    ->join('schoolcaltype','schoolcal.type','=','schoolcaltype.id')
                    ->where('schoolcal.syid',$getsyid->id)
                    ->where('schoolcal.deleted','0')
                    ->where('schoolcaltype.type','1')
                    ->get();
    
                $gettimesched = DB::table('employee_customtimesched')
                    ->where('employeeid',$employeeslist[0]->id)
                    ->get();

                    
                if(count($gettimesched) == 0){

                    DB::table('employee_customtimesched')
                        ->insert([
                            'employeeid'    =>  $employeeslist[0]->id,
                            'amin'          =>  '07:30:00',
                            'amout'         =>  '12:00:00',
                            'pmin'          =>  '01:00:00',
                            'pmout'         =>  '04:30:00',
                            'createdby'     =>  $my_id->id,
                            'createdon'     =>  date('Y-m-d H:i:s')
                        ]);

                    $gettimesched = DB::table('employee_customtimesched')
                        ->where('employeeid',$employeeslist[0]->id)
                        ->get();
                }
                
                $latedeductionamount = 0;

                $lateminutes = 0;

                $undertimeminutes = 0;
                
                $holidaypay = 0;
    
                $dailynumofhours = 0;
                
                if(count($getrate) > 0){
                    
                    if(count($getAttendance) == 0){

                        foreach($workdays as $workdaydefault){

                            // -----------------------------------holidays
                                    
                            $beginholiday = new DateTime($getholiday->datefrom);

                            $endholiday = new DateTime($getholiday->dateto);

                            $endholiday = $endholiday->modify( '+1 day' ); 
                            
                            $intervalholiday = new DateInterval('P1D');

                            $daterangeholiday = new DatePeriod($beginholiday, $intervalholiday ,$endholiday);

                            $daysperiodholiday = array();

                            foreach($daterangeholiday as $dateholiday){

                                array_push($daysperiodholiday,$dateholiday->format("Y-m-d"));

                            }
                            
                            if(in_array($workdaydefault,$daysperiodholiday)){

                                $holidaypay += ($dailyrate * ($getholiday->ratepercentagenowork/100));
                                
                            }

                        }

                    }else{

                            
                        foreach($getAttendance as $attendance){

                            
                            if(in_array($attendance->tdate,$workdays)){

                                $holiday = 0;

                                $holidaytype = 0;

                                // -----------------------------------holidays

                                foreach ($getholidays as $getholiday) {
                                        
                                    $beginholiday = new DateTime($getholiday->datefrom);

                                    $endholiday = new DateTime($getholiday->dateto);

                                    $endholiday = $endholiday->modify( '+1 day' ); 
                                    
                                    $intervalholiday = new DateInterval('P1D');

                                    $daterangeholiday = new DatePeriod($beginholiday, $intervalholiday ,$endholiday);

                                    $daysperiodholiday = array();

                                    foreach($daterangeholiday as $dateholiday){

                                        array_push($daysperiodholiday,$dateholiday->format("Y-m-d"));

                                    }
                                    if(in_array($attendance->tdate,$daysperiodholiday)){

                                        $holiday = 1;

                                        $holidaytype = $getholiday->id;

                                    }

                                }

                                // -----------------------------------endholidays

                            
                                if($attendance->in_am == null){

                                    $am_in = date('h:i:s', strtotime('12:00:00')); 
                    
                                }
                                else{
                                    
                                    $am_in = $attendance->in_am; 

                                }
                                
                                if($attendance->out_am == null){

                                    $am_out = date('h:i:s', strtotime('12:00:00')); 
                    
                                }else{

                                    $am_out = $attendance->out_am; 

                                }
                                if($attendance->in_pm == null){

                                    $pm_in = date('h:i:s', strtotime('05:00:00')); 
                    
                                }else{

                                    $pm_in = $attendance->in_pm; 

                                }
                                
                                if($attendance->out_pm == null){

                                    $pm_out = date('h:i:s', strtotime('05:00:00')); 
                    
                                }else{

                                    $pm_out = $attendance->out_pm; 

                                }

                              
                                
                                if(strtolower($getlatedeductionsetup->type) == 'custom' && count($deductiontardinessapplication) > 0){

                                    

                                    $amdatetime1 = strtotime($gettimesched[0]->amin);

                                    // $amdatetime2 = strtotime($attendance->in_am);
                                    $amdatetime2 = strtotime(date('H:i:s',(strtotime($attendance->in_am.' AM'))));

                                    $amtimedifference = $amdatetime2 - $amdatetime1 ;

                                    if($amtimedifference > 0){

                                        // $amminuteselapsed = ($amtimedifference) / 60 ;
                                        $amminuteselapsed = (($amtimedifference) / 60 ) / 60;

                                        // $lateminutes+=$amminuteselapsed;

                                    }else{

                                        $amminuteselapsed = 0 ;

                                    }

                                    if(count($deductioncomputation) > 0){

                                        if($deductioncomputation[0]->minutes == 1){
                                            
                                            if($deductioncomputation[0]->basisfixedamount == 1){

                                                $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * $deductioncomputation[0]->amount;

                                            }
                                            if($deductioncomputation[0]->basispercentage == 1){
                                                
                                                if(strtolower($getrate[0]->type) == 'hourly'){
                                                    if($getrate[0]->mondays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'monday'){
                                                            $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->mondayhours)/60);
                                                        }
                                                    }
                                                    if($getrate[0]->tuesdays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'tuesday'){
                                                        $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->tuesdayhours)/60);
                                                        }
                                                    }
                                                    if($getrate[0]->wednesdays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'wednesday'){
                                                        $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->wednesdayhours)/60);
                                                        }
                                                    }
                                                    if($getrate[0]->thursdays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'thursday'){
                                                        $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->thursdayhours)/60);
                                                        }
                                                    }
                                                    if($getrate[0]->fridays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'friday'){
                                                        $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->fridayhours)/60);
                                                        }
                                                    }
                                                    if($getrate[0]->saturdays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'saturday'){
                                                        $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->saturdayhours)/60);
                                                        }
                                                    }
                                                    if($getrate[0]->sundays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'sunday'){
                                                        $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->sundayhours)/60);
                                                        }
                                                    }
                                                }
                                                elseif(strtolower($getrate[0]->type) == 'daily'){

                                                    $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->hoursperday)/60);
                                                    
                                                }
                                                elseif(strtolower($getrate[0]->type) == 'monthly'){

                                                    $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->hoursperday)/60);

                                                }
                                                elseif(strtolower($getrate[0]->type) == 'project'){

                                                    $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * (($dailyrate/$getrate[0]->hoursperday)/60);

                                                }

                                            }


                                        }


                                    }
                                    // $lateminutes+=$amminuteselapsed;
                                   
                                    // return $lateminutes;

                                }else{


                                    $amdatetime1 = strtotime('08:00:00');

                                    $amdatetime2 = strtotime($am_in);

                                    $amtimedifference = $amdatetime2 - $amdatetime1 ;

                                    if($amtimedifference > 0){

                                        // $amminuteselapsed = ($amtimedifference) / 60 ;
                                        $amminuteselapsed = (($amtimedifference) / 60 ) / 60;

                                        $lateminutes+=$amminuteselapsed;

                                    }else{

                                        $amminuteselapsed = 0 ;

                                    }            
                                  
                                    
                                    
                                    if(strtolower($getrate[0]->type) == 'hourly'){
                                        
                                        if($getrate[0]->mondays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'monday'){
                                                $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->mondayhours)/60);
                                            }
                                        }
                                        if($getrate[0]->tuesdays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'tuesday'){
                                            $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->tuesdayhours)/60);
                                            }
                                        }
                                        if($getrate[0]->wednesdays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'wednesday'){
                                            $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->wednesdayhours)/60);
                                            }
                                        }
                                        if($getrate[0]->thursdays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'thursday'){
                                            $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->thursdayhours)/60);
                                            }
                                        }
                                        if($getrate[0]->fridays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'friday'){
                                            $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->fridayhours)/60);
                                            }
                                        }
                                        if($getrate[0]->saturdays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'saturday'){
                                            $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->saturdayhours)/60);
                                            }
                                        }
                                        if($getrate[0]->sundays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'sunday'){
                                            $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->sundayhours)/60);
                                            }
                                        }
                                    }
                                    elseif(strtolower($getrate[0]->type) == 'daily'){

                                        $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->hoursperday)/60);
                                        
                                    }
                                    elseif(strtolower($getrate[0]->type) == 'monthly'){
                                        
                                        $latedeductionamount+= ($amminuteselapsed) * $hourlyrate;
                                        // $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->hoursperday)/60);

                                        

                                    }
                                    elseif(strtolower($getrate[0]->type) == 'project'){

                                        $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->hoursperday)/60);

                                    }

                                    // $lateminutes+=$amminuteselapsed;



                                }

                                $amto_time = strtotime($am_out);

                                $amfrom_time = strtotime($am_in);

                                $totalam = round(abs($amto_time - $amfrom_time) / 60) / 60;
                                
                                
                                // if($attendance->in_pm == null){

                                //     $pm_in = date('h:i:s'); 
                    
                                // }
                                // else{
                                    // $pmminuteselapsed = round(abs($pmdatetime1 - $pmdatetime2) / 60);

                                if(strtolower($getlatedeductionsetup->type) == 'custom' && count($deductiontardinessapplication) > 0){

                                    $pmdatetime1 = strtotime($gettimesched[0]->pmin);

                                    $pmdatetime2 = strtotime(date('H:i:s',(strtotime($attendance->in_pm.' PM'))));

                                    $pmtimedifference = $pmdatetime2 - $pmdatetime1 ;

                                    if($pmtimedifference > 0){

                                        $pmminuteselapsed = (($pmtimedifference) / 60 ) / 60;

                                        
                                        $lateminutes+=$pmminuteselapsed;

                                    }else{

                                        $pmminuteselapsed = 0 ;

                                    }
                                
                                    if(count($deductioncomputation) > 0){

                                        if($deductioncomputation[0]->minutes == 1){

                                            if($deductioncomputation[0]->basisfixedamount == 1){

                                                $latedeductionamount+= ($pmminuteselapsed/$deductioncomputation[0]->lateduration) * $deductioncomputation[0]->amount;
                                                
                                            }
                                            if($deductioncomputation[0]->basispercentage == 1){
                                                
                                                if(strtolower($getrate[0]->type) == 'hourly'){
                                                    if($getrate[0]->mondays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'monday'){
                                                            $latedeductionamount+= ($pmminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->mondayhours)/60);
                                                        }
                                                    }
                                                    if($getrate[0]->tuesdays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'tuesday'){
                                                        $latedeductionamount+= ($pmminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->tuesdayhours)/60);
                                                        }
                                                    }
                                                    if($getrate[0]->wednesdays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'wednesday'){
                                                        $latedeductionamount+= ($pmminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->wednesdayhours)/60);
                                                        }
                                                    }
                                                    if($getrate[0]->thursdays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'thursday'){
                                                        $latedeductionamount+= ($pmminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->thursdayhours)/60);
                                                        }
                                                    }
                                                    if($getrate[0]->fridays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'friday'){
                                                        $latedeductionamount+= ($pmminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->fridayhours)/60);
                                                        }
                                                    }
                                                    if($getrate[0]->saturdays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'saturday'){
                                                        $latedeductionamount+= ($pmminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->saturdayhours)/60);
                                                        }
                                                    }
                                                    if($getrate[0]->sundays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'sunday'){
                                                        $latedeductionamount+= ($pmminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->sundayhours)/60);
                                                        }
                                                    }
                                                }
                                                elseif(strtolower($getrate[0]->type) == 'daily'){

                                                    $latedeductionamount+= ($pmminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->hoursperday)/60);
                                                    
                                                }
                                                elseif(strtolower($getrate[0]->type) == 'monthly'){

                                                    $latedeductionamount+= ($pmminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->hoursperday)/60);

                                                }
                                                elseif(strtolower($getrate[0]->type) == 'project'){

                                                    $latedeductionamount+= ($pmminuteselapsed/$deductioncomputation[0]->lateduration) * (($dailyrate/$getrate[0]->hoursperday)/60);

                                                }

                                            }

                                        }

                                    }
                                    // $lateminutes+=$amminuteselapsed;
                                    
                                }else{

                                   

                                    // $pmdatetime1 = strtotime('01:00:00');

                                    // $pmdatetime2 = strtotime($attendance->in_pm);
                                    // // return date('H:i:s',(strtotime($attendance->in_pm.' PM')));

                                  

                                    // $pmtimedifference = $pmdatetime2 - $pmdatetime1 ;

                                    // // return $attendance->out_am;

                                   
                                    
                                    // if($pmtimedifference > 0){
                                        
                                    //     $pmminuteselapsed = (($pmtimedifference) / 60 ) / 60;
                                        
                                    //     $lateminutes+=$pmminuteselapsed;

                                    // }else{

                                    //     $pmminuteselapsed = 0 ;

                                    // }

                                    // if($attendance->out_am == '11:58:00'){

                                    $intimeamtardy = ( strtotime($attendance->in_am) - strtotime('08:00:00') )   /60;
                                    $outtimeamtardy = ( strtotime('12:00:00') - strtotime($attendance->out_am) ) /60;

                                    
                                    $intimepmtardy = (  strtotime($attendance->in_pm) - strtotime('13:00:00') ) /60;
                                    $outtimepmtardy = ( strtotime('05:00:00') - strtotime($attendance->out_pm) ) /60;

                                    if($intimeamtardy > 0 ){
                                        $lateminutes += $intimeamtardy;
                                    }
                                    if($outtimeamtardy > 0 ){
                                        $lateminutes += $outtimeamtardy;
                                    }
                                    if($intimepmtardy > 0 ){
                                        $lateminutes += $intimepmtardy;
                                    }
                                    if($outtimepmtardy > 0 ){
                                        $lateminutes += $outtimepmtardy;
                                    }

                                    // }
                                    // if($attendance->tdate == '2020-05-12'){

                                    //     return $lateminutes;

                                    // }
                                    
                                    

                                    // if(strtolower($getrate[0]->type) == 'hourly'){
                                        
                                    //     if($getrate[0]->mondays == 1){
                                    //         if(strtolower(date('l', strtotime($attendance->tdate))) == 'monday'){
                                    //             $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->mondayhours)/60);
                                    //         }
                                    //     }
                                    //     if($getrate[0]->tuesdays == 1){
                                    //         if(strtolower(date('l', strtotime($attendance->tdate))) == 'tuesday'){
                                    //         $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->tuesdayhours)/60);
                                    //         }
                                    //     }
                                    //     if($getrate[0]->wednesdays == 1){
                                    //         if(strtolower(date('l', strtotime($attendance->tdate))) == 'wednesday'){
                                    //         $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->wednesdayhours)/60);
                                    //         }
                                    //     }
                                    //     if($getrate[0]->thursdays == 1){
                                    //         if(strtolower(date('l', strtotime($attendance->tdate))) == 'thursday'){
                                    //         $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->thursdayhours)/60);
                                    //         }
                                    //     }
                                    //     if($getrate[0]->fridays == 1){
                                    //         if(strtolower(date('l', strtotime($attendance->tdate))) == 'friday'){
                                    //         $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->fridayhours)/60);
                                    //         }
                                    //     }
                                    //     if($getrate[0]->saturdays == 1){
                                    //         if(strtolower(date('l', strtotime($attendance->tdate))) == 'saturday'){
                                    //         $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->saturdayhours)/60);
                                    //         }
                                    //     }
                                    //     if($getrate[0]->sundays == 1){
                                    //         if(strtolower(date('l', strtotime($attendance->tdate))) == 'sunday'){
                                    //         $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->sundayhours)/60);
                                    //         }
                                    //     }
                                    // }
                                    // elseif(strtolower($getrate[0]->type) == 'daily'){

                                    //     $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->hoursperday)/60);
                                        
                                    // }
                                    // elseif(strtolower($getrate[0]->type) == 'monthly'){
                                        
                                    //     // return $hourlyrate;
                                    //     // $latedeductionamount+= ($pmminuteselapsed) * ($hourlyrate);
                                    //     $latedeductionamount+= ($pmminuteselapsed) * ((($dailyrate/$getrate[0]->hoursperday)/60));

                                    // }
                                    // elseif(strtolower($getrate[0]->type) == 'project'){
                                        
                                    //     $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->hoursperday)/60);

                                    // }


                                  

                                }

                                // return $latedeductionamount;
                                
                                $pmto_time = strtotime($pm_out.' PM');

                                $pmfrom_time = strtotime($pm_in);

                                // $totalpm = round(abs($pmto_time - $pmfrom_time) / 60) / 60;
                                
                                $totalpm = round(abs($pmto_time - $pmfrom_time) / 60) / 60;
                                
                                
                                $totalhours = ($totalam + $totalpm);
                                

                                
                                if($holiday == 1){
                                        
                                    // ========================================================================== IF NOT HOLIDAYS =================================================================
                                    // ========================================================================== IF NOT HOLIDAYS =================================================================
    
                                    $getholidayrate = Db::table('schoolcaltype')
                                        ->where('id',$holidaytype)
                                        ->get();
    
                                    if(strtolower($getrate[0]->type) == 'hourly'){
                                            
                                        if($getrate[0]->mondays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'monday'){
                                                if($totalhours==$getrate[0]->mondayhours){
    
                                                    $dailynumofhours += $getrate[0]->mondayhours; 
    
                                                    $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                
                                                }
                                                // elseif($totalhours>$getrate[0]->mondayhours){
                                                    
                                                //     $dailynumofhours += $getrate[0]->mondayhours; 
                                                //     $dailyovertimehours += ($totalhours - $getrate[0]->mondayhours);
    
                                                //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                    
                                                //     $holidayovertimepay+= (($totalhours - $getrate[0]->mondayhours) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
                
                                                // }
                                                elseif($totalhours<$getrate[0]->mondayhours){
                                                    
                                                    $dailynumofhours += $totalhours; 
    
                                                    $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                }
                                            }
                                        }
                                        if($getrate[0]->tuesdays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'tuesday'){
                                                if($totalhours==$getrate[0]->tuesdayhours){
    
                                                    $dailynumofhours += $getrate[0]->tuesdayhours; 
    
                                                    $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                
                                                }
                                                // elseif($totalhours>$getrate[0]->tuesdayhours){
                                                    
                                                //     $dailynumofhours += $getrate[0]->tuesdayhours; 
                                                //     $dailyovertimehours += ($totalhours - $getrate[0]->tuesdayhours);
    
                                                //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                    
                                                //     $holidayovertimepay+= (($totalhours - $getrate[0]->tuesdayhours) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
                
                                                // }
                                                elseif($totalhours<$getrate[0]->tuesdayhours){
                                                    
                                                    $dailynumofhours += $totalhours; 
    
                                                    $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                }
                                            }
                                        }
                                        if($getrate[0]->wednesdays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'wednesday'){
                                                if($totalhours==$getrate[0]->wednesdayhours){
    
                                                    $dailynumofhours += $getrate[0]->wednesdayhours; 
    
                                                    $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                
                                                }
                                                // elseif($totalhours>$getrate[0]->wednesdayhours){
                                                    
                                                //     $dailynumofhours += $getrate[0]->wednesdayhours; 
                                                //     $dailyovertimehours += ($totalhours - $getrate[0]->wednesdayhours);
    
                                                //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                    
                                                //     $holidayovertimepay+= (($totalhours - $getrate[0]->wednesdayhours) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
                
                                                // }
                                                elseif($totalhours<$getrate[0]->wednesdayhours){
                                                    
                                                    $dailynumofhours += $totalhours; 
    
                                                    $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                }
                                            }
                                        }
                                        if($getrate[0]->thursdays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'thursday'){
                                                if($totalhours==$getrate[0]->thursdayhours){
    
                                                    $dailynumofhours += $getrate[0]->thursdayhours; 
    
                                                    $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                
                                                }
                                                // elseif($totalhours>$getrate[0]->thursdayhours){
                                                    
                                                //     $dailynumofhours += $getrate[0]->thursdayhours; 
                                                //     $dailyovertimehours += ($totalhours - $getrate[0]->thursdayhours);
    
                                                //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                    
                                                //     $holidayovertimepay+= (($totalhours - $getrate[0]->thursdayhours) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
                
                                                // }
                                                elseif($totalhours<$getrate[0]->thursdayhours){
                                                    
                                                    $dailynumofhours += $totalhours; 
    
                                                    $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                }
                                            }
                                        }
                                        if($getrate[0]->fridays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'friday'){
                                                if($totalhours==$getrate[0]->fridayhours){
    
                                                    $dailynumofhours += $getrate[0]->fridayhours; 
    
                                                    $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                
                                                }
                                                // elseif($totalhours>$getrate[0]->fridayhours){
                                                    
                                                //     $dailynumofhours += $getrate[0]->fridayhours; 
                                                //     $dailyovertimehours += ($totalhours - $getrate[0]->fridayhours);
    
                                                //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                    
                                                //     $holidayovertimepay+= (($totalhours - $getrate[0]->fridayhours) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
                
                                                // }
                                                elseif($totalhours<$getrate[0]->fridayhours){
                                                    
                                                    $dailynumofhours += $totalhours; 
    
                                                    $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                }
                                            }
                                        }
                                        if($getrate[0]->saturdays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'saturday'){
                                                if($totalhours==$getrate[0]->saturdayhours){
    
                                                    $dailynumofhours += $getrate[0]->saturdayhours; 
    
                                                    $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                
                                                }
                                                // elseif($totalhours>$getrate[0]->saturdayhours){
                                                    
                                                //     $dailynumofhours += $getrate[0]->saturdayhours; 
                                                //     $dailyovertimehours += ($totalhours - $getrate[0]->saturdayhours);
    
                                                //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                    
                                                //     $holidayovertimepay+= (($totalhours - $getrate[0]->saturdayhours) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
                
                                                // }
                                                elseif($totalhours<$getrate[0]->saturdayhours){
                                                    
                                                    $dailynumofhours += $totalhours; 
    
                                                    $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                }
                                            }
                                        }
                                        if($getrate[0]->sundays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'sunday'){
    
                                                if($totalhours==$getrate[0]->sundayhours){
    
                                                    $dailynumofhours += $getrate[0]->sundayhours; 
    
                                                    $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                
                                                }
                                                // elseif($totalhours>$getrate[0]->sundayhours){
                                                    
                                                //     $dailynumofhours += $getrate[0]->sundayhours; 
                                                //     $dailyovertimehours += ($totalhours - $getrate[0]->sundayhours);
    
                                                //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                    
                                                //     $holidayovertimepay+= (($totalhours - $getrate[0]->sundayhours) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
                
                                                // }
                                                elseif($totalhours<$getrate[0]->sundayhours){
                                                    
                                                    $dailynumofhours += $totalhours; 
    
                                                    $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                }
                                            }
                                        }
    
                                    }
                                    elseif(strtolower($getrate[0]->type) == 'daily'){
                                        
                                        if(count($getholidayrate)>0){
    
                                            if($totalhours==$getrate[0]->hoursperday){
    
                                                $dailynumofhours += $getrate[0]->hoursperday; 
    
                                                $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
            
                                            }
                                            // elseif($totalhours>$getrate[0]->hoursperday){
                                                
                                            //     $dailynumofhours += $getrate[0]->hoursperday; 
                                            //     $dailyovertimehours += ($totalhours - $getrate[0]->hoursperday);
    
                                            //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                
                                            //     $holidayovertimepay+= (($totalhours - $getrate[0]->hoursperday) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
            
                                            // }
                                            elseif($totalhours<$getrate[0]->hoursperday){
                                                
                                                $dailynumofhours += $totalhours; 
    
                                                $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                            }
    
                                        }
    
                                    }
                                    elseif(strtolower($getrate[0]->type) == 'monthly'){
                                        
                                        
                                        if(count($getholidayrate)>0){
    
                                            if($totalhours==$getrate[0]->hoursperday){
    
                                                $dailynumofhours += $getrate[0]->hoursperday; 
    
                                                $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
            
                                            }
                                            // elseif($totalhours>$getrate[0]->hoursperday){
                                                
                                            //     $dailynumofhours += $getrate[0]->hoursperday; 
                                            //     $dailyovertimehours += ($totalhours - $getrate[0]->hoursperday);
    
                                            //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                
                                            //     $holidayovertimepay+= (($totalhours - $getrate[0]->hoursperday) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
            
                                            // }
                                            elseif($totalhours<$getrate[0]->hoursperday){
                                                
                                                $dailynumofhours += $totalhours; 
    
                                                $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                            }
    
                                        }
                                    }
                                    elseif(strtolower($getrate[0]->type) == 'project'){
                                        
                                        if(count($getholidayrate)>0){
    
                                            if($totalhours==$getrate[0]->hoursperday){
    
                                                $dailynumofhours += $getrate[0]->hoursperday; 
    
                                                $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
            
                                            }
                                            // elseif($totalhours>$getrate[0]->hoursperday){
                                                
                                            //     $dailynumofhours += $getrate[0]->hoursperday; 
                                            //     $dailyovertimehours += ($totalhours - $getrate[0]->hoursperday);
    
                                            //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                
                                            //     $holidayovertimepay+= (($totalhours - $getrate[0]->hoursperday) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
            
                                            // }
                                            elseif($totalhours<$getrate[0]->hoursperday){
                                                
                                                $dailynumofhours += $totalhours; 
    
                                                $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                            }
    
                                        }
                                    }
                                }else{
                                    // return 'asdasd';
                                    // ========================================================================== IF NOT HOLIDAYS =================================================================
                                    // ========================================================================== IF NOT HOLIDAYS =================================================================
    
                                    if(strtolower($getrate[0]->type) == 'hourly'){
                                        if($getrate[0]->mondays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'monday'){
                                                if($totalhours<$getrate[0]->mondayhours){
                    
                                                    $dailynumofhours += $totalhours; 
                    
                                                }elseif($totalhours>$getrate[0]->mondayhours){
                                                    
                                                    $dailynumofhours += $getrate[0]->mondayhours; 
                    
                                                }
                                            }
                                        }
                                        if($getrate[0]->tuesdays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'tuesday'){
                                                if($totalhours<$getrate[0]->tuesdayhours){
                    
                                                    $dailynumofhours += $totalhours; 
                    
                                                }elseif($totalhours>$getrate[0]->tuesdayhours){
                                                    
                                                    $dailynumofhours += $getrate[0]->tuesdayhours; 
                    
                                                }
                                            }
                                        }
                                        if($getrate[0]->wednesdays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'wednesday'){
                                                if($totalhours<$getrate[0]->wednesdayhours){
                    
                                                    $dailynumofhours += $totalhours; 
                    
                                                }elseif($totalhours>$getrate[0]->wednesdayhours){
                                                    
                                                    $dailynumofhours += $getrate[0]->wednesdayhours; 
                    
                                                }
                                            }
                                        }
                                        if($getrate[0]->thursdays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'thursday'){
                                                if($totalhours<$getrate[0]->thursdayhours){
                    
                                                    $dailynumofhours += $totalhours; 
                    
                                                }elseif($totalhours>$getrate[0]->thursdayhours){
                                                    
                                                    $dailynumofhours += $getrate[0]->thursdayhours; 
                    
                                                }
                                            }
                                        }
                                        if($getrate[0]->fridays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'friday'){
                                                if($totalhours<$getrate[0]->fridayhours){
                    
                                                    $dailynumofhours += $totalhours; 
                    
                                                }elseif($totalhours>$getrate[0]->fridayhours){
                                                    
                                                    $dailynumofhours += $getrate[0]->fridayhours; 
                    
                                                }
                                            }
                                        }
                                        if($getrate[0]->saturdays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'saturday'){
                                                if($totalhours<$getrate[0]->saturdayhours){
                    
                                                    $dailynumofhours += $totalhours; 
                    
                                                }elseif($totalhours>$getrate[0]->saturdayhours){
                                                    
                                                    $dailynumofhours += $getrate[0]->saturdayhours; 
                    
                                                }
                                            }
                                        }
                                        if($getrate[0]->sundays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'sunday'){
                                                if($totalhours<$getrate[0]->sundayhours){
                    
                                                    $dailynumofhours += $totalhours; 
                    
                                                }elseif($totalhours>$getrate[0]->sundayhours){
                                                    
                                                    $dailynumofhours += $getrate[0]->sundayhours; 
                    
                                                }
                                            }
                                        }
                                    }
                                    elseif(strtolower($getrate[0]->type) == 'daily'){
        
                                        if($totalhours==$getrate[0]->hoursperday){
    
                                            $dailynumofhours += $getrate[0]->hoursperday; 
        
                                        }elseif($totalhours>$getrate[0]->hoursperday){
                                            
                                            $dailynumofhours += $getrate[0]->hoursperday; 
                                            // $dailyovertimehours += ($totalhours - $getrate[0]->hoursperday);
        
                                        }elseif($totalhours<$getrate[0]->hoursperday){
                                            
                                            $dailynumofhours += $totalhours; 
    
                                        }
    
                                    }
                                    elseif(strtolower($getrate[0]->type) == 'monthly'){
    
                                        if($totalhours>=$getrate[0]->hoursperday){
    
                                            $dailynumofhours += $getrate[0]->hoursperday; 
    
                                        }
                                        // elseif($totalhours>$getrate[0]->hoursperday){
                                            
                                        //     $dailynumofhours += $getrate[0]->hoursperday; 

                                        //     // $dailyovertimehours += ($totalhours - $getrate[0]->hoursperday);
    
                                        // }
                                        elseif($totalhours<$getrate[0]->hoursperday){
                                            
                                            $dailynumofhours += $totalhours; 
    
                                        }
    
                                    }
                                    elseif(strtolower($getrate[0]->type) == 'project'){
                                        $dailynumofhours += $totalhours; 
                                    }
                                }

                            }


                        }


                    }
                    
    
                }
                // return count($getAttendance);

                
                // return $lateminutes * ( $hourlyrate / 60 );
                // return $latedeductionamount/12;
                // return $latedeductionamount/count($getAttendance);
                // $latedeductionamount = $latedeductionamount/count($getAttendance);     
                
                // return $latedeductionamount;
                
                // ====================================================================================================================== calculate deductions
    
                // $workingdaysdeduction = array();
    
                // $day_countdeduction = cal_days_in_month($typecalendar, date('m'), date('Y')); // Get the amount of days
                
                // for ($i = 1; $i <= $day_countdeduction; $i++) {
    
                //     $dateformatdeduction = date('Y').'/'.date('m').'/'.$i; //format date
    
                //     $get_namedatededuction = Carbon::create($dateformatdeduction)->isoFormat('ddd'); //get week day
    
                //     $day_namededuction = substr($get_namedatededuction, 0, 3); // Trim day name to 3 chars
    
                //     //if not a weekend add day to array
                //     if($day_namededuction != 'Sun'){
                        
                //         $workingdaysdeduction[] = date('Y-m-d', strtotime($day_namededuction));
                        
                //     }
    
                // }
    
                // $numberofdaysinamonthdeduction = count($workingdaysdeduction);
    
                // ====================================================================================================================== standard deductions
    
                $totalStandardDeductions = 0;
    
                // $dailydeductionstandard = 0;
    
                $standarddeductions = array();
    
                $getdeductionstandard = Db::table('deduction_standard')
                    ->join('employee_deductionstandard','deduction_standard.id','=','employee_deductionstandard.deduction_typeid')
                    ->where('employee_deductionstandard.employeeid',$employeeslist[0]->id)
                    ->where('employee_deductionstandard.status','1')
                    ->where('deduction_standard.deleted','0')
                    ->get();
                    // return 
                foreach($getdeductionstandard as $deductionstandard){
                    if(strtolower($getrate[0]->type) == 'daily'){
                        $dailydeductionstandard = ($deductionstandard->eesamount)*$day_count;
                    }else{
                        $dailydeductionstandard = ($deductionstandard->eesamount /count($monthworkdays))*$day_count;
                    }
                // return $dailydeductionstandard;
                // return $day_count;
                    $totalStandardDeductions += $dailydeductionstandard;
                    // return $totalStandardDeductions;
    
                    array_push($standarddeductions,(object)array(
                        'deductiondetail'   => $deductionstandard,
                        'dailydeduction'    => number_format($dailydeductionstandard, 2, '.', ',')
                        // 'dailydeduction'    => number_format($dailydeductionstandard*$day_countdeduction, 2, '.', ',')
                    ));
    
                }
                // return $standarddeductions;
                    
                // ====================================================================================================================== other deductions
    
                // $dailydeductionothers = 0;
            
                $otherdeductions = array();
    
                $totalOtherDeductions = 0;
    
                $getdeductionothers = Db::table('employee_deductionother')
                    ->where('employee_deductionother.employeeid',$employeeslist[0]->id)
                    ->where('employee_deductionother.status','0')
                    ->where('employee_deductionother.deleted','0')
                    ->get();
    
                // $totalpaiddeductions = 0;
                // return $getdeductionothers;
    
                foreach($getdeductionothers as $getdeductionother){
                    
                    $totalpaiddeduction = 0;
    
                    $getdeductionothersdetails = Db::table('employee_deductionotherdetail')
                        ->where('headerid',$getdeductionother->id)
                        ->get();
                        
                    if(count($getdeductionothersdetails) > 0){
    
                        foreach($getdeductionothersdetails as $getdeductionothersdetail){
                            
                            $totalpaiddeduction+=$getdeductionothersdetail->amountpaid;
        
                        }
    
                    }
                    
                    if($totalpaiddeduction >= $getdeductionother->amount){
    
                        Db::table('employee_deductionother')
                            ->where('id', $getdeductionother->id)
                            ->update([
                                'status'    => 1
                            ]);
    
                    }elseif($totalpaiddeduction < $getdeductionother->amount){
    
                        if(strtolower($getrate[0]->type) == 'daily'){
                            $dailydeductionothers =(($getdeductionother->amount/$getdeductionother->term))*$day_count; //dailydeduction
                        }else{
                            $dailydeductionothers =(($getdeductionother->amount/$getdeductionother->term)/ count($monthworkdays))*$day_count; //dailydeduction
                        }
        
                        $totalOtherDeductions += $dailydeductionothers;
        
                        array_push($otherdeductions,(object)array(
                            'deductiondetail'   => $getdeductionother,
                            'dailydeduction'    => number_format($dailydeductionothers, 2, '.', ',')
                        ));
                        
                    }
                    
                }
                // return $otherdeductions;
                // ====================================================================================================================== calculate allowance
    
                // $workingdaysallowance = array();
    
                // $day_countallowance = cal_days_in_month($typecalendar, date('m'), date('Y')); // Get the amount of days
                
                // for ($i = 1; $i <= $day_countallowance; $i++) {
    
                //     $dateformatallowance = date('Y').'/'.date('m').'/'.$i; //format date
    
                //     $get_namedateallowance = Carbon::create($dateformatallowance)->isoFormat('ddd'); //get week day
    
                //     $day_nameallowance = substr($get_namedateallowance, 0, 3); // Trim day name to 3 chars
    
                //     //if not a weekend add day to array
                //     if($day_nameallowance != 'Sun'){
                        
                //         $workingdaysallowance[] = date('Y').'-'.date('m').'-'.$i;
                        
                //     }
    
                // }
    
                // $numberofdaysinamonthallowance = count($workingdaysallowance);
    
                // ====================================================================================================================== standard allowance
    
                $totalStandardAllowance = 0;
    
                // $dailyallowancestandard = 0;
    
                $standardallowances = array();
    
                $getallowancestandard = Db::table('allowance_standard')
                    ->join('employee_allowancestandard','allowance_standard.id','=','employee_allowancestandard.allowance_standardid')
                    ->where('employee_allowancestandard.employeeid',$employeeslist[0]->id)
                    ->where('employee_allowancestandard.status','1')
                    ->where('allowance_standard.deleted','0')
                    ->get();
                // return $getallowancestandard;
                foreach($getallowancestandard as $allowancestandard){
                    
                    if(strtolower($getrate[0]->type) == 'daily'){
                        $dailyallowancestandard = ($allowancestandard->amount)*$day_count;
                    }else{
                        $dailyallowancestandard = ($allowancestandard->amount / count($monthworkdays))*$day_count;
                    }
                    
                    $totalStandardAllowance += $dailyallowancestandard;
                    
                    array_push($standardallowances,(object)array(
                        'allowancedetail'   => $allowancestandard,
                        'dailyallowance'    => number_format($dailyallowancestandard, 2, '.', ',')
                        // 'dailyallowance'    => number_format($dailyallowancestandard*$day_countallowance, 2, '.', ',')
                    ));
    
                }
                // return $standardallowances;
                    
                // ====================================================================================================================== other allowance
    
                // $dailyallowanceothers = 0;
            
                $otherallowances = array();
    
                $totalOtherAllowance = 0;
    
                $getallowanceothers = Db::table('employee_allowanceother')
                    ->where('employee_allowanceother.employeeid',$employeeslist[0]->id)
                    ->where('employee_allowanceother.status','0')
                    ->where('employee_allowanceother.deleted','0')
                    ->get();
    
                // $totalpaiddeductions = 0;
    
                foreach($getallowanceothers as $getallowanceother){
                    
                    $totalpaidallowance = 0;
    
                    $getallowanceothersdetails = Db::table('employee_allowanceotherdetail')
                        ->where('headerid',$getallowanceother->id)
                        ->get();
                        
                    if(count($getallowanceothersdetails) > 0){
    
                        foreach($getallowanceothersdetails as $getallowanceothersdetails){
        
                            $totalpaidallowance+=$getallowanceothersdetails->amountpaid;
        
                        }
    
                    }
                    
                    if($totalpaidallowance >= $getallowanceother->amount){
    
                        Db::table('employee_allowanceother')
                            ->where('id', $getallowanceother->id)
                            ->update([
                                'status'    => 1
                            ]);
    
                    }elseif($totalpaidallowance < $getallowanceother->amount){
    
                        $dailyallowanceothers=(($getallowanceother->amount/$getallowanceother->term)/count($monthworkdays))*$day_count;; //dailydeduction
        
                        $totalOtherAllowance += $dailyallowanceothers;
        
                        array_push($otherallowances,(object)array(
                            'allowancedetail'   => $getallowanceother,
                            'dailyallowance'    => number_format($dailyallowanceothers, 2, '.', ',')
                        ));
    
                    }
    
                }
                    // return $dailynumofhours*;
                // ====================================================================================================================== salary summary
    
    
                $leaves = Db::table('employee_leaves')
                    ->join('hr_leaves','employee_leaves.leaveid','=','hr_leaves.id')
                    ->where('hr_leaves.deleted','0')
                    ->where('employee_leaves.payrolldone','0')
                    ->where('employee_leaves.status','approved')
                    ->where('employee_leaves.employeeid',$employeeslist[0]->id)
                    ->get();
                    // return $leaves;
                $leavesearn = 0;
                $leavesdeduct = 0;
                $leavesnumdays = 0;
                if(count($leaves) > 0){
                    
                    foreach($leaves as $leave){
                        $datediff  = strtotime($leave->dateto) - strtotime($leave->datefrom);
                        $leavesnumdays += round($datediff / (60 * 60 * 24)) + 1;
    
                        $beginleave = new DateTime($leave->datefrom);
    
                        $endleave = new DateTime($leave->dateto);
    
                        $endleave = $endleave->modify( '+1 day' ); 
                        
                        $intervalleave = new DateInterval('P1D');
    
                        $daterangeleave = new DatePeriod($beginleave, $intervalleave ,$endleave);
    
                        $daysperiodleave = array();
    
                        foreach($daterangeleave as $dateleave){
    
                            array_push($daysperiodleave,$dateleave->format("Y-m-d"));
    
                        }
    
                        $daysperiodholiday = array();
    
                        foreach ($getholidays as $getholiday) {
    
                            $beginholiday = new DateTime($getholiday->datefrom);
    
                            $endholiday = new DateTime($getholiday->dateto);
    
                            $endholiday = $endholiday->modify( '+1 day' ); 
                            
                            $intervalholiday = new DateInterval('P1D');
    
                            $daterangeholiday = new DatePeriod($beginholiday, $intervalholiday ,$endholiday);
    
    
                            foreach($daterangeholiday as $dateholiday){
    
                                array_push($daysperiodholiday,$dateholiday->format("Y-m-d"));
    
                            }
    
                        }
                        $numdaysholidays = 0;
                        $payholidaydays = 0;
                        foreach($daysperiodleave as $dayperiodleave){
                            if(in_array($dayperiodleave,$daysperiodholiday)){
                                $numdaysholidays+=1;
                                $payholidaydays+=($dailyrate* $getholiday->ratepercentagenowork)/100;
                                // $payholidaydays +=($dailyrate* $getholiday->ratepercentagenowork)/100;
                               
                            }
                        }
                        $getpay = DB::table('hr_leaves')
                            ->where('id',$leave->id)
                            ->where('deleted','0')
                            ->get();
                        if(count($getpay) == 0){
                            $leavesdeduct+=($dailyrate*$leavesnumdays);
                        }else{
                            if($getpay[0]->withpay == 0){
                                $leavesdeduct+=($dailyrate*$leavesnumdays);
                            }else{
                                $leavesearn+=($dailyrate*$leavesnumdays);
                            }
                        }
                        if($numdaysholidays>0){
                            $leavesearn+=$payholidaydays;
                            // if($leave->withpay == 1){
                            // }else{
                            //     $leavesdeduct+=($dailyrate*$leavesnumdays);
                            //     $leavesearn+=$payholidaydays;
                            // }
                        }
                        // return $numdaysholidays;
                      
                    }
                }
                
                // ====================================================================================================================== overtime

                $holidayovertimepay = 0;

                $overtimesalary = 0;

                $dailyovertimehours = 0;

                $overtimes = Db::table('employee_overtime')
                    ->where('employee_overtime.deleted','0')
                    ->where('employee_overtime.payrolldone','0')
                    ->where('employee_overtime.status','approved')
                    ->where('employee_overtime.employeeid',$employeeslist[0]->id)
                    ->get();
// return $getholidays;
                if(count($overtimes) > 0){
                    
                    $daysperiodholiday = array();
    
                    foreach ($getholidays as $getholiday) {

                        $beginholiday = new DateTime($getholiday->datefrom);

                        $endholiday = new DateTime($getholiday->dateto);

                        $endholiday = $endholiday->modify( '+1 day' ); 
                        
                        $intervalholiday = new DateInterval('P1D');

                        $daterangeholiday = new DatePeriod($beginholiday, $intervalholiday ,$endholiday);


                        foreach($daterangeholiday as $dateholiday){

                            array_push($daysperiodholiday,$dateholiday->format("Y-m-d"));

                        }

                    }

                    foreach($overtimes as $overtime){

                        $daysovertimelist = array();

                        $beginovertime = new DateTime($overtime->datefrom);

                        $endovertime = new DateTime($overtime->dateto);

                        $endovertime = $endovertime->modify( '+1 day' ); 
                        
                        $intervalovertime = new DateInterval('P1D');

                        $daterangeovertime = new DatePeriod($beginovertime, $intervalovertime ,$endovertime);

                        foreach($daterangeovertime as $dateovertime){
                            array_push($daysovertimelist,$dateovertime->format("Y-m-d"));
                        }
                        // return 'ada';
                        // return $daterangeovertime;
                        // return $hourlyrate;
                        foreach($daysovertimelist as $dayovertime){
                            if(in_array($dayovertime,$daysperiodholiday)){
                                
                                $holidayovertimepay+=(($hourlyrate* $getholiday->workon)/100)*$overtime->numofhours;
                                
                            }else{
                                $overtimesalary+=$hourlyrate*$overtime->numofhours;
                            }
                        }
                    }
                }
                // return $holidayovertimepay;
                // ====================================================================================================================== salary summary
                if(count($getrate) == 0){
                    $basicpay = 0;
        
                    $ratetype = "";
    
                    $projectbasedtype = "";
                
                    $attendancesalary = 0;
    
                    $overtimesalary = 0;
    
                    // $holidaypay = 0;
                    // $holidayovertimepay = 0;
    
                }else{
                    
                    $basicpay = ($getrate[0]->amount);
        
                    $ratetype = $getrate[0]->type;
    
                    $projectbasedtype = $getrate[0]->projectbasedtype;
                
                    $attendancesalary = ($dailynumofhours*$hourlyrate);
                    
                }
                // return $hourlyrate * 8;
                $totalearnings = ($attendancesalary + $overtimesalary + $totalStandardAllowance + $totalOtherAllowance + $holidaypay + $holidayovertimepay + $leavesearn);
    
                $totaldeductions = ($totalStandardDeductions + $totalOtherDeductions + $leavesdeduct + $latedeductionamount);
    
                $netsalary = ($totalearnings  -  $totaldeductions);
    
                $employeesalaryinfo = array();
    
                
                array_push($employeesalaryinfo, (object)array(
                    'employee_info'         => $employeeslist,
                    'basicpay'              => number_format($basicpay, 2, '.', ','),
                    'ratetype'              => $ratetype,
                    'projectratetype'       => $projectbasedtype,
                    'allowancestandards'    =>  $standardallowances,
                    'allowanceothers'       =>  $otherallowances,
                    'deductionstandards'    =>  $standarddeductions,
                    'deductionothers'       =>  $otherdeductions,
                    'attendancesalary'      => number_format($attendancesalary, 2, '.', ','),
                    'overtimepay'           => number_format($overtimesalary, 2, '.', ','),
                    'latedeductions'        => number_format($latedeductionamount, 2, '.', ','),
                    'holidaypay'            => number_format($holidaypay, 2, '.', ','),
                    'holidayovertimepay'    => number_format($holidayovertimepay, 2, '.', ','),
                    'leaves'                => $leaves,
                    'leavesnumdays'         => $leavesnumdays,
                    'leavesearn'            => number_format($leavesearn, 2, '.', ','),
                    'leavesdeduct'          => number_format($leavesdeduct, 2, '.', ','),
                    'totalearnings'         => number_format($totalearnings, 2, '.', ','),
                    'totaldeductions'       => number_format($totaldeductions, 2, '.', ','),
                    'netsalary'             => number_format($netsalary, 2, '.', ','),
                    'netsalarystring'       => ucwords(Conversion::make($netsalary,' pesos'))
                ));
                // return $employeesalaryinfo;
                // return $employeesalaryinfo[0]->leavesdeduct; 
                // return $payrolldate;
                
            // return $dailynumofhours;
                return view('hr.employeesalary')
                    ->with('employees', $employeeslist)
                    ->with('payrolldate',$payrolldate)
                    ->with('filteremployees','all')
                    ->with('existsinhistory',$existsinhistory)
                    ->with('firstemployee',$employeesalaryinfo);
            }else{
                return view('hr.employeesalary')
                    ->with('employees', $employeeslist)
                    ->with('payrolldate',$payrolldate)
                    ->with('filteremployees','all')
                    ->with('existsinhistory',$existsinhistory);
            }

        }elseif($id == 'filteremployees'){

            $payrolldate = Db::table('payroll')
                ->where('status','1')
                ->get();

            if(count($payrolldate) == 0){

                Db::table('payroll')
                    ->insert([
                        'datefrom'  =>date('Y-m-d'),
                        'dateto'    =>date('Y-m-d'),
                        'createdby' => $my_id->id,
                        'createdon' =>date('Y-m-d H:i:s')
                    ]);
                    foreach($payrolldate as $datepayroll){
                        $datepayroll->datefrom = date('m-d-Y',strtotime($datepayroll->datefrom));
                        $datepayroll->dateto = date('m-d-Y',strtotime($datepayroll->dateto));
                        $datepayroll->mindate = date('m-d-Y',strtotime("+1 day", strtotime($datepayroll->dateto)));
                        
                    }
                foreach($payrolldate as $datepayroll){
                    $datepayroll->mindate = date('Y-m-d',strtotime("-1 day", strtotime($datepayroll->dateto)));
                    
                }
            }
            else{
                foreach($payrolldate as $datepayroll){
                    $datepayroll->datefrom = date('m-d-Y',strtotime($datepayroll->datefrom));
                    $datepayroll->dateto = date('m-d-Y',strtotime($datepayroll->dateto));
                    $datepayroll->mindate = date('Y-m-d',strtotime("+1 day", strtotime($datepayroll->dateto)));
                    
                }
                // $payrolldate[0]->mindate = 
            }
            // return $request->get('filteremployees');
            if($request->get('filteremployees') == 'all'){
                $employeeslist = Db::table('teacher')
                    ->select(
                        'teacher.id',
                        'teacher.firstname',
                        'teacher.middlename',
                        'teacher.lastname',
                        'teacher.suffix',
                        'teacher.picurl',
                        'usertype.utype',
                        'employee_personalinfo.gender',
                        'employee_personalinfo.departmentid'
                        )
                    ->join('usertype','teacher.usertypeid','=','usertype.id')
                    ->join('employee_personalinfo','teacher.id','=','employee_personalinfo.employeeid')
                    ->where('usertype.utype','!=','PARENT')
                    ->where('usertype.utype','!=','STUDENT')
                    ->where('isactive','1')
                    ->get();
            }else{
                $employeeslist = Db::table('teacher')
                    ->select(
                        'teacher.id',
                        'teacher.firstname',
                        'teacher.middlename',
                        'teacher.lastname',
                        'teacher.suffix',
                        'teacher.picurl',
                        'usertype.utype',
                        'usertype.utype',
                        'employee_personalinfo.gender',
                        'employee_personalinfo.departmentid'
                    )
                    ->join('employee_personalinfo','teacher.id','=','employee_personalinfo.employeeid')
                    ->join('usertype','teacher.usertypeid','=','usertype.id') 
                    ->join('employee_basicsalaryinfo','teacher.id','employee_basicsalaryinfo.employeeid')
                    ->join('employee_basistype','employee_basicsalaryinfo.salarybasistype','employee_basistype.id')
                    ->where('usertype.utype','!=','PARENT')
                    ->where('usertype.utype','!=','STUDENT')
                    ->where('employee_basistype.type',$request->get('filteremployees'))
                    ->where('isactive','1')
                    ->get();
            }
            
            $checkifPayrollExistsInHistory = Db::table('payroll_history')
                    ->where('payrollid', $payrolldate[0]->id)
                    ->get();

            if(count($checkifPayrollExistsInHistory) == 0){

                $existsinhistory = 0;

            }else{

                $existsinhistory = 1;

            }
            
            return view('hr.employeesalary')
                ->with('employees', $employeeslist)
                ->with('payrolldate',$payrolldate)
                ->with('filteremployees',$request->get('filteremployees'))
                ->with('existsinhistory',$existsinhistory);

        }
        elseif($id == 'changedate'){
            
            $date = explode(' - ',$request->get('payrolldate'));

            $datefrom = explode('-',$date[0]);
            
            $dateto = explode('-',$date[1]);
            
            Db::table('payroll')
                ->where('id',$request->get('payrolldateid'))
                ->update([
                    'datefrom'  => date('Y-m-d', strtotime($datefrom[2].'-'.$datefrom[0].'-'.$datefrom[1])),
                    'dateto'    => date('Y-m-d', strtotime($dateto[2].'-'.$dateto[0].'-'.$dateto[1])),
                    'updatedby' => $my_id->id,
                    'updatedon' => date('Y-m-d H:i:s')
                ]);

            return back();

        }
        elseif($id == 'newdate'){
            
            $date = explode(' - ',$request->get('newpayrolldate'));
            
            Db::table('payroll')
                ->where('id',$request->get('oldpayrolldateid'))
                ->update([
                    'status'  => 0,
                    'updatedby' => $my_id->id,
                    'updatedon' => date('Y-m-d H:i:s')
                ]);
            $datefrom = explode('-',$date[0]);
            
            $dateto = explode('-',$date[1]);
            Db::table('payroll')
                ->insert([
                    'datefrom'  => date('Y-m-d', strtotime($datefrom[2].'-'.$datefrom[0].'-'.$datefrom[1])),
                    'dateto'    => date('Y-m-d', strtotime($dateto[2].'-'.$dateto[0].'-'.$dateto[1])),
                    'createdby' => $my_id->id,
                    'createdon' => date('Y-m-d H:i:s')
                ]);

            return back();

        }
        elseif($id == 'viewdetails'){

            
            $checkPayrollHistoryIfExists = Db::table('payroll_history')
                ->where('employeeid',$request->get('employeeid'))
                ->where('payrollid',$request->get('payrolldateid'))
                ->get();
            if(count($checkPayrollHistoryIfExists) == 0){
                $exists = 0;
            }else{
                $exists = 1;
            }

            // ====================================================================================================================== date range

            $getdaterange = Db::table('payroll')
                ->where('id',$request->get('payrolldateid'))
                ->get();

            // ====================================================================================================================== get employee info

            // $getemployeeinfo = Db::table('teacher')
            //     ->where('teacher.id',$request->get('employeeid'))
            //     ->get();

                $getemployeeinfo = Db::table('teacher')
                ->select(
                    'teacher.id',
                    'teacher.firstname',
                    'teacher.middlename',
                    'teacher.lastname',
                    'teacher.suffix',
                    'teacher.picurl',
                    'usertype.utype',
                    'employee_personalinfo.departmentid'
                    )
                ->join('usertype','teacher.usertypeid','usertype.id')
                ->join('employee_personalinfo','teacher.id','=','employee_personalinfo.employeeid')
                ->where('usertype.utype','!=','PARENT')
                ->where('usertype.utype','!=','STUDENT')
                ->where('isactive','1')
                ->where('teacher.id',$request->get('employeeid'))
                ->get();
            // ====================================================================================================================== get salary rate

            $getrate = Db::table('employee_basicsalaryinfo')
                ->select(
                    'employee_basicsalaryinfo.amount',
                    'employee_basistype.type',
                    'employee_basicsalaryinfo.mondays',
                    'employee_basicsalaryinfo.tuesdays',
                    'employee_basicsalaryinfo.wednesdays',
                    'employee_basicsalaryinfo.thursdays',
                    'employee_basicsalaryinfo.fridays',
                    'employee_basicsalaryinfo.saturdays',
                    'employee_basicsalaryinfo.sundays',
                    'employee_basicsalaryinfo.mondayhours',
                    'employee_basicsalaryinfo.tuesdayhours',
                    'employee_basicsalaryinfo.wednesdayhours',
                    'employee_basicsalaryinfo.thursdayhours',
                    'employee_basicsalaryinfo.fridayhours',
                    'employee_basicsalaryinfo.saturdayhours',
                    'employee_basicsalaryinfo.sundayhours',
                    'employee_basicsalaryinfo.holidays',
                    'employee_basicsalaryinfo.hoursperday',
                    'employee_basicsalaryinfo.projectbasedtype',
                    'employee_basicsalaryinfo.hoursperweek',
                    'employee_basicsalaryinfo.noofmonths',
                    'employee_basicsalaryinfo.status'
                    )
                ->join('employee_basistype','employee_basicsalaryinfo.salarybasistype','=','employee_basistype.id')
                ->where('employeeid',$request->get('employeeid'))
                ->where('status','0')
                ->get();
                    // return $getrate;
            // ====================================================================================================================== get working days

            $typecalendar = CAL_GREGORIAN;

            function getWorkingDays($startDate,$endDate){

                $startDate = strtotime($startDate);

                $endDate = strtotime($endDate);
                
                if($startDate <= $endDate){

                    $datediff = $endDate - $startDate;

                    return floor($datediff / (60 * 60 * 24));

                }

                return false;
                
                
            }
            if(count($getrate) == 0){

                $day_count = getWorkingDays($getdaterange[0]->datefrom,$getdaterange[0]->dateto);
                
                $day_count+=1;
                $workdays = array();
                $begin = new DateTime($getdaterange[0]->datefrom);
                $end = new DateTime($getdaterange[0]->dateto);
                $end = $end->modify( '+1 day' ); 
                
                $interval = new DateInterval('P1D');
                $daterange = new DatePeriod($begin, $interval ,$end);
                $daysperiod = array();

                foreach($daterange as $date){
                    array_push($daysperiod,$date->format("Y-m-d"));
                }

                foreach($daysperiod as $dayperiod){
                    
                    $day_name = date('D', strtotime($dayperiod)); // Trim day name to 3 chars
                    
                    //if not a weekend add day to array
                    // if($day_name != 'Sun'){
                            
                        $workdays[] = $dayperiod;

                    // }
    

                }
    
                $beginmonth = new DateTime(date('Y-m-01', strtotime($getdaterange[0]->datefrom)));

                $endmonth = new DateTime(date('Y-m-t', strtotime($getdaterange[0]->datefrom)));

                $endmonth = $endmonth->modify( '+1 day' ); 
                
                $intervalmonth = new DateInterval('P1D');

                $daterangemonth = new DatePeriod($beginmonth, $intervalmonth ,$endmonth);

                $monthworkdays = array();

                foreach($daterangemonth as $datemonth){

                        array_push($monthworkdays,$datemonth->format("Y-m-d"));

                }
            }else{

                $day_count = getWorkingDays($getdaterange[0]->datefrom,$getdaterange[0]->dateto);
                
                $day_count+=1;
                
                if(strtolower($getrate[0]->type) == 'hourly'){
                    
                    $workdays = array();
                    $begin = new DateTime($getdaterange[0]->datefrom);
                    $end = new DateTime($getdaterange[0]->dateto);
                    $end = $end->modify( '+1 day' ); 
                    
                    $interval = new DateInterval('P1D');
                    $daterange = new DatePeriod($begin, $interval ,$end);
                    $daysperiod = array();

                    foreach($daterange as $date){
                        array_push($daysperiod,$date->format("Y-m-d"));
                    }

                    foreach($daysperiod as $dayperiod){
                        
                        $day_name = date('D', strtotime($dayperiod)); // Trim day name to 3 chars
                        
                        //if not a weekend add day to array
                        
                        if($day_name == 'Mon'){
                            
                            if(count($getrate) > 0){
                                
                                if($getrate[0]->mondays == 1){
        
                                    $workdays[] = $dayperiod;
        
                                }

                            }
    
                        }elseif($day_name == 'Tue'){
                            
                            if(count($getrate) > 0){
                                
                                if($getrate[0]->tuesdays == 1){
        
                                    $workdays[] = $dayperiod;
        
                                }

                            }
    
                        }elseif($day_name == 'Wed'){
                            
                            if(count($getrate) > 0){
                                
                                if($getrate[0]->wednesdays == 1){
        
                                    $workdays[] = $dayperiod;
        
                                }

                            }
    
                        }elseif($day_name == 'Thu'){
                            
                            if(count($getrate) > 0){
                                
                                if($getrate[0]->thursdays == 1){
        
                                    $workdays[] = $dayperiod;
        
                                }

                            }
    
                        }elseif($day_name == 'Fri'){
                            
                            if(count($getrate) > 0){
                                
                                if($getrate[0]->fridays == 1){
        
                                    $workdays[] = $dayperiod;
        
                                }

                            }
    
                        }elseif($day_name == 'Sat'){
                            
                            if(count($getrate) > 0){
                                
                                if($getrate[0]->saturdays == 1){
        
                                    $workdays[] = $dayperiod;
        
                                }

                            }
    
                        }elseif($day_name == 'Sun'){
                            
                            if(count($getrate) > 0){
                                
                                if($getrate[0]->sundays == 1){

                                    $workdays[] = $dayperiod;
        
                                }

                            }
                            
    
                        }

                    }
                    
                    $beginmonth = new DateTime(date('Y-m-01', strtotime($getdaterange[0]->datefrom)));

                    $endmonth = new DateTime(date('Y-m-t', strtotime($getdaterange[0]->datefrom)));

                    $endmonth = $endmonth->modify( '+1 day' ); 
                    
                    $intervalmonth = new DateInterval('P1D');

                    $daterangemonth = new DatePeriod($beginmonth, $intervalmonth ,$endmonth);

                    $monthworkdays = array();

                    foreach($daterangemonth as $datemonth){

                        if($datemonth->format("D") == 'Sun'){
                            
                            if($getrate[0]->sundays == 1){
    
                                array_push($monthworkdays,$datemonth->format("Y-m-d"));
    
                            }
    
                        }
                        elseif($datemonth->format("D") == 'Sat'){
                            
                            if($getrate[0]->saturdays == 1){
    
                                array_push($monthworkdays,$datemonth->format("Y-m-d"));
    
                            }
    
                        }else{
    
                            array_push($monthworkdays,$datemonth->format("Y-m-d"));
    
                        }

                    }
    
                }elseif(strtolower($getrate[0]->type) == 'daily'){
                     //automatic daily rate



                     
                    $workdays = array();
                    $begin = new DateTime($getdaterange[0]->datefrom);
                    $end = new DateTime($getdaterange[0]->dateto);
                    $end = $end->modify( '+1 day' ); 
                    
                    $interval = new DateInterval('P1D');
                    $daterange = new DatePeriod($begin, $interval ,$end);
                    $daysperiod = array();

                    foreach($daterange as $date){
                        array_push($daysperiod,$date->format("Y-m-d"));
                    }

                    foreach($daysperiod as $dayperiod){
                        
                        $day_name = date('D', strtotime($dayperiod)); // Trim day name to 3 chars
    
                            $workdays[] = $dayperiod;

                    }
    
                }elseif(strtolower($getrate[0]->type) == 'monthly'){

                    $workdays = array();
    
                    $begin = new DateTime($getdaterange[0]->datefrom);

                    $end = new DateTime($getdaterange[0]->dateto);

                    $end = $end->modify( '+1 day' ); 
                    
                    $interval = new DateInterval('P1D');

                    $daterange = new DatePeriod($begin, $interval ,$end);

                    $daysperiod = array();

                    foreach($daterange as $date){

                        array_push($daysperiod,$date->format("Y-m-d"));

                    }
                    
                    foreach($daysperiod as $dayperiod){
                        
                        $day_name = date('D', strtotime($dayperiod)); // Trim day name to 3 chars
    
                            $workdays[] = $dayperiod;

                    }
    
    
                    
                    $beginmonth = new DateTime(date('Y-m-01', strtotime($getdaterange[0]->datefrom)));

                    $endmonth = new DateTime(date('Y-m-t', strtotime($getdaterange[0]->datefrom)));

                    $endmonth = $endmonth->modify( '+1 day' ); 
                    
                    $intervalmonth = new DateInterval('P1D');

                    $daterangemonth = new DatePeriod($beginmonth, $intervalmonth ,$endmonth);

                    $monthworkdays = array();

                    foreach($daterangemonth as $datemonth){

                        array_push($monthworkdays,$datemonth->format("Y-m-d"));

                    }
                    // return $monthworkdays;
    
                }elseif(strtolower($getrate[0]->type) == 'project'){

                    $workdays = array();
    
                    $begin = new DateTime($getdaterange[0]->datefrom);

                    $end = new DateTime($getdaterange[0]->dateto);

                    $end = $end->modify( '+1 day' ); 
                    
                    $interval = new DateInterval('P1D');

                    $daterange = new DatePeriod($begin, $interval ,$end);

                    $daysperiod = array();

                    foreach($daterange as $date){

                        array_push($daysperiod,$date->format("Y-m-d"));

                    }
                    
                    foreach($daysperiod as $dayperiod){
                        
                        $day_name = date('D', strtotime($dayperiod)); // Trim day name to 3 chars

                        if($getrate[0]->projectbasedtype == 'perday'){

                            // if($day_name != 'Sun'){
    
                                $workdays[] = $dayperiod;
                                
                            // }

                        }
                        elseif($getrate[0]->projectbasedtype == 'persalaryperiod'){
    
                                $workdays[] = $dayperiod;
                            
                        }
                        elseif($getrate[0]->projectbasedtype == 'permonth'){
    
                                $workdays[] = $dayperiod;
                            
                        }
    

                    }
    
                    $beginmonth = new DateTime(date('Y-m-01', strtotime($getdaterange[0]->datefrom)));

                    $endmonth = new DateTime(date('Y-m-t', strtotime($getdaterange[0]->datefrom)));

                    $endmonth = $endmonth->modify( '+1 day' ); 
                    
                    $intervalmonth = new DateInterval('P1D');

                    $daterangemonth = new DatePeriod($beginmonth, $intervalmonth ,$endmonth);

                    $monthworkdays = array();

                    foreach($daterangemonth as $datemonth){
                        array_push($monthworkdays,$datemonth->format("Y-m-d"));

                    }

                    // return date('Y-m-t', strtotime($getdaterange[0]->datefrom));
                    // $monthdaycount = getWorkingDays(date('Y-m-01', strtotime($getdaterange[0]->datefrom)), date('Y-m-t', strtotime($getdaterange[0]->datefrom)));
                    // // $monthdaycount+=1;
    
                    // for ($i = 1; $i <= $monthdaycount; $i++) {
        
                    //     $date = date('Y').'-'.date('m',strtotime($getdaterange[0]->datefrom)).'-'.$i; //format date
                    //     // return $date;
                    //     $get_name = Carbon::create($date)->isoFormat('ddd'); //get week day
        
                    //     $day_name = substr($get_name, 0, 3); // Trim day name to 3 chars
    
                    //     //if not a weekend add day to array
                        
                    //     $monthworkdays[] = $date;
                            
                    // }
    
                }
            }
            // return $monthworkdays;
            // ====================================================================================================================== calculate daily/hpurly rates
            // return $getrate;

            if(count($getrate) == 0){

                $getrate = array();

                array_push($getrate,(object)array(
                    'amount'    =>  0,
                    'type'      =>  " ",
                    'hoursperday'      =>  0,
                    'projectbasedtype' => ""
                ));

                $dailyrate = 0;

                $hourlyrate = 0;


            }else{

                if(strtolower($getrate[0]->type) == 'monthly'){

                    if(count($workdays) == 0){

                        $dailyrate =  $getrate[0]->amount / (int)(date('t') - date('01'));

                    }else{
                        // return $monthdaycount;
                        // round($getrate[0]->amount / $monthdaycount, 2);
                        $dailyrate =  $getrate[0]->amount / count($monthworkdays);
                        
                    }
                    
                    if($dailyrate == 0 || $getrate[0]->hoursperday == 0){
                        $hourlyrate = 0;
                    }else{
                        $hourlyrate = ($dailyrate)/$getrate[0]->hoursperday;
                    }

                }
                elseif(strtolower($getrate[0]->type) == 'daily'){
    
                    $dailyrate =  round($getrate[0]->amount, 2);
            
                    $hourlyrate = ($dailyrate)/$getrate[0]->hoursperday;

                }
                elseif(strtolower($getrate[0]->type) == 'hourly'){
            
                    $hoursperday = 0;
                    if($hoursperday == 0){
                        if($getrate[0]->mondayhours > 0){
                            $hoursperday = $getrate[0]->mondayhours;
                        }
                        if($getrate[0]->tuesdayhours > 0){
                            $hoursperday = $getrate[0]->tuesdayhours;
                        }
                        if($getrate[0]->wednesdayhours > 0){
                            $hoursperday = $getrate[0]->wednesdayhours;
                        }
                        if($getrate[0]->thursdayhours > 0){
                            $hoursperday = $getrate[0]->thursdayhours;
                        }
                        if($getrate[0]->fridayhours > 0){
                            $hoursperday = $getrate[0]->fridayhours;
                        }
                        if($getrate[0]->saturdayhours > 0){
                            $hoursperday = $getrate[0]->saturdayhours;
                        }
                        if($getrate[0]->sundayhours > 0){
                            $hoursperday = $getrate[0]->sundayhours;
                        }
                    }
                    
                    $dailyrate = ($getrate[0]->amount/$hoursperday);
                    
                    $hourlyrate = $getrate[0]->amount;

                }
                elseif(strtolower($getrate[0]->type) == 'project'){
                    // return $getrate[0]->hoursperday;
                    // return $workdays;
                    if($getrate[0]->projectbasedtype == 'persalaryperiod'){
                        
                        $dailyrate =  $getrate[0]->amount/count($workdays); 

                        $hourlyrate =  ($getrate[0]->amount/count($workdays))/$getrate[0]->hoursperday; 

                    }
                    elseif($getrate[0]->projectbasedtype == 'perday'){
                        
                        $dailyrate = $getrate[0]->amount;

                        $hourlyrate = $getrate[0]->amount/$getrate[0]->hoursperday;

                    }
                    elseif($getrate[0]->projectbasedtype == 'permonth'){
                        
                        $hourlyrate = ($getrate[0]->amount/count($monthworkdays))/$getrate[0]->hoursperday;

                        $dailyrate =  $getrate[0]->amount/count($monthworkdays); 
                        // return
                        
                    }
                    
                }
                // return $dailyrate;

            }
            
            // ====================================================================================================================== calculate attendance salary
            $getlatedeductionsetup = Db::table('deduction_tardinesssetup')
                ->where('status','1')
                ->first();
            // return $getlatedeductionsetup->type;
            if(strtolower($getlatedeductionsetup->type) == 'custom'){

                $deductiontardinessapplication = Db::table('deduction_tardinessapplication')
                    ->where('departmentid',$getemployeeinfo[0]->departmentid)
                    ->where('deleted','0')
                    ->get();
                if(count($deductiontardinessapplication)==0){

                }else{
                    $deductioncomputation = Db::table('deduction_tardinessdetail')
                        ->where('id',$deductiontardinessapplication[0]->tardinessdetailid)
                        ->where('deleted','0')
                        ->get();
                    // return $deductioncomputation;
                } 
            }else{

            }
            
            $getAttendance = Db::table('teacherattendance') 
                ->where('teacher_id',$request->get('employeeid'))
                ->whereBetween('tdate',[$getdaterange[0]->datefrom,$getdaterange[0]->dateto])
                ->where('deleted','0')
                ->get();
                // return $getAttendance;
            $getsyid = DB::table('sy')
                ->where('isactive','1')
                ->first();

            $getholidays = DB::table('schoolcal')
                ->join('schoolcaltype','schoolcal.type','=','schoolcaltype.id')
                ->where('schoolcal.syid',$getsyid->id)
                ->where('schoolcal.deleted','0')
                ->where('schoolcaltype.type','1')
                ->get();
                    
            $gettimesched = DB::table('employee_customtimesched')
                ->where('employeeid',$request->get('employeeid'))
                ->get();

            if(count($gettimesched) == 0){

                DB::table('employee_customtimesched')
                    ->insert([
                        'employeeid'    =>  $request->get('employeeid'),
                        'amin'          =>  '07:30:00',
                        'amout'         =>  '12:00:00',
                        'pmin'          =>  '01:00:00',
                        'pmout'         =>  '04:30:00',
                        'createdby'     =>  $my_id->id,
                        'createdon'     =>  date('Y-m-d H:i:s')
                    ]);

                $gettimesched = DB::table('employee_customtimesched')
                    ->where('employeeid',$request->get('employeeid'))
                    ->get();
            }

            
            $latedeductionamount = 0;

// return $getholidays;
            $holidaypay = 0;

            $holidayovertimepay = 0;

            $dailynumofhours = 0;

            $dailyovertimehours = 0;

            if(count($getrate) > 0){
                
                    
                foreach($workdays as $workdaydefault){

                    $same = 0;

                    $holiday = 0;

                    $holidaytype = "";
                    // return $getAttendance;
                    if(count($getAttendance) == 0){
                        // return 'asda';
                        foreach ($getholidays as $getholiday) {
                            # code...
                            // if($getholiday->typename == 'REGULAR HOLIDAY'){?

                                $beginholiday = new DateTime($getholiday->datefrom);

                                $endholiday = new DateTime($getholiday->dateto);

                                $endholiday = $endholiday->modify( '+1 day' ); 
                                
                                $intervalholiday = new DateInterval('P1D');

                                $daterangeholiday = new DatePeriod($beginholiday, $intervalholiday ,$endholiday);

                                $daysperiodholiday = array();

                                foreach($daterangeholiday as $dateholiday){

                                    array_push($daysperiodholiday,$dateholiday->format("Y-m-d"));

                                }
                                if(in_array($workdaydefault,$daysperiodholiday)){
                                    // return 'sadsada';
                                    // foreach($getholidays as $getholiday){
                                    //     if(strtolower($getholiday->description) == 'regular holiday'){
                                            // $getholidayrate = Db::table('holidayrates')
                                            //     ->where('description','like','%regular holiday')
                                            //     ->where('status','1')
                                            //     ->get();
                                            // return $getholiday->typename;
                                            $holidaypay += ($dailyrate * ($getholiday->ratepercentagenowork/100));
                                    //     }
                                    // }

                                }

                            // }

                        }
                        // return $holidaypay;
                    }else{

                        foreach($getAttendance as $attendance){
                            
                            if($workdaydefault == $attendance->tdate){
                                // return $attendance->tdate;
                                
                                $same = 1;
                    
                                foreach ($getholidays as $getholiday) {
                                    # code...
                                    // if($getholiday->typename == 'REGULAR HOLIDAY'){

                                        
                                        $beginholiday = new DateTime($getholiday->datefrom);

                                        $endholiday = new DateTime($getholiday->dateto);

                                        $endholiday = $endholiday->modify( '+1 day' ); 
                                        
                                        $intervalholiday = new DateInterval('P1D');

                                        $daterangeholiday = new DatePeriod($beginholiday, $intervalholiday ,$endholiday);

                                        $daysperiodholiday = array();

                                        foreach($daterangeholiday as $dateholiday){

                                            array_push($daysperiodholiday,$dateholiday->format("Y-m-d"));

                                        }
                                        if(in_array($attendance->tdate,$daysperiodholiday)){

                                            $holiday = 1;

                                            $holidaytype = $getholiday->id;

                                        }

                                    // }

                                }

                            }else{
                        
                                foreach ($getholidays as $getholiday) {
                                    # code...
                                    // if($getholiday->typename == 'REGULAR HOLIDAY'){
        
                                        
                                        $beginholiday = new DateTime($getholiday->datefrom);
        
                                        $endholiday = new DateTime($getholiday->dateto);
        
                                        $endholiday = $endholiday->modify( '+1 day' ); 
                                        
                                        $intervalholiday = new DateInterval('P1D');
        
                                        $daterangeholiday = new DatePeriod($beginholiday, $intervalholiday ,$endholiday);
        
                                        $daysperiodholiday = array();
        
                                        foreach($daterangeholiday as $dateholiday){
        
                                            array_push($daysperiodholiday,$dateholiday->format("Y-m-d"));
        
                                        }
                                        if(in_array($workdaydefault,$daysperiodholiday)){
        
                                            $holiday = 1;

                                            $holidaytype = $getholiday->id;
                                        }
        
                                    // }
        
                                }
                            }
                            
                        }
                        // return $holidaytype;
                        if($same == 1){

                            // ============================================================================================================================================================
                            // ============================================================================= PRESENT ======================================================================
                            // ============================================================================================================================================================
                                
                            if($attendance->in_am == null){

                                $am_in = date('h:i:s'); 
                
                            }
                            else{
                                // $amminuteselapsed = round(abs($amdatetime1 - $amdatetime2) / 60);
                                
                                if(strtolower($getlatedeductionsetup->type) == 'custom' && count($deductiontardinessapplication) > 0){

                                    $amdatetime1 = strtotime($gettimesched[0]->amin);
    
                                    $amdatetime2 = strtotime($attendance->in_am);
    
                                    $amtimedifference = $amdatetime2 - $amdatetime1 ;
    
                                    if($amtimedifference > 0){
    
                                        $amminuteselapsed = ($amtimedifference) / 60 ;
    
                                    }else{
    
                                        $amminuteselapsed = 0 ;
    
                                    }

                                    if(count($deductioncomputation) > 0){

                                        if($deductioncomputation[0]->minutes == 1){
                                            
                                            if($deductioncomputation[0]->basisfixedamount == 1){

                                                $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * $deductioncomputation[0]->amount;

                                            }
                                            if($deductioncomputation[0]->basispercentage == 1){
                                                    
                                                if(strtolower($getrate[0]->type) == 'hourly'){
                                                    if($getrate[0]->mondays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'monday'){
                                                            $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->mondayhours)/60);
                                                        }
                                                    }
                                                    if($getrate[0]->tuesdays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'tuesday'){
                                                        $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->tuesdayhours)/60);
                                                        }
                                                    }
                                                    if($getrate[0]->wednesdays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'wednesday'){
                                                        $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->wednesdayhours)/60);
                                                        }
                                                    }
                                                    if($getrate[0]->thursdays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'thursday'){
                                                        $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->thursdayhours)/60);
                                                        }
                                                    }
                                                    if($getrate[0]->fridays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'friday'){
                                                        $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->fridayhours)/60);
                                                        }
                                                    }
                                                    if($getrate[0]->saturdays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'saturday'){
                                                        $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->saturdayhours)/60);
                                                        }
                                                    }
                                                    if($getrate[0]->sundays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'sunday'){
                                                        $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->sundayhours)/60);
                                                        }
                                                    }
                                                }
                                                elseif(strtolower($getrate[0]->type) == 'daily'){

                                                    $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->hoursperday)/60);
                                                    
                                                }
                                                elseif(strtolower($getrate[0]->type) == 'monthly'){

                                                    $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->hoursperday)/60);

                                                }
                                                elseif(strtolower($getrate[0]->type) == 'project'){

                                                    $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * (($dailyrate/$getrate[0]->hoursperday)/60);

                                                }

                                            }

                                        }

                                    }

                                }else{

                                    $amdatetime1 = strtotime('08:00:00');
    
                                    $amdatetime2 = strtotime($attendance->in_am);
    
                                    $amtimedifference = $amdatetime2 - $amdatetime1 ;
    
                                    if($amtimedifference > 0){
    
                                        $amminuteselapsed = ($amtimedifference) / 60 ;
    
                                    }else{
    
                                        $amminuteselapsed = 0 ;
    
                                    }
                                        
                                    if(strtolower($getrate[0]->type) == 'hourly'){
                                        
                                        if($getrate[0]->mondays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'monday'){
                                                $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->mondayhours)/60);
                                            }
                                        }
                                        if($getrate[0]->tuesdays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'tuesday'){
                                            $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->tuesdayhours)/60);
                                            }
                                        }
                                        if($getrate[0]->wednesdays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'wednesday'){
                                            $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->wednesdayhours)/60);
                                            }
                                        }
                                        if($getrate[0]->thursdays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'thursday'){
                                            $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->thursdayhours)/60);
                                            }
                                        }
                                        if($getrate[0]->fridays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'friday'){
                                            $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->fridayhours)/60);
                                            }
                                        }
                                        if($getrate[0]->saturdays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'saturday'){
                                            $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->saturdayhours)/60);
                                            }
                                        }
                                        if($getrate[0]->sundays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'sunday'){
                                            $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->sundayhours)/60);
                                            }
                                        }
                                    }
                                    elseif(strtolower($getrate[0]->type) == 'daily'){

                                        $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->hoursperday)/60);
                                        
                                    }
                                    elseif(strtolower($getrate[0]->type) == 'monthly'){

                                        $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->hoursperday)/60);

                                    }
                                    elseif(strtolower($getrate[0]->type) == 'project'){

                                        $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->hoursperday)/60);

                                    }


                                }

                                $am_in = $attendance->in_am; 
                
                            }
                            if($attendance->out_am == null){
                                
                                $am_out = date('h:i:s'); 
                
                            }
                            else{
                
                                $am_out = explode(':', $attendance->out_am); 

                                if($am_out[0] == 00){

                                    $am_out = date('h:i:s', strtotime('12'.':'.$am_out[1].':'.$am_out[0]));

                                }else{

                                    $am_out = $attendance->out_am; 

                                }
                
                            }

                            $amto_time = strtotime($am_out);

                            $amfrom_time = strtotime($am_in);

                            $totalam = round(abs($amto_time - $amfrom_time) / 60) / 60;

                            if($attendance->in_pm == null){

                                $pm_in = date('h:i:s'); 
                
                            }
                            else{


                                // $pmminuteselapsed = round(abs($pmdatetime1 - $pmdatetime2) / 60);

                                if(strtolower($getlatedeductionsetup->type) == 'custom' && count($deductiontardinessapplication) > 0){

                                    $pmdatetime1 = strtotime($gettimesched[0]->pmin);
    
                                    $pmdatetime2 = strtotime($attendance->in_pm);
    
                                    $pmtimedifference = $pmdatetime2 - $pmdatetime1 ;
    
                                    if($pmtimedifference > 0){
    
                                        $pmminuteselapsed = ($pmtimedifference) / 60 ;
    
                                    }else{
    
                                        $pmminuteselapsed = 0 ;
    
                                    }
                                
                                    if(count($deductioncomputation) > 0){

                                        if($deductioncomputation[0]->minutes == 1){

                                            if($deductioncomputation[0]->basisfixedamount == 1){

                                                $latedeductionamount+= ($pmminuteselapsed/$deductioncomputation[0]->lateduration) * $deductioncomputation[0]->amount;
                                                
                                            }
                                            if($deductioncomputation[0]->basispercentage == 1){
                                                    
                                                if(strtolower($getrate[0]->type) == 'hourly'){
                                                    if($getrate[0]->mondays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'monday'){
                                                            $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->mondayhours)/60);
                                                        }
                                                    }
                                                    if($getrate[0]->tuesdays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'tuesday'){
                                                        $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->tuesdayhours)/60);
                                                        }
                                                    }
                                                    if($getrate[0]->wednesdays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'wednesday'){
                                                        $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->wednesdayhours)/60);
                                                        }
                                                    }
                                                    if($getrate[0]->thursdays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'thursday'){
                                                        $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->thursdayhours)/60);
                                                        }
                                                    }
                                                    if($getrate[0]->fridays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'friday'){
                                                        $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->fridayhours)/60);
                                                        }
                                                    }
                                                    if($getrate[0]->saturdays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'saturday'){
                                                        $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->saturdayhours)/60);
                                                        }
                                                    }
                                                    if($getrate[0]->sundays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'sunday'){
                                                        $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->sundayhours)/60);
                                                        }
                                                    }
                                                }
                                                elseif(strtolower($getrate[0]->type) == 'daily'){

                                                    $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->hoursperday)/60);
                                                    
                                                }
                                                elseif(strtolower($getrate[0]->type) == 'monthly'){

                                                    $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->hoursperday)/60);

                                                }
                                                elseif(strtolower($getrate[0]->type) == 'project'){

                                                    $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * (($dailyrate/$getrate[0]->hoursperday)/60);

                                                }

                                            }

                                        }

                                    }
                                    
                                }else{

                                    $pmdatetime1 = strtotime('12:00:00');

                                    $pmdatetime2 = strtotime($attendance->in_pm);

                                    $pmtimedifference = $pmdatetime2 - $pmdatetime1 ;

                                    if($pmtimedifference > 0){

                                        $pmminuteselapsed = ($pmtimedifference) / 60 ;

                                    }else{

                                        $pmminuteselapsed = 0 ;

                                    }
                                        
                                    if(strtolower($getrate[0]->type) == 'hourly'){
                                        
                                        if($getrate[0]->mondays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'monday'){
                                                $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->mondayhours)/60);
                                            }
                                        }
                                        if($getrate[0]->tuesdays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'tuesday'){
                                            $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->tuesdayhours)/60);
                                            }
                                        }
                                        if($getrate[0]->wednesdays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'wednesday'){
                                            $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->wednesdayhours)/60);
                                            }
                                        }
                                        if($getrate[0]->thursdays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'thursday'){
                                            $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->thursdayhours)/60);
                                            }
                                        }
                                        if($getrate[0]->fridays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'friday'){
                                            $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->fridayhours)/60);
                                            }
                                        }
                                        if($getrate[0]->saturdays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'saturday'){
                                            $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->saturdayhours)/60);
                                            }
                                        }
                                        if($getrate[0]->sundays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'sunday'){
                                            $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->sundayhours)/60);
                                            }
                                        }
                                    }
                                    elseif(strtolower($getrate[0]->type) == 'daily'){

                                        $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->hoursperday)/60);
                                        
                                    }
                                    elseif(strtolower($getrate[0]->type) == 'monthly'){

                                        $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->hoursperday)/60);

                                    }
                                    elseif(strtolower($getrate[0]->type) == 'project'){
                                        
                                        $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->hoursperday)/60);

                                    }


                                }
                                
                                $pm_in = explode(':', $attendance->in_pm); 

                                if($pm_in[0] == 00){

                                    $pm_in = date('h:i:s', strtotime('12'.':'.$pm_in[1].':'.$pm_in[0]));

                                }else{

                                    $pm_in = $attendance->in_pm; 

                                }
                
                            }
                            if($attendance->out_pm == null){
                
                                $pm_out = date('h:i:s'); 
                
                            }
                            else{

                                $pm_out = explode(':', $attendance->out_pm); 

                                if($pm_out[0] == 00){

                                    $pm_out = date('h:i:s', strtotime('12'.':'.$pm_out[1].':'.$pm_out[0]));

                                }else{

                                    $pm_out = $attendance->out_pm; 

                                }
                
                            }
                            
                           
                            // $pmto_time = strtotime($pm_out);
                            $pmto_time = strtotime($gettimesched[0]->pmout);

                            $pmfrom_time = strtotime($pm_in);

                            // $totalpm = round(abs($pmto_time - $pmfrom_time) / 60) / 60;
                            // return $pmto_time;
                            $totalpm = round(abs($pmto_time - $pmfrom_time) / 60) / 60;
                            // return $totalpm;
                            
                            $totalhours = ($totalam + $totalpm);
                            
                            if($holiday == 1){
                                    
                                // ========================================================================== IF NOT HOLIDAYS =================================================================
                                // ========================================================================== IF NOT HOLIDAYS =================================================================

                                $getholidayrate = Db::table('schoolcaltype')
                                    ->where('id',$holidaytype)
                                    ->get();

                                if(strtolower($getrate[0]->type) == 'hourly'){
                                        
                                    if($getrate[0]->mondays == 1){
                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'monday'){
                                            if($totalhours==$getrate[0]->mondayhours){

                                                $dailynumofhours += $getrate[0]->mondayhours; 

                                                $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
            
                                            }
                                            // elseif($totalhours>$getrate[0]->mondayhours){
                                                
                                            //     $dailynumofhours += $getrate[0]->mondayhours; 
                                            //     $dailyovertimehours += ($totalhours - $getrate[0]->mondayhours);

                                            //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                
                                            //     $holidayovertimepay+= (($totalhours - $getrate[0]->mondayhours) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
            
                                            // }
                                            elseif($totalhours<$getrate[0]->mondayhours){
                                                
                                                $dailynumofhours += $totalhours; 

                                                $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                            }
                                        }
                                    }
                                    if($getrate[0]->tuesdays == 1){
                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'tuesday'){
                                            if($totalhours==$getrate[0]->tuesdayhours){

                                                $dailynumofhours += $getrate[0]->tuesdayhours; 

                                                $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
            
                                            }
                                            // elseif($totalhours>$getrate[0]->tuesdayhours){
                                                
                                            //     $dailynumofhours += $getrate[0]->tuesdayhours; 
                                            //     $dailyovertimehours += ($totalhours - $getrate[0]->tuesdayhours);

                                            //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                
                                            //     $holidayovertimepay+= (($totalhours - $getrate[0]->tuesdayhours) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
            
                                            // }
                                            elseif($totalhours<$getrate[0]->tuesdayhours){
                                                
                                                $dailynumofhours += $totalhours; 

                                                $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                            }
                                        }
                                    }
                                    if($getrate[0]->wednesdays == 1){
                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'wednesday'){
                                            if($totalhours==$getrate[0]->wednesdayhours){

                                                $dailynumofhours += $getrate[0]->wednesdayhours; 

                                                $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
            
                                            }
                                            // elseif($totalhours>$getrate[0]->wednesdayhours){
                                                
                                            //     $dailynumofhours += $getrate[0]->wednesdayhours; 
                                            //     $dailyovertimehours += ($totalhours - $getrate[0]->wednesdayhours);

                                            //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                
                                            //     $holidayovertimepay+= (($totalhours - $getrate[0]->wednesdayhours) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
            
                                            // }
                                            elseif($totalhours<$getrate[0]->wednesdayhours){
                                                
                                                $dailynumofhours += $totalhours; 

                                                $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                            }
                                        }
                                    }
                                    if($getrate[0]->thursdays == 1){
                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'thursday'){
                                            if($totalhours==$getrate[0]->thursdayhours){

                                                $dailynumofhours += $getrate[0]->thursdayhours; 

                                                $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
            
                                            }
                                            // elseif($totalhours>$getrate[0]->thursdayhours){
                                                
                                            //     $dailynumofhours += $getrate[0]->thursdayhours; 
                                            //     $dailyovertimehours += ($totalhours - $getrate[0]->thursdayhours);

                                            //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                
                                            //     $holidayovertimepay+= (($totalhours - $getrate[0]->thursdayhours) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
            
                                            // }
                                            elseif($totalhours<$getrate[0]->thursdayhours){
                                                
                                                $dailynumofhours += $totalhours; 

                                                $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                            }
                                        }
                                    }
                                    if($getrate[0]->fridays == 1){
                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'friday'){
                                            if($totalhours==$getrate[0]->fridayhours){

                                                $dailynumofhours += $getrate[0]->fridayhours; 

                                                $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
            
                                            }
                                            // elseif($totalhours>$getrate[0]->fridayhours){
                                                
                                            //     $dailynumofhours += $getrate[0]->fridayhours; 
                                            //     $dailyovertimehours += ($totalhours - $getrate[0]->fridayhours);

                                            //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                
                                            //     $holidayovertimepay+= (($totalhours - $getrate[0]->fridayhours) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
            
                                            // }
                                            elseif($totalhours<$getrate[0]->fridayhours){
                                                
                                                $dailynumofhours += $totalhours; 

                                                $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                            }
                                        }
                                    }
                                    if($getrate[0]->saturdays == 1){
                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'saturday'){
                                            if($totalhours==$getrate[0]->saturdayhours){

                                                $dailynumofhours += $getrate[0]->saturdayhours; 

                                                $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
            
                                            }
                                            // elseif($totalhours>$getrate[0]->saturdayhours){
                                                
                                            //     $dailynumofhours += $getrate[0]->saturdayhours; 
                                            //     $dailyovertimehours += ($totalhours - $getrate[0]->saturdayhours);

                                            //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                
                                            //     $holidayovertimepay+= (($totalhours - $getrate[0]->saturdayhours) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
            
                                            // }
                                            elseif($totalhours<$getrate[0]->saturdayhours){
                                                
                                                $dailynumofhours += $totalhours; 

                                                $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                            }
                                        }
                                    }
                                    if($getrate[0]->sundays == 1){
                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'sunday'){

                                            if($totalhours==$getrate[0]->sundayhours){

                                                $dailynumofhours += $getrate[0]->sundayhours; 

                                                $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
            
                                            }
                                            // elseif($totalhours>$getrate[0]->sundayhours){
                                                
                                            //     $dailynumofhours += $getrate[0]->sundayhours; 
                                            //     $dailyovertimehours += ($totalhours - $getrate[0]->sundayhours);

                                            //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                
                                            //     $holidayovertimepay+= (($totalhours - $getrate[0]->sundayhours) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
            
                                            // }
                                            elseif($totalhours<$getrate[0]->sundayhours){
                                                
                                                $dailynumofhours += $totalhours; 

                                                $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                            }
                                        }
                                    }

                                }
                                elseif(strtolower($getrate[0]->type) == 'daily'){
                                    
                                    if(count($getholidayrate)>0){

                                        if($totalhours==$getrate[0]->hoursperday){

                                            $dailynumofhours += $getrate[0]->hoursperday; 

                                            $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
        
                                        }
                                        // elseif($totalhours>$getrate[0]->hoursperday){
                                            
                                        //     $dailynumofhours += $getrate[0]->hoursperday; 
                                        //     $dailyovertimehours += ($totalhours - $getrate[0]->hoursperday);

                                        //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                            
                                        //     $holidayovertimepay+= (($totalhours - $getrate[0]->hoursperday) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
        
                                        // }
                                        elseif($totalhours<$getrate[0]->hoursperday){
                                            
                                            $dailynumofhours += $totalhours; 

                                            $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                        }

                                    }

                                }
                                elseif(strtolower($getrate[0]->type) == 'monthly'){
                                    
                                    if(count($getholidayrate)>0){

                                        if($totalhours==$getrate[0]->hoursperday){

                                            $dailynumofhours += $getrate[0]->hoursperday; 

                                            $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
        
                                        }
                                        // elseif($totalhours>$getrate[0]->hoursperday){
                                            
                                        //     $dailynumofhours += $getrate[0]->hoursperday; 
                                        //     $dailyovertimehours += ($totalhours - $getrate[0]->hoursperday);

                                        //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                            
                                        //     $holidayovertimepay+= (($totalhours - $getrate[0]->hoursperday) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
        
                                        // }
                                        elseif($totalhours<$getrate[0]->hoursperday){
                                            
                                            $dailynumofhours += $totalhours; 

                                            $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                        }

                                    }
                                }
                                elseif(strtolower($getrate[0]->type) == 'project'){
                                    
                                    if(count($getholidayrate)>0){

                                        if($totalhours==$getrate[0]->hoursperday){

                                            $dailynumofhours += $getrate[0]->hoursperday; 

                                            $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
        
                                        }
                                        // elseif($totalhours>$getrate[0]->hoursperday){
                                            
                                        //     $dailynumofhours += $getrate[0]->hoursperday; 
                                        //     $dailyovertimehours += ($totalhours - $getrate[0]->hoursperday);

                                        //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                            
                                        //     $holidayovertimepay+= (($totalhours - $getrate[0]->hoursperday) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
        
                                        // }
                                        elseif($totalhours<$getrate[0]->hoursperday){
                                            
                                            $dailynumofhours += $totalhours; 

                                            $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                        }

                                    }
                                }
                            }else{

                                // ========================================================================== IF NOT HOLIDAYS =================================================================
                                // ========================================================================== IF NOT HOLIDAYS =================================================================

                                if(strtolower($getrate[0]->type) == 'hourly'){
                                    if($getrate[0]->mondays == 1){
                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'monday'){
                                            if($totalhours<$getrate[0]->mondayhours){
                
                                                $dailynumofhours += $totalhours; 
                
                                            }elseif($totalhours>$getrate[0]->mondayhours){
                                                
                                                $dailynumofhours += $getrate[0]->mondayhours; 
                
                                            }
                                        }
                                    }
                                    if($getrate[0]->tuesdays == 1){
                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'tuesday'){
                                            if($totalhours<$getrate[0]->tuesdayhours){
                
                                                $dailynumofhours += $totalhours; 
                
                                            }elseif($totalhours>$getrate[0]->tuesdayhours){
                                                
                                                $dailynumofhours += $getrate[0]->tuesdayhours; 
                
                                            }
                                        }
                                    }
                                    if($getrate[0]->wednesdays == 1){
                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'wednesday'){
                                            if($totalhours<$getrate[0]->wednesdayhours){
                
                                                $dailynumofhours += $totalhours; 
                
                                            }elseif($totalhours>$getrate[0]->wednesdayhours){
                                                
                                                $dailynumofhours += $getrate[0]->wednesdayhours; 
                
                                            }
                                        }
                                    }
                                    if($getrate[0]->thursdays == 1){
                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'thursday'){
                                            if($totalhours<$getrate[0]->thursdayhours){
                
                                                $dailynumofhours += $totalhours; 
                
                                            }elseif($totalhours>$getrate[0]->thursdayhours){
                                                
                                                $dailynumofhours += $getrate[0]->thursdayhours; 
                
                                            }
                                        }
                                    }
                                    if($getrate[0]->fridays == 1){
                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'friday'){
                                            if($totalhours<$getrate[0]->fridayhours){
                
                                                $dailynumofhours += $totalhours; 
                
                                            }elseif($totalhours>$getrate[0]->fridayhours){
                                                
                                                $dailynumofhours += $getrate[0]->fridayhours; 
                
                                            }
                                        }
                                    }
                                    if($getrate[0]->saturdays == 1){
                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'saturday'){
                                            if($totalhours<$getrate[0]->saturdayhours){
                
                                                $dailynumofhours += $totalhours; 
                
                                            }elseif($totalhours>$getrate[0]->saturdayhours){
                                                
                                                $dailynumofhours += $getrate[0]->saturdayhours; 
                
                                            }
                                        }
                                    }
                                    if($getrate[0]->sundays == 1){
                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'sunday'){
                                            if($totalhours<$getrate[0]->sundayhours){
                
                                                $dailynumofhours += $totalhours; 
                
                                            }elseif($totalhours>$getrate[0]->sundayhours){
                                                
                                                $dailynumofhours += $getrate[0]->sundayhours; 
                
                                            }
                                        }
                                    }
                                }
                                elseif(strtolower($getrate[0]->type) == 'daily'){
    
                                    if($totalhours==$getrate[0]->hoursperday){

                                        $dailynumofhours += $getrate[0]->hoursperday; 
    
                                    }elseif($totalhours>$getrate[0]->hoursperday){
                                        
                                        $dailynumofhours += $getrate[0]->hoursperday; 
                                        // $dailyovertimehours += ($totalhours - $getrate[0]->hoursperday);
    
                                    }elseif($totalhours<$getrate[0]->hoursperday){
                                        
                                        $dailynumofhours += $totalhours; 

                                    }

                                }
                                elseif(strtolower($getrate[0]->type) == 'monthly'){

                                    if($totalhours==$getrate[0]->hoursperday){

                                        $dailynumofhours += $getrate[0]->hoursperday; 

                                    }elseif($totalhours>$getrate[0]->hoursperday){
                                        
                                        $dailynumofhours += $getrate[0]->hoursperday; 
                                        // $dailyovertimehours += ($totalhours - $getrate[0]->hoursperday);

                                    }elseif($totalhours<$getrate[0]->hoursperday){
                                        
                                        $dailynumofhours += $totalhours; 

                                    }

                                }
                                elseif(strtolower($getrate[0]->type) == 'project'){

                                    $dailynumofhours += $totalhours; 

                                }
                            }

                        }else{

                            // ============================================================================================================================================================
                            // ============================================================================= ABSENT =======================================================================
                            // ============================================================================================================================================================
                            // return $holiday;
                            if($holiday == 1){
                                $getholidayrate = Db::table('schoolcaltype')
                                    // ->where('description','like','%regular holiday')
                                    ->where('id',$holidaytype)
                                    ->get();
                                $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentagenowork/100));
                            }
                        }
                    }

                }

            }
                           
            
            // ====================================================================================================================== calculate deductions

            // $workingdaysdeduction = array();

            // $day_countdeduction = cal_days_in_month($typecalendar, date('m'), date('Y')); // Get the amount of days
            
            // for ($i = 1; $i <= $day_countdeduction; $i++) {

            //     $dateformatdeduction = date('Y').'/'.date('m').'/'.$i; //format date

            //     $get_namedatededuction = Carbon::create($dateformatdeduction)->isoFormat('ddd'); //get week day

            //     $day_namededuction = substr($get_namedatededuction, 0, 3); // Trim day name to 3 chars

            //     //if not a weekend add day to array
            //     if($day_namededuction != 'Sun'){
                    
            //         $workingdaysdeduction[] = date('Y-m-d', strtotime($day_namededuction));
                    
            //     }

            // }

            // $numberofdaysinamonthdeduction = count($workingdaysdeduction);

            // ====================================================================================================================== standard deductions

            $totalStandardDeductions = 0;

            // $dailydeductionstandard = 0;

            $standarddeductions = array();

            $getdeductionstandard = Db::table('deduction_standard')
                ->join('employee_deductionstandard','deduction_standard.id','=','employee_deductionstandard.deduction_typeid')
                ->where('employee_deductionstandard.employeeid',$getemployeeinfo[0]->id)
                ->where('employee_deductionstandard.status','1')
                ->where('deduction_standard.deleted','0')
                ->get();

            foreach($getdeductionstandard as $deductionstandard){

                if(strtolower($getrate[0]->type) == 'daily'){
                    $dailydeductionstandard = ($deductionstandard->eesamount)*$day_count;
                }else{
                    $dailydeductionstandard = ($deductionstandard->eesamount / count($monthworkdays))*$day_count;
                }
            // return $dailydeductionstandard;
            // return $day_count;
                $totalStandardDeductions += $dailydeductionstandard;
                // return $totalStandardDeductions;

                array_push($standarddeductions,(object)array(
                    'deductiondetail'   => $deductionstandard,
                    'dailydeduction'    => number_format($dailydeductionstandard, 2, '.', ',')
                    // 'dailydeduction'    => number_format($dailydeductionstandard*$day_countdeduction, 2, '.', ',')
                ));

            }
            // return $standarddeductions;
                
            // ====================================================================================================================== other deductions

            // $dailydeductionothers = 0;
        
            $otherdeductions = array();

            $totalOtherDeductions = 0;

            $getdeductionothers = Db::table('employee_deductionother')
                ->where('employee_deductionother.employeeid',$getemployeeinfo[0]->id)
                ->where('employee_deductionother.status','0')
                ->where('employee_deductionother.deleted','0')
                ->get();

            // $totalpaiddeductions = 0;
            // return $getdeductionothers;

            foreach($getdeductionothers as $getdeductionother){
                
                $totalpaiddeduction = 0;

                $getdeductionothersdetails = Db::table('employee_deductionotherdetail')
                    ->where('headerid',$getdeductionother->id)
                    ->get();
                    
                if(count($getdeductionothersdetails) > 0){

                    foreach($getdeductionothersdetails as $getdeductionothersdetail){
                        
                        $totalpaiddeduction+=$getdeductionothersdetail->amountpaid;
    
                    }

                }
                
                if($totalpaiddeduction >= $getdeductionother->amount){

                    Db::table('employee_deductionother')
                        ->where('id', $getdeductionother->id)
                        ->update([
                            'status'    => 1
                        ]);

                }elseif($totalpaiddeduction < $getdeductionother->amount){

                    if(strtolower($getrate[0]->type) == 'daily'){
                        $dailydeductionothers =(($getdeductionother->amount/$getdeductionother->term))*$day_count; //dailydeduction
                    }else{
                        $dailydeductionothers =(($getdeductionother->amount/$getdeductionother->term)/ count($monthworkdays))*$day_count; //dailydeduction
                    }
    
                    $totalOtherDeductions += $dailydeductionothers;
    
                    array_push($otherdeductions,(object)array(
                        'deductiondetail'   => $getdeductionother,
                        'dailydeduction'    => number_format($dailydeductionothers, 2, '.', ',')
                    ));
                    
                }
                
            }
            // return $otherdeductions;
            // ====================================================================================================================== calculate allowance

            // $workingdaysallowance = array();

            // $day_countallowance = cal_days_in_month($typecalendar, date('m'), date('Y')); // Get the amount of days
            
            // for ($i = 1; $i <= $day_countallowance; $i++) {

            //     $dateformatallowance = date('Y').'/'.date('m').'/'.$i; //format date

            //     $get_namedateallowance = Carbon::create($dateformatallowance)->isoFormat('ddd'); //get week day

            //     $day_nameallowance = substr($get_namedateallowance, 0, 3); // Trim day name to 3 chars

            //     //if not a weekend add day to array
            //     if($day_nameallowance != 'Sun'){
                    
            //         $workingdaysallowance[] = date('Y').'-'.date('m').'-'.$i;
                    
            //     }

            // }

            // $numberofdaysinamonthallowance = count($workingdaysallowance);

            // ====================================================================================================================== standard allowance

            $totalStandardAllowance = 0;

            // $dailyallowancestandard = 0;

            $standardallowances = array();

            $getallowancestandard = Db::table('allowance_standard')
                ->join('employee_allowancestandard','allowance_standard.id','=','employee_allowancestandard.allowance_standardid')
                ->where('employee_allowancestandard.employeeid',$getemployeeinfo[0]->id)
                ->where('employee_allowancestandard.status','1')
                ->where('allowance_standard.deleted','0')
                ->get();
            // return $getallowancestandard;
            foreach($getallowancestandard as $allowancestandard){
                
                if(strtolower($getrate[0]->type) == 'daily'){
                    $dailyallowancestandard = ($allowancestandard->amount)*$day_count;
                }else{
                    $dailyallowancestandard = ($allowancestandard->amount / count($monthworkdays))*$day_count;
                }
                
                $totalStandardAllowance += $dailyallowancestandard;
                
                array_push($standardallowances,(object)array(
                    'allowancedetail'   => $allowancestandard,
                    'dailyallowance'    => number_format($dailyallowancestandard, 2, '.', ',')
                    // 'dailyallowance'    => number_format($dailyallowancestandard*$day_countallowance, 2, '.', ',')
                ));

            }
            // return $standardallowances;
                
            // ====================================================================================================================== other allowance

            // $dailyallowanceothers = 0;
        
            $otherallowances = array();

            $totalOtherAllowance = 0;

            $getallowanceothers = Db::table('employee_allowanceother')
                ->where('employee_allowanceother.employeeid',$getemployeeinfo[0]->id)
                ->where('employee_allowanceother.status','0')
                ->where('employee_allowanceother.deleted','0')
                ->get();

            // $totalpaiddeductions = 0;

            foreach($getallowanceothers as $getallowanceother){
                
                $totalpaidallowance = 0;

                $getallowanceothersdetails = Db::table('employee_allowanceotherdetail')
                    ->where('headerid',$getallowanceother->id)
                    ->get();
                    
                if(count($getallowanceothersdetails) > 0){

                    foreach($getallowanceothersdetails as $getallowanceothersdetails){
    
                        $totalpaidallowance+=$getallowanceothersdetails->amountpaid;
    
                    }

                }
                
                if($totalpaidallowance >= $getallowanceother->amount){

                    Db::table('employee_allowanceother')
                        ->where('id', $getallowanceother->id)
                        ->update([
                            'status'    => 1
                        ]);

                }elseif($totalpaidallowance < $getallowanceother->amount){

                    $dailyallowanceothers=(($getallowanceother->amount/$getallowanceother->term)/count($monthworkdays))*$day_count;; //dailydeduction
    
                    $totalOtherAllowance += $dailyallowanceothers;
    
                    array_push($otherallowances,(object)array(
                        'allowancedetail'   => $getallowanceother,
                        'dailyallowance'    => number_format($dailyallowanceothers, 2, '.', ',')
                    ));

                }

            }
                // return $dailynumofhours*;
            // ====================================================================================================================== salary summary

    
            $leaves = Db::table('employee_leaves')
                ->join('hr_leaves','employee_leaves.leaveid','=','hr_leaves.id')
                ->where('hr_leaves.deleted','0')
                ->where('employee_leaves.payrolldone','0')
                ->where('employee_leaves.status','approved')
                ->where('employee_leaves.employeeid',$getemployeeinfo[0]->id)
                ->get();
            // return $leaves;
            $leavesearn = 0;
            $leavesdeduct = 0;
            $leavesnumdays = 0;
            if(count($leaves) > 0){
                
                foreach($leaves as $leave){
                    $datediff  = strtotime($leave->dateto) - strtotime($leave->datefrom);
                    $leavesnumdays += round($datediff / (60 * 60 * 24)) + 1;
                    // return $leavesnumdays;
                    $beginleave = new DateTime($leave->datefrom);

                    $endleave = new DateTime($leave->dateto);

                    $endleave = $endleave->modify( '+1 day' ); 
                    
                    $intervalleave = new DateInterval('P1D');

                    $daterangeleave = new DatePeriod($beginleave, $intervalleave ,$endleave);

                    $daysperiodleave = array();

                    foreach($daterangeleave as $dateleave){

                        array_push($daysperiodleave,$dateleave->format("Y-m-d"));

                    }

                    $daysperiodholiday = array();

                    foreach ($getholidays as $getholiday) {

                        $beginholiday = new DateTime($getholiday->datefrom);

                        $endholiday = new DateTime($getholiday->dateto);

                        $endholiday = $endholiday->modify( '+1 day' ); 
                        
                        $intervalholiday = new DateInterval('P1D');

                        $daterangeholiday = new DatePeriod($beginholiday, $intervalholiday ,$endholiday);


                        foreach($daterangeholiday as $dateholiday){

                            array_push($daysperiodholiday,$dateholiday->format("Y-m-d"));

                        }

                    }
                    $numdaysholidays = 0;
                    $payholidaydays = 0;
                    foreach($daysperiodleave as $dayperiodleave){
                        if(in_array($dayperiodleave,$daysperiodholiday)){
                            // $numdaysholidays+=1;
                            $numdaysholidays+=1;
                            $payholidaydays+=($dailyrate* $getholiday->ratepercentagenowork)/100;
                            // $payholidaydays +=($dailyrate* $getholiday->ratepercentagenowork)/100;
                        
                        }
                    }
                    // return $numdaysholidays;
                    $getpay = DB::table('hr_leaves')
                        ->where('id',$leave->id)
                        ->where('deleted','0')
                        ->get();
                    if(count($getpay) == 0){
                        $leavesdeduct+=($dailyrate*$leavesnumdays);
                    }else{
                        if($getpay[0]->withpay == 0){
                            $leavesdeduct+=($dailyrate*$leavesnumdays);
                        }else{
                            $leavesearn+=($dailyrate*$leavesnumdays);
                        }
                    }
                    if($numdaysholidays>0){
                        $leavesearn+=$payholidaydays;
                        // if($leave->withpay == 1){
                        // }else{
                        //     $leavesdeduct+=($dailyrate*$leavesnumdays);
                        //     $leavesearn+=$payholidaydays;
                        // }
                    }
                    // return $numdaysholidays;
                
                }
            }

                
            // ====================================================================================================================== overtime

            $holidayovertimepay = 0;

            $overtimesalary = 0;

            $dailyovertimehours = 0;

            $overtimes = Db::table('employee_overtime')
                ->where('employee_overtime.deleted','0')
                ->where('employee_overtime.payrolldone','0')
                ->where('employee_overtime.status','approved')
                ->where('employee_overtime.employeeid',$getemployeeinfo[0]->id)
                ->get();
// return $getholidays;
            if(count($overtimes) > 0){
                
                $daysperiodholiday = array();

                foreach ($getholidays as $getholiday) {

                    $beginholiday = new DateTime($getholiday->datefrom);

                    $endholiday = new DateTime($getholiday->dateto);

                    $endholiday = $endholiday->modify( '+1 day' ); 
                    
                    $intervalholiday = new DateInterval('P1D');

                    $daterangeholiday = new DatePeriod($beginholiday, $intervalholiday ,$endholiday);


                    foreach($daterangeholiday as $dateholiday){

                        array_push($daysperiodholiday,$dateholiday->format("Y-m-d"));

                    }

                }

                foreach($overtimes as $overtime){

                    $daysovertimelist = array();

                    $beginovertime = new DateTime($overtime->datefrom);

                    $endovertime = new DateTime($overtime->dateto);

                    $endovertime = $endovertime->modify( '+1 day' ); 
                    
                    $intervalovertime = new DateInterval('P1D');

                    $daterangeovertime = new DatePeriod($beginovertime, $intervalovertime ,$endovertime);

                    foreach($daterangeovertime as $dateovertime){
                        array_push($daysovertimelist,$dateovertime->format("Y-m-d"));
                    }
                    // return 'ada';
                    // return $daterangeovertime;
                    // return $hourlyrate;
                    foreach($daysovertimelist as $dayovertime){
                        if(in_array($dayovertime,$daysperiodholiday)){
                            
                            $holidayovertimepay+=(($hourlyrate* $getholiday->workon)/100)*$overtime->numofhours;
                            
                        }else{
                            $overtimesalary+=$hourlyrate*$overtime->numofhours;
                        }
                    }
                }
            }
            // return $leavesnumdays;

            // ====================================================================================================================== salary summary
            if(count($getrate) == 0){
                $basicpay = 0;
    
                $ratetype = "";

                $projectbasedtype = "";
            
                $attendancesalary = 0;

                // $overtimesalary = 0;

                // $holidaypay = 0;
                // $holidayovertimepay = 0;

            }else{
                
                $basicpay = ($getrate[0]->amount);
    
                $ratetype = $getrate[0]->type;

                $projectbasedtype = $getrate[0]->projectbasedtype;
            
                $attendancesalary = ($dailynumofhours*$hourlyrate);

                // $overtimesalary = ($dailyovertimehours*$hourlyrate);

                // $holidaypay = $holidaypay;
                // $holidayovertimepay = $holidayovertimepay;
            }
            // return $hourlyrate * 8;
            $totalearnings = ($attendancesalary + $overtimesalary + $totalStandardAllowance + $totalOtherAllowance + $holidaypay + $holidayovertimepay + $leavesearn);

            $totaldeductions = ($totalStandardDeductions + $totalOtherDeductions + $leavesdeduct + $latedeductionamount);

            $netsalary = ($totalearnings  -  $totaldeductions);

            $employeesalaryinfo = array();

            
            array_push($employeesalaryinfo, (object)array(
                'employee_info'         => $getemployeeinfo,
                'basicpay'              => $basicpay,
                'ratetype'              => $ratetype,
                'projectratetype'       => $projectbasedtype,
                'allowancestandards'    =>  $standardallowances,
                'allowanceothers'       =>  $otherallowances,
                'deductionstandards'    =>  $standarddeductions,
                'deductionothers'       =>  $otherdeductions,
                'attendancesalary'      => number_format($attendancesalary, 2, '.', ','),
                'overtimepay'           => number_format($overtimesalary, 2, '.', ','),
                'latedeductions'        => number_format($latedeductionamount, 2, '.', ','),
                'holidaypay'            => number_format($holidaypay, 2, '.', ','),
                'holidayovertimepay'    => number_format($holidayovertimepay, 2, '.', ','),
                'leaves'                => $leaves,
                'leavesnumdays'         => $leavesnumdays,
                'leavesearn'            => number_format($leavesearn, 2, '.', ','),
                'leavesdeduct'          => number_format($leavesdeduct, 2, '.', ','),
                'totalearnings'         => number_format($totalearnings, 2, '.', ','),
                'totaldeductions'       => number_format($totaldeductions, 2, '.', ','),
                'netsalary'             => number_format($netsalary, 2, '.', ','),
                'netsalarystring'       => ucwords(Conversion::make($netsalary,' pesos')),
                'exists'                => $exists
            ));
            if($request->get('action') == 'viewdetails'){

                return $employeesalaryinfo;
                
            }
            elseif($request->get('action') == 'generatepayslip'){
                // return number_format($netsalary, 2, '.', ',');
                // return ucwords(Conversion::make(round($netsalary, 2),' pesos'));
                $checkIfExists = Db::table('payroll_history')
                    ->where('employeeid',$request->get('employeeid'))
                    ->where('payrollid',$request->get('payrolldateid'))
                    ->get();
                if(count($checkIfExists) == 0){
                    

                    foreach($employeesalaryinfo[0]->allowanceothers as $otherallowance){
                        DB::table('employee_allowanceotherdetail')
                            ->insert([
                                'headerid'      => $otherallowance->allowancedetail->id,
                                'datepaid'      => date('Y-m-d'),
                                'amountpaid'    => str_replace(',', '', $otherallowance->dailyallowance),
                                'payrollid'     => $request->get('payrolldateid'),
                                'status'        =>  1
                            ]);
                        
                    }
                    // return $employeesalaryinfo;
                    foreach($employeesalaryinfo[0]->deductionothers as $otherdeduction){
                        DB::table('employee_deductionotherdetail')
                            ->insert([
                                'headerid'      => $otherdeduction->deductiondetail->id,
                                'datepaid'      => date('Y-m-d H:i:s'),
                                'amountpaid'    => str_replace(',', '', $otherdeduction->dailydeduction),
                                'payrollid'     => $request->get('payrolldateid'),
                                'status'        =>  1
                            ]);
                        
                    }
                    $getpayrollhistoryid = Db::table('payroll_history')
                        ->insertGetId([
                            'employeeid'        =>  $request->get('employeeid'),
                            'payrollid'         =>  $request->get('payrolldateid'),
                            'payrolldatefrom'   =>  $getdaterange[0]->datefrom,
                            'payrolldateto'     =>  $getdaterange[0]->dateto,
                            'netpay'            =>  str_replace(',', '', $employeesalaryinfo[0]->netsalary),
                            'basicpay'          =>  str_replace(',', '', $employeesalaryinfo[0]->basicpay),
                            'ratetype'          =>  $employeesalaryinfo[0]->ratetype,
                            'projectbasedtype'  =>  $employeesalaryinfo[0]->projectratetype,
                            'attendancesalary'  =>  str_replace(',', '', $employeesalaryinfo[0]->attendancesalary),
                            'totalearnings'     =>  str_replace(',', '', $employeesalaryinfo[0]->totalearnings),
                            'totaldeductions'   =>  str_replace(',', '', $employeesalaryinfo[0]->totaldeductions),
                            'overtimepay'       => str_replace(',', '', $employeesalaryinfo[0]->overtimepay),
                            'holidaypay'        => str_replace(',', '', $employeesalaryinfo[0]->holidaypay),
                            'holidayovertimepay'=> str_replace(',', '', $employeesalaryinfo[0]->holidayovertimepay),
                            'datereleased'      =>  date('Y-m-d H:i:s')
                        ]);
                    if(strtolower($employeesalaryinfo[0]->ratetype) == 'contractual'){

                        $checkIfFullyPaid = Db::table('payroll_history')
                            ->where('employeeid',$request->get('employeeid'))
                            ->get();
                        if(count($checkIfFullyPaid)> 0){
                            $totalpaid = 0;
                            foreach($checkIfFullyPaid as $eachnetpay){
                                $totalpaid+=$eachnetpay->netpay;
                            }
                            if($totalpaid >= str_replace(',', '', $employeesalaryinfo[0]->basicpay)){
                                Db::table('employee_basicsalaryinfo')
                                    ->where('employeeid',$request->get('employeeid'))
                                    ->update([
                                        'status' => 1
                                    ]);
                            }
                        }

                    }
                    elseif(strtolower($employeesalaryinfo[0]->ratetype) == 'project'){
                        $checkIfFullyPaid = Db::table('payroll_history')
                            ->where('employeeid',$request->get('employeeid'))
                            ->get();
                            
                        if($employeesalaryinfo[0]->projectratetype == 'persalaryperiod'){
                            if(count($checkIfFullyPaid)> 0){
                                    Db::table('employee_basicsalaryinfo')
                                        ->where('employeeid',$request->get('employeeid'))
                                        ->update([
                                            'status' => 1
                                        ]);
                            }
                        }

                    }
                    foreach($employeesalaryinfo[0]->deductionothers as $deductother){
                        Db::table('payroll_historydetail')
                            ->insert([
                                'headerid'      => $getpayrollhistoryid,
                                'description'      => $deductother->deductiondetail->description,
                                'amount'      => $deductother->dailydeduction,
                                'type'      => 'otherdeduction',
                                'dateissued'      => date('Y-m-d H:i:s')
                            ]);
                    }
                    foreach($employeesalaryinfo[0]->deductionstandards as $deductstandard){
                        Db::table('payroll_historydetail')
                            ->insert([
                                'headerid'      => $getpayrollhistoryid,
                                'description'      => $deductstandard->deductiondetail->description,
                                'amount'      => $deductstandard->dailydeduction,
                                'type'      => 'standarddeduction',
                                'dateissued'      => date('Y-m-d H:i:s')
                            ]);
                    }
                    foreach($employeesalaryinfo[0]->allowancestandards as $standardallow){
                        Db::table('payroll_historydetail')
                            ->insert([
                                'headerid'      => $getpayrollhistoryid,
                                'description'      => $standardallow->allowancedetail->description,
                                'amount'      => $standardallow->dailyallowance,
                                'type'      => 'standardallowance',
                                'dateissued'      => date('Y-m-d H:i:s')
                            ]);
                    }
                    foreach($employeesalaryinfo[0]->allowanceothers as $allowanceother){
                        Db::table('payroll_historydetail')
                            ->insert([
                                'headerid'      => $getpayrollhistoryid,
                                'description'      => $allowanceother->allowancedetail->description,
                                'amount'      => $allowanceother->dailyallowance,
                                'type'      => 'otherallowance',
                                'dateissued'      => date('Y-m-d H:i:s')
                            ]);
                    }
                    if($employeesalaryinfo[0]->latedeductions > 0.00){
                        Db::table('payroll_historydetail')
                            ->insert([
                                'headerid'      => $getpayrollhistoryid,
                                'description'      => 'Tardiness',
                                'amount'      => str_replace(',', '', $employeesalaryinfo[0]->latedeductions),
                                'type'      => 'otherdeduction',
                                'dateissued'      => date('Y-m-d H:i:s')
                            ]);
                    }
                    if(count($leaves)>0){
                        if($employeesalaryinfo[0]->leavesearn > 0.00){
                            Db::table('payroll_historydetail')
                                ->insert([
                                    'headerid'      => $getpayrollhistoryid,
                                    'description'      => 'Leaves',
                                    'amount'      => $employeesalaryinfo[0]->leavesearn,
                                    'type'      => 'earnedleave',
                                    'employeeleaveid'      => $leaves[0]->id,
                                    'dateissued'      => date('Y-m-d H:i:s')
                                ]);
                            Db::table('employee_leaves')
                                ->where('id',$leaves[0]->id)
                                ->update([
                                    'payrolldone'      => 1
                                ]);
                        }
                        if($employeesalaryinfo[0]->leavesdeduct > 0.00){
                            Db::table('payroll_historydetail')
                                ->insert([
                                    'headerid'      => $getpayrollhistoryid,
                                    'description'      => 'Leaves',
                                    'amount'      => $employeesalaryinfo[0]->leavesdeduct,
                                    'type'      => 'deductleave',
                                    'employeeleaveid'      => $leaves[0]->id,
                                    'dateissued'      => date('Y-m-d H:i:s')
                                ]);
                            Db::table('employee_leaves')
                                ->where('id',$leaves[0]->id)
                                ->update([
                                    'payrolldone'      => 1
                                ]);
                        }
                    }
                    
                    foreach($overtimes as $overtime){
                        
                        DB::table('employee_overtime')
                            ->where('id', $overtime->id)
                            ->update([
                                'payrollid'     =>  $request->get('payrolldateid'),
                                'payrolldone'   => '1'
                            ]);

                    }
                }
                // $getdetailsincurrentpayroll = Db::table('payroll_history')
                //     ->join('teacher','payroll_history.employeeid','=','teacher.id')
                //     ->where('employeeid',$request->get('employeeid'))
                //     ->where('payrollid',$request->get('payrolldateid'))
                //     ->get();
                // return  $employeesalaryinfo;
                $schoolinfo = Db::table('schoolinfo')
                    ->get();
                
            $GLOBALS['bodyHeight'] = 0;
                // return $employeesalaryinfo[0]->leavesearn;
                foreach($getdaterange as $daterange){
                    $daterange->datefrom = date('M d, Y', strtotime($daterange->datefrom));
                    $daterange->dateto = date('M d, Y', strtotime($daterange->dateto));
                }
                
                $pdf = PDF::loadview('hr/pdf/payslip',compact('employeesalaryinfo','schoolinfo','getdaterange'))->setPaper(array(0,0,600,$GLOBALS['bodyHeight']+600));
                return $pdf->stream('Payslip - '.$getdaterange[0]->datefrom.'-'.$getdaterange[0]->dateto.'.pdf');

                
            }

        }
        
        
    }
    public function printfilteredemployeesalary(Request $request)
    {
        // return 'adsad';
        date_default_timezone_set('Asia/Manila');
        // return 'asdasd';
        $my_id = DB::table('teacher')
            // ->select('id')
            ->where('userid',auth()->user()->id)
            ->where('isactive','1')
            ->first();
            
        $checkPayrollHistoryIfExists = Db::table('payroll_history')
        ->where('employeeid',$request->get('employeeid'))
        ->where('payrollid',$request->get('payrolldateid'))
        ->get();
        if(count($checkPayrollHistoryIfExists) == 0){
            $exists = 0;
        }else{
            $exists = 1;
        }

        // ====================================================================================================================== date range

        $getdaterange = Db::table('payroll')
            ->where('status','1')
            ->get();

        // ====================================================================================================================== get employee info

        if($request->get('salarytype') == 'all'){
            $employeeslist = Db::table('teacher')
                ->select(
                    'teacher.id',
                    'teacher.firstname',
                    'teacher.middlename',
                    'teacher.lastname',
                    'teacher.suffix',
                    'teacher.picurl',
                    'usertype.utype',
                    'employee_personalinfo.gender',
                    'employee_personalinfo.departmentid'
                    )
                ->join('usertype','teacher.usertypeid','=','usertype.id')
                ->join('employee_personalinfo','teacher.id','=','employee_personalinfo.employeeid')
                ->where('usertype.utype','!=','PARENT')
                ->where('usertype.utype','!=','STUDENT')
                ->where('isactive','1')
                ->get();

        }elseif($request->get('salarytype') == 'Hourly'){
            $employeeslist = Db::table('teacher')
                ->select(
                    'teacher.id',
                    'teacher.firstname',
                    'teacher.middlename',
                    'teacher.lastname',
                    'teacher.suffix',
                    'teacher.picurl',
                    'usertype.utype',
                    'employee_personalinfo.gender',
                    'employee_personalinfo.departmentid'               
                    )
                ->join('usertype','teacher.usertypeid','=','usertype.id')
                ->join('employee_personalinfo','teacher.id','=','employee_personalinfo.employeeid')                      
                ->join('employee_basicsalaryinfo','teacher.id','=','employee_basicsalaryinfo.employeeid')
                ->join('employee_basistype','employee_basicsalaryinfo.salarybasistype','=','employee_basistype.id')
                ->where('usertype.utype','!=','PARENT')
                ->where('usertype.utype','!=','STUDENT')
                ->where('employee_basistype.type','Hourly')
                ->where('isactive','1')
                ->get();


        }elseif($request->get('salarytype') == 'Daily'){
            $employeeslist = Db::table('teacher')
                ->select(
                    'teacher.id',
                    'teacher.firstname',
                    'teacher.middlename',
                    'teacher.lastname',
                    'teacher.suffix',
                    'teacher.picurl',
                    'usertype.utype',
                    'employee_personalinfo.gender',
                    'employee_personalinfo.departmentid' 
                    )
                ->join('usertype','teacher.usertypeid','=','usertype.id')
                ->join('employee_personalinfo','teacher.id','=','employee_personalinfo.employeeid')      
                ->join('employee_basicsalaryinfo','teacher.id','=','employee_basicsalaryinfo.employeeid')
                ->join('employee_basistype','employee_basicsalaryinfo.salarybasistype','=','employee_basistype.id')
                ->where('usertype.utype','!=','PARENT')
                ->where('usertype.utype','!=','STUDENT')
                ->where('employee_basistype.type','Daily')
                ->where('isactive','1')
                ->get();


        }elseif($request->get('salarytype') == 'Monthly'){
            $employeeslist = Db::table('teacher')
                ->select(
                    'teacher.id',
                    'teacher.firstname',
                    'teacher.middlename',
                    'teacher.lastname',
                    'teacher.suffix',
                    'teacher.picurl',
                    'usertype.utype',
                    'employee_personalinfo.gender',
                    'employee_personalinfo.departmentid'
                    )
                ->join('usertype','teacher.usertypeid','=','usertype.id')
                ->join('employee_personalinfo','teacher.id','=','employee_personalinfo.employeeid')
                ->join('employee_basicsalaryinfo','teacher.id','=','employee_basicsalaryinfo.employeeid')
                ->join('employee_basistype','employee_basicsalaryinfo.salarybasistype','=','employee_basistype.id')
                ->where('usertype.utype','!=','PARENT')
                ->where('usertype.utype','!=','STUDENT')
                ->where('employee_basistype.type','Monthly')
                ->where('isactive','1')
                ->get();


        }elseif($request->get('salarytype') == 'Project'){
            $employeeslist = Db::table('teacher')
                ->select(
                    'teacher.id',
                    'teacher.firstname',
                    'teacher.middlename',
                    'teacher.lastname',
                    'teacher.suffix',
                    'teacher.picurl',
                    'usertype.utype',
                    'employee_personalinfo.gender',
                    'employee_personalinfo.departmentid'
                    )
                ->join('usertype','teacher.usertypeid','=','usertype.id')
                ->join('employee_personalinfo','teacher.id','=','employee_personalinfo.employeeid')
                ->join('employee_basicsalaryinfo','teacher.id','=','employee_basicsalaryinfo.employeeid')
                ->join('employee_basistype','employee_basicsalaryinfo.salarybasistype','=','employee_basistype.id')
                ->where('usertype.utype','!=','PARENT')
                ->where('usertype.utype','!=','STUDENT')
                ->where('employee_basistype.type','Project')
                ->where('isactive','1')
                ->get();


        }
        // ====================================================================================================================== get salary rate


            // ====================================================================================================================== get working days
            // return $employeeslist;

        $typecalendar = CAL_GREGORIAN;

        function getWorkingDays($startDate,$endDate){

            $startDate = strtotime($startDate);

            $endDate = strtotime($endDate);
            
            if($startDate <= $endDate){

                $datediff = $endDate - $startDate;

                return floor($datediff / (60 * 60 * 24));

            }

            return false;
            
            
        }
        // return $
        $employeesalaryinfo = array();
        foreach($employeeslist as $employee){
            $getrate = Db::table('employee_basicsalaryinfo')
            ->select(
                'employee_basicsalaryinfo.amount',
                'employee_basistype.type',
                'employee_basicsalaryinfo.mondays',
                'employee_basicsalaryinfo.tuesdays',
                'employee_basicsalaryinfo.wednesdays',
                'employee_basicsalaryinfo.thursdays',
                'employee_basicsalaryinfo.fridays',
                'employee_basicsalaryinfo.saturdays',
                'employee_basicsalaryinfo.sundays',
                'employee_basicsalaryinfo.mondayhours',
                'employee_basicsalaryinfo.tuesdayhours',
                'employee_basicsalaryinfo.wednesdayhours',
                'employee_basicsalaryinfo.thursdayhours',
                'employee_basicsalaryinfo.fridayhours',
                'employee_basicsalaryinfo.saturdayhours',
                'employee_basicsalaryinfo.sundayhours',
                'employee_basicsalaryinfo.holidays',
                'employee_basicsalaryinfo.hoursperday',
                'employee_basicsalaryinfo.projectbasedtype',
                'employee_basicsalaryinfo.hoursperweek',
                'employee_basicsalaryinfo.noofmonths',
                'employee_basicsalaryinfo.status'
                )
            ->join('employee_basistype','employee_basicsalaryinfo.salarybasistype','=','employee_basistype.id')
            ->where('employee_basicsalaryinfo.employeeid',$employee->id)
            ->where('employee_basicsalaryinfo.status','0')
            ->get();
                // return $getrate;
            if(count($getrate) == 0){

                $day_count = getWorkingDays($getdaterange[0]->datefrom,$getdaterange[0]->dateto);
                
                $day_count+=1;
                $workdays = array();
                $begin = new DateTime($getdaterange[0]->datefrom);
                $end = new DateTime($getdaterange[0]->dateto);
                $end = $end->modify( '+1 day' ); 
                
                $interval = new DateInterval('P1D');
                $daterange = new DatePeriod($begin, $interval ,$end);
                $daysperiod = array();

                foreach($daterange as $date){
                    array_push($daysperiod,$date->format("Y-m-d"));
                }

                foreach($daysperiod as $dayperiod){
                    
                    $day_name = date('D', strtotime($dayperiod)); // Trim day name to 3 chars
                    
                    //if not a weekend add day to array
                    // if($day_name != 'Sun'){
                            
                        $workdays[] = $dayperiod;

                    // }
    

                }
    
                $beginmonth = new DateTime(date('Y-m-01', strtotime($getdaterange[0]->datefrom)));

                $endmonth = new DateTime(date('Y-m-t', strtotime($getdaterange[0]->datefrom)));

                $endmonth = $endmonth->modify( '+1 day' ); 
                
                $intervalmonth = new DateInterval('P1D');

                $daterangemonth = new DatePeriod($beginmonth, $intervalmonth ,$endmonth);

                $monthworkdays = array();

                foreach($daterangemonth as $datemonth){

                    // if($datemonth->format("D") == 'Sun'){
                        
                    //     if($getrate[0]->sundays == 1){

                    //         array_push($monthworkdays,$datemonth->format("Y-m-d"));

                    //     }

                    // }
                    // elseif($datemonth->format("D") == 'Sat'){
                        
                    //     if($getrate[0]->saturdays == 1){

                    //         array_push($monthworkdays,$datemonth->format("Y-m-d"));

                    //     }

                    // }else{

                        array_push($monthworkdays,$datemonth->format("Y-m-d"));
// 
                    // }

                }
            }else{

                $day_count = getWorkingDays($getdaterange[0]->datefrom,$getdaterange[0]->dateto);
                
                $day_count+=1;
                
                if(strtolower($getrate[0]->type) == 'hourly'){
                    
                    $workdays = array();
                    $begin = new DateTime($getdaterange[0]->datefrom);
                    $end = new DateTime($getdaterange[0]->dateto);
                    $end = $end->modify( '+1 day' ); 
                    
                    $interval = new DateInterval('P1D');
                    $daterange = new DatePeriod($begin, $interval ,$end);
                    $daysperiod = array();

                    foreach($daterange as $date){
                        array_push($daysperiod,$date->format("Y-m-d"));
                    }

                    foreach($daysperiod as $dayperiod){
                        
                        $day_name = date('D', strtotime($dayperiod)); // Trim day name to 3 chars
                        
                        //if not a weekend add day to array
                        
                        if($day_name == 'Mon'){
                            
                            if(count($getrate) > 0){
                                
                                if($getrate[0]->mondays == 1){
        
                                    $workdays[] = $dayperiod;
        
                                }

                            }
    
                        }elseif($day_name == 'Tue'){
                            
                            if(count($getrate) > 0){
                                
                                if($getrate[0]->tuesdays == 1){
        
                                    $workdays[] = $dayperiod;
        
                                }

                            }
    
                        }elseif($day_name == 'Wed'){
                            
                            if(count($getrate) > 0){
                                
                                if($getrate[0]->wednesdays == 1){
        
                                    $workdays[] = $dayperiod;
        
                                }

                            }
    
                        }elseif($day_name == 'Thu'){
                            
                            if(count($getrate) > 0){
                                
                                if($getrate[0]->thursdays == 1){
        
                                    $workdays[] = $dayperiod;
        
                                }

                            }
    
                        }elseif($day_name == 'Fri'){
                            
                            if(count($getrate) > 0){
                                
                                if($getrate[0]->fridays == 1){
        
                                    $workdays[] = $dayperiod;
        
                                }

                            }
    
                        }elseif($day_name == 'Sat'){
                            
                            if(count($getrate) > 0){
                                
                                if($getrate[0]->saturdays == 1){
        
                                    $workdays[] = $dayperiod;
        
                                }

                            }
    
                        }elseif($day_name == 'Sun'){
                            
                            if(count($getrate) > 0){
                                
                                if($getrate[0]->sundays == 1){

                                    $workdays[] = $dayperiod;
        
                                }

                            }
                            
    
                        }

                    }
                    
                    $beginmonth = new DateTime(date('Y-m-01', strtotime($getdaterange[0]->datefrom)));

                    $endmonth = new DateTime(date('Y-m-t', strtotime($getdaterange[0]->datefrom)));

                    $endmonth = $endmonth->modify( '+1 day' ); 
                    
                    $intervalmonth = new DateInterval('P1D');

                    $daterangemonth = new DatePeriod($beginmonth, $intervalmonth ,$endmonth);

                    $monthworkdays = array();

                    foreach($daterangemonth as $datemonth){

                        if($datemonth->format("D") == 'Sun'){
                            
                            if($getrate[0]->sundays == 1){
    
                                array_push($monthworkdays,$datemonth->format("Y-m-d"));
    
                            }
    
                        }
                        elseif($datemonth->format("D") == 'Sat'){
                            
                            if($getrate[0]->saturdays == 1){
    
                                array_push($monthworkdays,$datemonth->format("Y-m-d"));
    
                            }
    
                        }else{
    
                            array_push($monthworkdays,$datemonth->format("Y-m-d"));
    
                        }

                    }
    
                }elseif(strtolower($getrate[0]->type) == 'daily'){
                     //automatic daily rate



                     
                    $workdays = array();
                    $begin = new DateTime($getdaterange[0]->datefrom);
                    $end = new DateTime($getdaterange[0]->dateto);
                    $end = $end->modify( '+1 day' ); 
                    
                    $interval = new DateInterval('P1D');
                    $daterange = new DatePeriod($begin, $interval ,$end);
                    $daysperiod = array();

                    foreach($daterange as $date){
                        array_push($daysperiod,$date->format("Y-m-d"));
                    }

                    foreach($daysperiod as $dayperiod){
                        
                        $day_name = date('D', strtotime($dayperiod)); // Trim day name to 3 chars
    
                            $workdays[] = $dayperiod;

                    }
                    
                    // $monthworkdays = array();
    
                    // $monthdaycount = getWorkingDays(date('Y-m-01', strtotime($getdaterange[0]->datefrom)), date('Y-m-t', strtotime($getdaterange[0]->datefrom)));
                    
                    // for ($i = 1; $i <= $monthdaycount; $i++) {
        
                    //     $date = date('Y').'/'.date('m').'/'.$i; //format date
        
                    //     $get_name = Carbon::create($date)->isoFormat('ddd'); //get week day
        
                    //     $day_name = substr($get_name, 0, 3); // Trim day name to 3 chars
                        
                    //     $monthworkdays[] = date('Y-m-d', strtotime(date('Y').'-'.date('m').'-'.$i));
                            
                    // }
                    
    
                }elseif(strtolower($getrate[0]->type) == 'monthly'){

                    $workdays = array();
    
                    $begin = new DateTime($getdaterange[0]->datefrom);

                    $end = new DateTime($getdaterange[0]->dateto);

                    $end = $end->modify( '+1 day' ); 
                    
                    $interval = new DateInterval('P1D');

                    $daterange = new DatePeriod($begin, $interval ,$end);

                    $daysperiod = array();

                    foreach($daterange as $date){

                        array_push($daysperiod,$date->format("Y-m-d"));

                    }
                    
                    foreach($daysperiod as $dayperiod){
                        
                        $day_name = date('D', strtotime($dayperiod)); // Trim day name to 3 chars
    
                            $workdays[] = $dayperiod;

                    }
    
    
                    
                    $beginmonth = new DateTime(date('Y-m-01', strtotime($getdaterange[0]->datefrom)));

                    $endmonth = new DateTime(date('Y-m-t', strtotime($getdaterange[0]->datefrom)));

                    $endmonth = $endmonth->modify( '+1 day' ); 
                    
                    $intervalmonth = new DateInterval('P1D');

                    $daterangemonth = new DatePeriod($beginmonth, $intervalmonth ,$endmonth);

                    $monthworkdays = array();

                    foreach($daterangemonth as $datemonth){

                        array_push($monthworkdays,$datemonth->format("Y-m-d"));

                    }
                    // return $monthworkdays;
    
                }elseif(strtolower($getrate[0]->type) == 'project'){

                    $workdays = array();
    
                    $begin = new DateTime($getdaterange[0]->datefrom);

                    $end = new DateTime($getdaterange[0]->dateto);

                    $end = $end->modify( '+1 day' ); 
                    
                    $interval = new DateInterval('P1D');

                    $daterange = new DatePeriod($begin, $interval ,$end);

                    $daysperiod = array();

                    foreach($daterange as $date){

                        array_push($daysperiod,$date->format("Y-m-d"));

                    }
                    
                    foreach($daysperiod as $dayperiod){
                        
                        $day_name = date('D', strtotime($dayperiod)); // Trim day name to 3 chars

                        if($getrate[0]->projectbasedtype == 'perday'){

                            // if($day_name != 'Sun'){
    
                                $workdays[] = $dayperiod;
                                
                            // }

                        }
                        elseif($getrate[0]->projectbasedtype == 'persalaryperiod'){
    
                                $workdays[] = $dayperiod;
                            
                        }
                        elseif($getrate[0]->projectbasedtype == 'permonth'){
    
                                $workdays[] = $dayperiod;
                            
                        }
    

                    }
    
                    $beginmonth = new DateTime(date('Y-m-01', strtotime($getdaterange[0]->datefrom)));

                    $endmonth = new DateTime(date('Y-m-t', strtotime($getdaterange[0]->datefrom)));

                    $endmonth = $endmonth->modify( '+1 day' ); 
                    
                    $intervalmonth = new DateInterval('P1D');

                    $daterangemonth = new DatePeriod($beginmonth, $intervalmonth ,$endmonth);

                    $monthworkdays = array();

                    foreach($daterangemonth as $datemonth){
                        array_push($monthworkdays,$datemonth->format("Y-m-d"));

                    }

                    // return date('Y-m-t', strtotime($getdaterange[0]->datefrom));
                    // $monthdaycount = getWorkingDays(date('Y-m-01', strtotime($getdaterange[0]->datefrom)), date('Y-m-t', strtotime($getdaterange[0]->datefrom)));
                    // // $monthdaycount+=1;
    
                    // for ($i = 1; $i <= $monthdaycount; $i++) {
        
                    //     $date = date('Y').'-'.date('m',strtotime($getdaterange[0]->datefrom)).'-'.$i; //format date
                    //     // return $date;
                    //     $get_name = Carbon::create($date)->isoFormat('ddd'); //get week day
        
                    //     $day_name = substr($get_name, 0, 3); // Trim day name to 3 chars
    
                    //     //if not a weekend add day to array
                        
                    //     $monthworkdays[] = $date;
                            
                    // }
    
                }
            }
            // ====================================================================================================================== calculate daily/hpurly rates

            
            if(count($getrate) == 0){

                $getrate = array();

                array_push($getrate,(object)array(
                    'amount'    =>  0,
                    'type'      =>  " ",
                    'hoursperday'      =>  0,
                    'projectbasedtype' => ""
                ));

                $dailyrate = 0;

                $hourlyrate = 0;


            }else{

                if(strtolower($getrate[0]->type) == 'monthly'){

                    if(count($workdays) == 0){

                        $dailyrate =  $getrate[0]->amount / (int)(date('t') - date('01'));

                    }else{
                        // return $monthdaycount;
                        // round($getrate[0]->amount / $monthdaycount, 2);
                        $dailyrate =  $getrate[0]->amount / count($monthworkdays);
                        
                    }
                    // return $getrate[0]->hoursperday;
                    if($getrate[0]->hoursperday == 0 || $dailyrate == 0){
                        $hourlyrate = 0;
                    }else{
                        $hourlyrate = ($dailyrate)/$getrate[0]->hoursperday;
                    }
                    // return 'asd';

                }
                elseif(strtolower($getrate[0]->type) == 'daily'){
    
                    $dailyrate =  round($getrate[0]->amount, 2);
            
                    $hourlyrate = ($dailyrate)/$getrate[0]->hoursperday;

                }
                elseif(strtolower($getrate[0]->type) == 'hourly'){
            
                    $hoursperday = 0;
                    if($hoursperday == 0){
                        if($getrate[0]->mondayhours > 0){
                            $hoursperday = $getrate[0]->mondayhours;
                        }
                        if($getrate[0]->tuesdayhours > 0){
                            $hoursperday = $getrate[0]->tuesdayhours;
                        }
                        if($getrate[0]->wednesdayhours > 0){
                            $hoursperday = $getrate[0]->wednesdayhours;
                        }
                        if($getrate[0]->thursdayhours > 0){
                            $hoursperday = $getrate[0]->thursdayhours;
                        }
                        if($getrate[0]->fridayhours > 0){
                            $hoursperday = $getrate[0]->fridayhours;
                        }
                        if($getrate[0]->saturdayhours > 0){
                            $hoursperday = $getrate[0]->saturdayhours;
                        }
                        if($getrate[0]->sundayhours > 0){
                            $hoursperday = $getrate[0]->sundayhours;
                        }
                    }
                    
                    $dailyrate = ($getrate[0]->amount/$hoursperday);
                    
                    $hourlyrate = $getrate[0]->amount;

                }
                elseif(strtolower($getrate[0]->type) == 'project'){
                    // return $getrate[0]->hoursperday;
                    // return $workdays;
                    if($getrate[0]->projectbasedtype == 'persalaryperiod'){
                        
                        $dailyrate =  $getrate[0]->amount/count($workdays); 

                        $hourlyrate =  ($getrate[0]->amount/count($workdays))/$getrate[0]->hoursperday; 

                    }
                    elseif($getrate[0]->projectbasedtype == 'perday'){
                        
                        $dailyrate = $getrate[0]->amount;

                        $hourlyrate = $getrate[0]->amount/$getrate[0]->hoursperday;

                    }
                    elseif($getrate[0]->projectbasedtype == 'permonth'){
                        
                        $hourlyrate = ($getrate[0]->amount/count($monthworkdays))/$getrate[0]->hoursperday;

                        $dailyrate =  $getrate[0]->amount/count($monthworkdays); 
                        // return
                        
                    }
                    
                }
                // return $dailyrate;

            }
            
            // ====================================================================================================================== calculate attendance salary
            $getlatedeductionsetup = Db::table('deduction_tardinesssetup')
                ->where('status','1')
                ->first();
            // return $getlatedeductionsetup->type;
            if(strtolower($getlatedeductionsetup->type) == 'custom'){

                $deductiontardinessapplication = Db::table('deduction_tardinessapplication')
                    ->where('departmentid',$employee->departmentid)
                    ->where('deleted','0')
                    ->get();
                if(count($deductiontardinessapplication)==0){

                }else{
                    $deductioncomputation = Db::table('deduction_tardinessdetail')
                        ->where('id',$deductiontardinessapplication[0]->tardinessdetailid)
                        ->where('deleted','0')
                        ->get();
                    // return $deductioncomputation;
                } 
            }else{

            }
            
            $getAttendance = Db::table('teacherattendance') 
                ->where('teacher_id',$employee->id)
                ->whereBetween('tdate',[$getdaterange[0]->datefrom,$getdaterange[0]->dateto])
                ->where('deleted','0')
                ->get();
                // return $getAttendance;
            $getsyid = DB::table('sy')
                ->where('isactive','1')
                ->first();

            $getholidays = DB::table('schoolcal')
                ->join('schoolcaltype','schoolcal.type','=','schoolcaltype.id')
                ->where('schoolcal.syid',$getsyid->id)
                ->where('schoolcal.deleted','0')
                ->where('schoolcaltype.type','1')
                ->get();

            $gettimesched = DB::table('employee_customtimesched')
                ->where('employeeid',$employee->id)
                ->get();

            if(count($gettimesched) == 0){

                DB::table('employee_customtimesched')
                    ->insert([
                        'employeeid'    =>  $employee->id,
                        'amin'          =>  '07:30:00',
                        'amout'         =>  '12:00:00',
                        'pmin'          =>  '01:00:00',
                        'pmout'         =>  '04:30:00',
                        'createdby'     =>  $my_id->id,
                        'createdon'     =>  date('Y-m-d H:i:s')
                    ]);

                $gettimesched = DB::table('employee_customtimesched')
                    ->where('employeeid',$employee->id)
                    ->get();
            }
            $latedeductionamount = 0;
// return $getholidays;
            $holidaypay = 0;

            $holidayovertimepay = 0;

            $dailynumofhours = 0;

            $dailyovertimehours = 0;

            if(count($getrate) > 0){
                
                    
                foreach($workdays as $workdaydefault){

                    $same = 0;

                    $holiday = 0;

                    $holidaytype = "";
                    // return $getAttendance;
                    if(count($getAttendance) == 0){
                        // return 'asda';
                        foreach ($getholidays as $getholiday) {
                            # code...
                            // if($getholiday->typename == 'REGULAR HOLIDAY'){?

                                
                                $beginholiday = new DateTime($getholiday->datefrom);

                                $endholiday = new DateTime($getholiday->dateto);

                                $endholiday = $endholiday->modify( '+1 day' ); 
                                
                                $intervalholiday = new DateInterval('P1D');

                                $daterangeholiday = new DatePeriod($beginholiday, $intervalholiday ,$endholiday);

                                $daysperiodholiday = array();

                                foreach($daterangeholiday as $dateholiday){

                                    array_push($daysperiodholiday,$dateholiday->format("Y-m-d"));

                                }
                                if(in_array($workdaydefault,$daysperiodholiday)){
                                    // return 'sadsada';
                                    // foreach($getholidays as $getholiday){
                                    //     if(strtolower($getholiday->description) == 'regular holiday'){
                                            // $getholidayrate = Db::table('holidayrates')
                                            //     ->where('description','like','%regular holiday')
                                            //     ->where('status','1')
                                            //     ->get();
                                            // return $getholiday->typename;
                                            $holidaypay += ($dailyrate * ($getholiday->ratepercentagenowork/100));
                                    //     }
                                    // }

                                }

                            // }

                        }
                    }else{

                        foreach($getAttendance as $attendance){
                            
                            if($workdaydefault == $attendance->tdate){
                                // return $attendance->tdate;
                                
                                $same = 1;
                    
                                foreach ($getholidays as $getholiday) {
                                    # code...
                                    // if($getholiday->typename == 'REGULAR HOLIDAY'){

                                        
                                        $beginholiday = new DateTime($getholiday->datefrom);

                                        $endholiday = new DateTime($getholiday->dateto);

                                        $endholiday = $endholiday->modify( '+1 day' ); 
                                        
                                        $intervalholiday = new DateInterval('P1D');

                                        $daterangeholiday = new DatePeriod($beginholiday, $intervalholiday ,$endholiday);

                                        $daysperiodholiday = array();

                                        foreach($daterangeholiday as $dateholiday){

                                            array_push($daysperiodholiday,$dateholiday->format("Y-m-d"));

                                        }
                                        if(in_array($attendance->tdate,$daysperiodholiday)){

                                            $holiday = 1;

                                            $holidaytype = $getholiday->id;

                                        }

                                    // }

                                }

                            }else{
                        
                                foreach ($getholidays as $getholiday) {
                                    # code...
                                    // if($getholiday->typename == 'REGULAR HOLIDAY'){
        
                                        
                                        $beginholiday = new DateTime($getholiday->datefrom);
        
                                        $endholiday = new DateTime($getholiday->dateto);
        
                                        $endholiday = $endholiday->modify( '+1 day' ); 
                                        
                                        $intervalholiday = new DateInterval('P1D');
        
                                        $daterangeholiday = new DatePeriod($beginholiday, $intervalholiday ,$endholiday);
        
                                        $daysperiodholiday = array();
        
                                        foreach($daterangeholiday as $dateholiday){
        
                                            array_push($daysperiodholiday,$dateholiday->format("Y-m-d"));
        
                                        }
                                        if(in_array($workdaydefault,$daysperiodholiday)){
        
                                            $holiday = 1;

                                            $holidaytype = $getholiday->id;
                                        }
        
                                    // }
        
                                }
                            }
                            
                        }
                        
                        if($same == 1){

                            // ============================================================================================================================================================
                            // ============================================================================= PRESENT ======================================================================
                            // ============================================================================================================================================================
                                
                            if($attendance->in_am == null){

                                $am_in = date('h:i:s'); 
                
                            }
                            else{

                                // $amminuteselapsed = round(abs($amdatetime1 - $amdatetime2) / 60);
                                
                                if(strtolower($getlatedeductionsetup->type) == 'custom' && count($deductiontardinessapplication) > 0){

                                    $amdatetime1 = strtotime($gettimesched[0]->amin);
    
                                    $amdatetime2 = strtotime($attendance->in_am);
    
                                    $amtimedifference = $amdatetime2 - $amdatetime1 ;
    
                                    if($amtimedifference > 0){
    
                                        $amminuteselapsed = ($amtimedifference) / 60 ;
    
                                    }else{
    
                                        $amminuteselapsed = 0 ;
    
                                    }

                                    if(count($deductioncomputation) > 0){

                                        if($deductioncomputation[0]->minutes == 1){
                                            
                                            if($deductioncomputation[0]->basisfixedamount == 1){

                                                $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * $deductioncomputation[0]->amount;

                                            }
                                            if($deductioncomputation[0]->basispercentage == 1){
                                                    
                                                if(strtolower($getrate[0]->type) == 'hourly'){
                                                    if($getrate[0]->mondays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'monday'){
                                                            $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->mondayhours)/60);
                                                        }
                                                    }
                                                    if($getrate[0]->tuesdays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'tuesday'){
                                                        $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->tuesdayhours)/60);
                                                        }
                                                    }
                                                    if($getrate[0]->wednesdays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'wednesday'){
                                                        $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->wednesdayhours)/60);
                                                        }
                                                    }
                                                    if($getrate[0]->thursdays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'thursday'){
                                                        $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->thursdayhours)/60);
                                                        }
                                                    }
                                                    if($getrate[0]->fridays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'friday'){
                                                        $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->fridayhours)/60);
                                                        }
                                                    }
                                                    if($getrate[0]->saturdays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'saturday'){
                                                        $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->saturdayhours)/60);
                                                        }
                                                    }
                                                    if($getrate[0]->sundays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'sunday'){
                                                        $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->sundayhours)/60);
                                                        }
                                                    }
                                                }
                                                elseif(strtolower($getrate[0]->type) == 'daily'){

                                                    $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->hoursperday)/60);
                                                    
                                                }
                                                elseif(strtolower($getrate[0]->type) == 'monthly'){

                                                    $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->hoursperday)/60);

                                                }
                                                elseif(strtolower($getrate[0]->type) == 'project'){

                                                    $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * (($dailyrate/$getrate[0]->hoursperday)/60);

                                                }

                                            }

                                        }

                                    }

                                }else{

                                    $amdatetime1 = strtotime('08:00:00');
    
                                    $amdatetime2 = strtotime($attendance->in_am);
    
                                    $amtimedifference = $amdatetime2 - $amdatetime1 ;
    
                                    if($amtimedifference > 0){
    
                                        $amminuteselapsed = ($amtimedifference) / 60 ;
    
                                    }else{
    
                                        $amminuteselapsed = 0 ;
    
                                    }
                                        
                                    if(strtolower($getrate[0]->type) == 'hourly'){
                                        
                                        if($getrate[0]->mondays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'monday'){
                                                $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->mondayhours)/60);
                                            }
                                        }
                                        if($getrate[0]->tuesdays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'tuesday'){
                                            $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->tuesdayhours)/60);
                                            }
                                        }
                                        if($getrate[0]->wednesdays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'wednesday'){
                                            $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->wednesdayhours)/60);
                                            }
                                        }
                                        if($getrate[0]->thursdays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'thursday'){
                                            $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->thursdayhours)/60);
                                            }
                                        }
                                        if($getrate[0]->fridays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'friday'){
                                            $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->fridayhours)/60);
                                            }
                                        }
                                        if($getrate[0]->saturdays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'saturday'){
                                            $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->saturdayhours)/60);
                                            }
                                        }
                                        if($getrate[0]->sundays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'sunday'){
                                            $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->sundayhours)/60);
                                            }
                                        }
                                    }
                                    elseif(strtolower($getrate[0]->type) == 'daily'){

                                        $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->hoursperday)/60);
                                        
                                    }
                                    elseif(strtolower($getrate[0]->type) == 'monthly'){

                                        $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->hoursperday)/60);

                                    }
                                    elseif(strtolower($getrate[0]->type) == 'project'){

                                        $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->hoursperday)/60);

                                    }


                                }

                                $am_in = $attendance->in_am; 
                
                            }


                            if($attendance->out_am == null){
                                
                                $am_out = date('h:i:s'); 
                
                            }
                            else{
                
                                $am_out = explode(':', $attendance->out_am); 

                                if($am_out[0] == 00){

                                    $am_out = date('h:i:s', strtotime('12'.':'.$am_out[1].':'.$am_out[0]));

                                }else{

                                    $am_out = $attendance->out_am; 

                                }
                
                            }

                            $amto_time = strtotime($am_out);

                            $amfrom_time = strtotime($am_in);

                            $totalam = round(abs($amto_time - $amfrom_time) / 60) / 60;

                            if($attendance->in_pm == null){

                                $pm_in = date('h:i:s'); 
                
                            }
                            else{

                                // $pmminuteselapsed = round(abs($pmdatetime1 - $pmdatetime2) / 60);

                                if(strtolower($getlatedeductionsetup->type) == 'custom' && count($deductiontardinessapplication) > 0){

                                    $pmdatetime1 = strtotime($gettimesched[0]->pmin);
    
                                    $pmdatetime2 = strtotime($attendance->in_pm);
    
                                    $pmtimedifference = $pmdatetime2 - $pmdatetime1 ;
    
                                    if($pmtimedifference > 0){
    
                                        $pmminuteselapsed = ($pmtimedifference) / 60 ;
    
                                    }else{
    
                                        $pmminuteselapsed = 0 ;
    
                                    }
                                
                                    if(count($deductioncomputation) > 0){

                                        if($deductioncomputation[0]->minutes == 1){

                                            if($deductioncomputation[0]->basisfixedamount == 1){

                                                $latedeductionamount+= ($pmminuteselapsed/$deductioncomputation[0]->lateduration) * $deductioncomputation[0]->amount;
                                                
                                            }
                                            if($deductioncomputation[0]->basispercentage == 1){
                                                    
                                                if(strtolower($getrate[0]->type) == 'hourly'){
                                                    if($getrate[0]->mondays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'monday'){
                                                            $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->mondayhours)/60);
                                                        }
                                                    }
                                                    if($getrate[0]->tuesdays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'tuesday'){
                                                        $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->tuesdayhours)/60);
                                                        }
                                                    }
                                                    if($getrate[0]->wednesdays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'wednesday'){
                                                        $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->wednesdayhours)/60);
                                                        }
                                                    }
                                                    if($getrate[0]->thursdays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'thursday'){
                                                        $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->thursdayhours)/60);
                                                        }
                                                    }
                                                    if($getrate[0]->fridays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'friday'){
                                                        $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->fridayhours)/60);
                                                        }
                                                    }
                                                    if($getrate[0]->saturdays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'saturday'){
                                                        $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->saturdayhours)/60);
                                                        }
                                                    }
                                                    if($getrate[0]->sundays == 1){
                                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'sunday'){
                                                        $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->sundayhours)/60);
                                                        }
                                                    }
                                                }
                                                elseif(strtolower($getrate[0]->type) == 'daily'){

                                                    $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->hoursperday)/60);
                                                    
                                                }
                                                elseif(strtolower($getrate[0]->type) == 'monthly'){

                                                    $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->hoursperday)/60);

                                                }
                                                elseif(strtolower($getrate[0]->type) == 'project'){

                                                    $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * (($dailyrate/$getrate[0]->hoursperday)/60);

                                                }

                                            }

                                        }

                                    }
                                    
                                }else{

                                    $pmdatetime1 = strtotime('12:00:00');
    
                                    $pmdatetime2 = strtotime($attendance->in_pm);
    
                                    $pmtimedifference = $pmdatetime2 - $pmdatetime1 ;
    
                                    if($pmtimedifference > 0){
    
                                        $pmminuteselapsed = ($pmtimedifference) / 60 ;
    
                                    }else{
    
                                        $pmminuteselapsed = 0 ;
    
                                    }
                                        
                                    if(strtolower($getrate[0]->type) == 'hourly'){
                                        
                                        if($getrate[0]->mondays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'monday'){
                                                $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->mondayhours)/60);
                                            }
                                        }
                                        if($getrate[0]->tuesdays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'tuesday'){
                                            $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->tuesdayhours)/60);
                                            }
                                        }
                                        if($getrate[0]->wednesdays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'wednesday'){
                                            $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->wednesdayhours)/60);
                                            }
                                        }
                                        if($getrate[0]->thursdays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'thursday'){
                                            $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->thursdayhours)/60);
                                            }
                                        }
                                        if($getrate[0]->fridays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'friday'){
                                            $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->fridayhours)/60);
                                            }
                                        }
                                        if($getrate[0]->saturdays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'saturday'){
                                            $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->saturdayhours)/60);
                                            }
                                        }
                                        if($getrate[0]->sundays == 1){
                                            if(strtolower(date('l', strtotime($attendance->tdate))) == 'sunday'){
                                            $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->sundayhours)/60);
                                            }
                                        }
                                    }
                                    elseif(strtolower($getrate[0]->type) == 'daily'){

                                        $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->hoursperday)/60);
                                        
                                    }
                                    elseif(strtolower($getrate[0]->type) == 'monthly'){

                                        $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->hoursperday)/60);

                                    }
                                    elseif(strtolower($getrate[0]->type) == 'project'){
                                        
                                        $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->hoursperday)/60);

                                    }


                                }
                                
                                $pm_in = explode(':', $attendance->in_pm); 

                                if($pm_in[0] == 00){

                                    $pm_in = date('h:i:s', strtotime('12'.':'.$pm_in[1].':'.$pm_in[0]));

                                }else{

                                    $pm_in = $attendance->in_pm; 

                                }
                
                            }
                            if($attendance->out_pm == null){
                
                                $pm_out = date('h:i:s'); 
                
                            }
                            else{

                                $pm_out = explode(':', $attendance->out_pm); 

                                if($pm_out[0] == 00){

                                    $pm_out = date('h:i:s', strtotime('12'.':'.$pm_out[1].':'.$pm_out[0]));

                                }else{

                                    $pm_out = $attendance->out_pm; 

                                }
                
                            }
                           
                            // $pmto_time = strtotime($pm_out);
                            $pmto_time = strtotime($gettimesched[0]->pmout);

                            $pmfrom_time = strtotime($pm_in);

                            // $totalpm = round(abs($pmto_time - $pmfrom_time) / 60) / 60;
                            // return $pmto_time;
                            $totalpm = round(abs($pmto_time - $pmfrom_time) / 60) / 60;
                            // return $totalpm;
                            
                            $totalhours = ($totalam + $totalpm);
                            
                            if($holiday == 1){
                                    
                                // ========================================================================== IF NOT HOLIDAYS =================================================================
                                // ========================================================================== IF NOT HOLIDAYS =================================================================

                                $getholidayrate = Db::table('schoolcaltype')
                                    ->where('id',$holidaytype)
                                    ->get();

                                if(strtolower($getrate[0]->type) == 'hourly'){
                                        
                                    if($getrate[0]->mondays == 1){
                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'monday'){
                                            if($totalhours==$getrate[0]->mondayhours){

                                                $dailynumofhours += $getrate[0]->mondayhours; 

                                                $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
            
                                            }
                                            // elseif($totalhours>$getrate[0]->mondayhours){
                                                
                                            //     $dailynumofhours += $getrate[0]->mondayhours; 
                                            //     $dailyovertimehours += ($totalhours - $getrate[0]->mondayhours);

                                            //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                
                                            //     $holidayovertimepay+= (($totalhours - $getrate[0]->mondayhours) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
            
                                            // }
                                            elseif($totalhours<$getrate[0]->mondayhours){
                                                
                                                $dailynumofhours += $totalhours; 

                                                $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                            }
                                        }
                                    }
                                    if($getrate[0]->tuesdays == 1){
                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'tuesday'){
                                            if($totalhours==$getrate[0]->tuesdayhours){

                                                $dailynumofhours += $getrate[0]->tuesdayhours; 

                                                $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
            
                                            }
                                            // elseif($totalhours>$getrate[0]->tuesdayhours){
                                                
                                            //     $dailynumofhours += $getrate[0]->tuesdayhours; 
                                            //     $dailyovertimehours += ($totalhours - $getrate[0]->tuesdayhours);

                                            //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                
                                            //     $holidayovertimepay+= (($totalhours - $getrate[0]->tuesdayhours) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
            
                                            // }
                                            elseif($totalhours<$getrate[0]->tuesdayhours){
                                                
                                                $dailynumofhours += $totalhours; 

                                                $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                            }
                                        }
                                    }
                                    if($getrate[0]->wednesdays == 1){
                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'wednesday'){
                                            if($totalhours==$getrate[0]->wednesdayhours){

                                                $dailynumofhours += $getrate[0]->wednesdayhours; 

                                                $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
            
                                            }
                                            // elseif($totalhours>$getrate[0]->wednesdayhours){
                                                
                                            //     $dailynumofhours += $getrate[0]->wednesdayhours; 
                                            //     $dailyovertimehours += ($totalhours - $getrate[0]->wednesdayhours);

                                            //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                
                                            //     $holidayovertimepay+= (($totalhours - $getrate[0]->wednesdayhours) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
            
                                            // }
                                            elseif($totalhours<$getrate[0]->wednesdayhours){
                                                
                                                $dailynumofhours += $totalhours; 

                                                $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                            }
                                        }
                                    }
                                    if($getrate[0]->thursdays == 1){
                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'thursday'){
                                            if($totalhours==$getrate[0]->thursdayhours){

                                                $dailynumofhours += $getrate[0]->thursdayhours; 

                                                $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
            
                                            }
                                            // elseif($totalhours>$getrate[0]->thursdayhours){
                                                
                                            //     $dailynumofhours += $getrate[0]->thursdayhours; 
                                            //     $dailyovertimehours += ($totalhours - $getrate[0]->thursdayhours);

                                            //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                
                                            //     $holidayovertimepay+= (($totalhours - $getrate[0]->thursdayhours) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
            
                                            // }
                                            elseif($totalhours<$getrate[0]->thursdayhours){
                                                
                                                $dailynumofhours += $totalhours; 

                                                $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                            }
                                        }
                                    }
                                    if($getrate[0]->fridays == 1){
                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'friday'){
                                            if($totalhours==$getrate[0]->fridayhours){

                                                $dailynumofhours += $getrate[0]->fridayhours; 

                                                $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
            
                                            }
                                            // elseif($totalhours>$getrate[0]->fridayhours){
                                                
                                            //     $dailynumofhours += $getrate[0]->fridayhours; 
                                            //     $dailyovertimehours += ($totalhours - $getrate[0]->fridayhours);

                                            //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                
                                            //     $holidayovertimepay+= (($totalhours - $getrate[0]->fridayhours) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
            
                                            // }
                                            elseif($totalhours<$getrate[0]->fridayhours){
                                                
                                                $dailynumofhours += $totalhours; 

                                                $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                            }
                                        }
                                    }
                                    if($getrate[0]->saturdays == 1){
                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'saturday'){
                                            if($totalhours==$getrate[0]->saturdayhours){

                                                $dailynumofhours += $getrate[0]->saturdayhours; 

                                                $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
            
                                            }
                                            // elseif($totalhours>$getrate[0]->saturdayhours){
                                                
                                            //     $dailynumofhours += $getrate[0]->saturdayhours; 
                                            //     $dailyovertimehours += ($totalhours - $getrate[0]->saturdayhours);

                                            //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                
                                            //     $holidayovertimepay+= (($totalhours - $getrate[0]->saturdayhours) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
            
                                            // }
                                            elseif($totalhours<$getrate[0]->saturdayhours){
                                                
                                                $dailynumofhours += $totalhours; 

                                                $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                            }
                                        }
                                    }
                                    if($getrate[0]->sundays == 1){
                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'sunday'){

                                            if($totalhours==$getrate[0]->sundayhours){

                                                $dailynumofhours += $getrate[0]->sundayhours; 

                                                $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
            
                                            }
                                            // elseif($totalhours>$getrate[0]->sundayhours){
                                                
                                            //     $dailynumofhours += $getrate[0]->sundayhours; 
                                            //     $dailyovertimehours += ($totalhours - $getrate[0]->sundayhours);

                                            //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                
                                            //     $holidayovertimepay+= (($totalhours - $getrate[0]->sundayhours) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
            
                                            // }
                                            elseif($totalhours<$getrate[0]->sundayhours){
                                                
                                                $dailynumofhours += $totalhours; 

                                                $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                            }
                                        }
                                    }

                                }
                                elseif(strtolower($getrate[0]->type) == 'daily'){
                                    
                                    if(count($getholidayrate)>0){

                                        if($totalhours==$getrate[0]->hoursperday){

                                            $dailynumofhours += $getrate[0]->hoursperday; 

                                            $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
        
                                        }
                                        // elseif($totalhours>$getrate[0]->hoursperday){
                                            
                                        //     $dailynumofhours += $getrate[0]->hoursperday; 
                                        //     $dailyovertimehours += ($totalhours - $getrate[0]->hoursperday);

                                        //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                            
                                        //     $holidayovertimepay+= (($totalhours - $getrate[0]->hoursperday) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
        
                                        // }
                                        elseif($totalhours<$getrate[0]->hoursperday){
                                            
                                            $dailynumofhours += $totalhours; 

                                            $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                        }

                                    }

                                }
                                elseif(strtolower($getrate[0]->type) == 'monthly'){
                                    
                                    if(count($getholidayrate)>0){

                                        if($totalhours==$getrate[0]->hoursperday){

                                            $dailynumofhours += $getrate[0]->hoursperday; 

                                            $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
        
                                        }
                                        // elseif($totalhours>$getrate[0]->hoursperday){
                                            
                                        //     $dailynumofhours += $getrate[0]->hoursperday; 
                                        //     $dailyovertimehours += ($totalhours - $getrate[0]->hoursperday);

                                        //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                            
                                        //     $holidayovertimepay+= (($totalhours - $getrate[0]->hoursperday) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
        
                                        // }
                                        elseif($totalhours<$getrate[0]->hoursperday){
                                            
                                            $dailynumofhours += $totalhours; 

                                            $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                        }

                                    }
                                }
                                elseif(strtolower($getrate[0]->type) == 'project'){
                                    
                                    if(count($getholidayrate)>0){

                                        if($totalhours==$getrate[0]->hoursperday){

                                            $dailynumofhours += $getrate[0]->hoursperday; 

                                            $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
        
                                        }
                                        // elseif($totalhours>$getrate[0]->hoursperday){
                                            
                                        //     $dailynumofhours += $getrate[0]->hoursperday; 
                                        //     $dailyovertimehours += ($totalhours - $getrate[0]->hoursperday);

                                        //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                            
                                        //     $holidayovertimepay+= (($totalhours - $getrate[0]->hoursperday) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
        
                                        // }
                                        elseif($totalhours<$getrate[0]->hoursperday){
                                            
                                            $dailynumofhours += $totalhours; 

                                            $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                        }

                                    }
                                }
                            }else{

                                // ========================================================================== IF NOT HOLIDAYS =================================================================
                                // ========================================================================== IF NOT HOLIDAYS =================================================================

                                if(strtolower($getrate[0]->type) == 'hourly'){
                                    if($getrate[0]->mondays == 1){
                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'monday'){
                                            if($totalhours<$getrate[0]->mondayhours){
                
                                                $dailynumofhours += $totalhours; 
                
                                            }elseif($totalhours>$getrate[0]->mondayhours){
                                                
                                                $dailynumofhours += $getrate[0]->mondayhours; 
                
                                            }
                                        }
                                    }
                                    if($getrate[0]->tuesdays == 1){
                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'tuesday'){
                                            if($totalhours<$getrate[0]->tuesdayhours){
                
                                                $dailynumofhours += $totalhours; 
                
                                            }elseif($totalhours>$getrate[0]->tuesdayhours){
                                                
                                                $dailynumofhours += $getrate[0]->tuesdayhours; 
                
                                            }
                                        }
                                    }
                                    if($getrate[0]->wednesdays == 1){
                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'wednesday'){
                                            if($totalhours<$getrate[0]->wednesdayhours){
                
                                                $dailynumofhours += $totalhours; 
                
                                            }elseif($totalhours>$getrate[0]->wednesdayhours){
                                                
                                                $dailynumofhours += $getrate[0]->wednesdayhours; 
                
                                            }
                                        }
                                    }
                                    if($getrate[0]->thursdays == 1){
                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'thursday'){
                                            if($totalhours<$getrate[0]->thursdayhours){
                
                                                $dailynumofhours += $totalhours; 
                
                                            }elseif($totalhours>$getrate[0]->thursdayhours){
                                                
                                                $dailynumofhours += $getrate[0]->thursdayhours; 
                
                                            }
                                        }
                                    }
                                    if($getrate[0]->fridays == 1){
                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'friday'){
                                            if($totalhours<$getrate[0]->fridayhours){
                
                                                $dailynumofhours += $totalhours; 
                
                                            }elseif($totalhours>$getrate[0]->fridayhours){
                                                
                                                $dailynumofhours += $getrate[0]->fridayhours; 
                
                                            }
                                        }
                                    }
                                    if($getrate[0]->saturdays == 1){
                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'saturday'){
                                            if($totalhours<$getrate[0]->saturdayhours){
                
                                                $dailynumofhours += $totalhours; 
                
                                            }elseif($totalhours>$getrate[0]->saturdayhours){
                                                
                                                $dailynumofhours += $getrate[0]->saturdayhours; 
                
                                            }
                                        }
                                    }
                                    if($getrate[0]->sundays == 1){
                                        if(strtolower(date('l', strtotime($attendance->tdate))) == 'sunday'){
                                            if($totalhours<$getrate[0]->sundayhours){
                
                                                $dailynumofhours += $totalhours; 
                
                                            }elseif($totalhours>$getrate[0]->sundayhours){
                                                
                                                $dailynumofhours += $getrate[0]->sundayhours; 
                
                                            }
                                        }
                                    }
                                }
                                elseif(strtolower($getrate[0]->type) == 'daily'){
    
                                    if($totalhours==$getrate[0]->hoursperday){

                                        $dailynumofhours += $getrate[0]->hoursperday; 
    
                                    }elseif($totalhours>$getrate[0]->hoursperday){
                                        
                                        $dailynumofhours += $getrate[0]->hoursperday; 
                                        // $dailyovertimehours += ($totalhours - $getrate[0]->hoursperday);
    
                                    }elseif($totalhours<$getrate[0]->hoursperday){
                                        
                                        $dailynumofhours += $totalhours; 

                                    }

                                }
                                elseif(strtolower($getrate[0]->type) == 'monthly'){

                                    if($totalhours==$getrate[0]->hoursperday){

                                        $dailynumofhours += $getrate[0]->hoursperday; 

                                    }elseif($totalhours>$getrate[0]->hoursperday){
                                        
                                        $dailynumofhours += $getrate[0]->hoursperday; 
                                        // $dailyovertimehours += ($totalhours - $getrate[0]->hoursperday);

                                    }elseif($totalhours<$getrate[0]->hoursperday){
                                        
                                        $dailynumofhours += $totalhours; 

                                    }

                                }
                                elseif(strtolower($getrate[0]->type) == 'project'){
                                    $dailynumofhours += $totalhours; 
                                }
                            }

                        }else{

                            // ============================================================================================================================================================
                            // ============================================================================= ABSENT =======================================================================
                            // ============================================================================================================================================================
                            
                            if($holiday == 1){
                                $getholidayrate = Db::table('schoolcaltype')
                                    // ->where('description','like','%regular holiday')
                                    ->where('id',$holidaytype)
                                    ->get();
                                $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentagenowork/100));
                            }
                        }
                    }

                }

            }
            // ====================================================================================================================== standard deductions

          

            $totalStandardDeductions = 0;

            // $dailydeductionstandard = 0;

            $standarddeductions = array();

            $getdeductionstandard = Db::table('deduction_standard')
                ->join('employee_deductionstandard','deduction_standard.id','=','employee_deductionstandard.deduction_typeid')
                ->where('employee_deductionstandard.employeeid',$employee->id)
                ->where('employee_deductionstandard.status','1')
                ->where('deduction_standard.deleted','0')
                ->get();

            foreach($getdeductionstandard as $deductionstandard){

                $dailydeductionstandard = ($deductionstandard->eesamount / count($monthworkdays))*$day_count;
            // return $dailydeductionstandard;
            // return $day_count;
                $totalStandardDeductions += $dailydeductionstandard;
                // return $totalStandardDeductions;

                array_push($standarddeductions,(object)array(
                    'deductiondetail'   => $deductionstandard,
                    'dailydeduction'    => number_format($dailydeductionstandard, 2, '.', ',')
                    // 'dailydeduction'    => number_format($dailydeductionstandard*$day_countdeduction, 2, '.', ',')
                ));

            }
            // $dailydeductionothers = 0;
        
            // ====================================================================================================================== other deductions
            $otherdeductions = array();

            $totalOtherDeductions = 0;

            $getdeductionothers = Db::table('employee_deductionother')
                ->where('employee_deductionother.employeeid',$employee->id)
                ->where('employee_deductionother.status','0')
                ->where('employee_deductionother.deleted','0')
                ->get();

            // $totalpaiddeductions = 0;
            // return $getdeductionothers;

            foreach($getdeductionothers as $getdeductionother){
                
                $totalpaiddeduction = 0;

                $getdeductionothersdetails = Db::table('employee_deductionotherdetail')
                    ->where('headerid',$getdeductionother->id)
                    ->get();
                    
                if(count($getdeductionothersdetails) > 0){

                    foreach($getdeductionothersdetails as $getdeductionothersdetail){
                        
                        $totalpaiddeduction+=$getdeductionothersdetail->amountpaid;
    
                    }

                }
                
                if($totalpaiddeduction >= $getdeductionother->amount){

                    Db::table('employee_deductionother')
                        ->where('id', $getdeductionother->id)
                        ->update([
                            'status'    => 1
                        ]);

                }elseif($totalpaiddeduction < $getdeductionother->amount){

                    $dailydeductionothers =(($getdeductionother->amount/$getdeductionother->term)/ count($monthworkdays))*$day_count; //dailydeduction
    
                    $totalOtherDeductions += $dailydeductionothers;
    
                    array_push($otherdeductions,(object)array(
                        'deductiondetail'   => $getdeductionother,
                        'dailydeduction'    => number_format($dailydeductionothers, 2, '.', ',')
                    ));
                    
                }
                
            }
            // return $otherdeductions;
            // ====================================================================================================================== calculate allowance

            // $workingdaysallowance = array();

            // $day_countallowance = cal_days_in_month($typecalendar, date('m'), date('Y')); // Get the amount of days
            
            // for ($i = 1; $i <= $day_countallowance; $i++) {

            //     $dateformatallowance = date('Y').'/'.date('m').'/'.$i; //format date

            //     $get_namedateallowance = Carbon::create($dateformatallowance)->isoFormat('ddd'); //get week day

            //     $day_nameallowance = substr($get_namedateallowance, 0, 3); // Trim day name to 3 chars

            //     //if not a weekend add day to array
            //     if($day_nameallowance != 'Sun'){
                    
            //         $workingdaysallowance[] = date('Y').'-'.date('m').'-'.$i;
                    
            //     }

            // }

            // $numberofdaysinamonthallowance = count($workingdaysallowance);

            // ====================================================================================================================== standard allowance

            $totalStandardAllowance = 0;

            // $dailyallowancestandard = 0;

            $standardallowances = array();

            $getallowancestandard = Db::table('allowance_standard')
                ->join('employee_allowancestandard','allowance_standard.id','=','employee_allowancestandard.allowance_standardid')
                ->where('employee_allowancestandard.employeeid',$employee->id)
                ->where('employee_allowancestandard.status','1')
                ->where('allowance_standard.deleted','0')
                ->get();
            // return $getallowancestandard;
            foreach($getallowancestandard as $allowancestandard){
                
                $dailyallowancestandard = ($allowancestandard->amount / count($monthworkdays))*$day_count;
                
                $totalStandardAllowance += $dailyallowancestandard;
                
                array_push($standardallowances,(object)array(
                    'allowancedetail'   => $allowancestandard,
                    'dailyallowance'    => number_format($dailyallowancestandard, 2, '.', ',')
                    // 'dailyallowance'    => number_format($dailyallowancestandard*$day_countallowance, 2, '.', ',')
                ));

            }
            // return $standardallowances;
                
            // ====================================================================================================================== other allowance

            // $dailyallowanceothers = 0;
        
            $otherallowances = array();

            $totalOtherAllowance = 0;

            $getallowanceothers = Db::table('employee_allowanceother')
                ->where('employee_allowanceother.employeeid',$employee->id)
                ->where('employee_allowanceother.status','0')
                ->where('employee_allowanceother.deleted','0')
                ->get();

            // $totalpaiddeductions = 0;

            foreach($getallowanceothers as $getallowanceother){
                
                $totalpaidallowance = 0;

                $getallowanceothersdetails = Db::table('employee_allowanceotherdetail')
                    ->where('headerid',$getallowanceother->id)
                    ->get();
                    
                if(count($getallowanceothersdetails) > 0){

                    foreach($getallowanceothersdetails as $getallowanceothersdetails){
    
                        $totalpaidallowance+=$getallowanceothersdetails->amountpaid;
    
                    }

                }
                
                if($totalpaidallowance >= $getallowanceother->amount){

                    Db::table('employee_allowanceother')
                        ->where('id', $getallowanceother->id)
                        ->update([
                            'status'    => 1
                        ]);

                }elseif($totalpaidallowance < $getallowanceother->amount){

                    $dailyallowanceothers=(($getallowanceother->amount/$getallowanceother->term)/count($monthworkdays))*$day_count;; //dailydeduction
    
                    $totalOtherAllowance += $dailyallowanceothers;
    
                    array_push($otherallowances,(object)array(
                        'allowancedetail'   => $getallowanceother,
                        'dailyallowance'    => number_format($dailyallowanceothers, 2, '.', ',')
                    ));

                }

            }
                // return $otherallowances;
            // ====================================================================================================================== salary summary
            
                // return $dailynumofhours*;
            // ====================================================================================================================== salary summary


            $leaves = Db::table('employee_leaves')
                ->join('hr_leaves','employee_leaves.leaveid','=','hr_leaves.id')
                ->where('hr_leaves.deleted','0')
                ->where('employee_leaves.payrolldone','0')
                ->where('employee_leaves.status','approved')
                ->where('employee_leaves.employeeid',$employee->id)
                ->get();
            // return $leaves;
            $leavesearn = 0;
            $leavesdeduct = 0;
            $leavesnumdays = 0;
            if(count($leaves) > 0){
                
                foreach($leaves as $leave){
                    $datediff  = strtotime($leave->dateto) - strtotime($leave->datefrom);
                    $leavesnumdays += round($datediff / (60 * 60 * 24)) + 1;

                    $beginleave = new DateTime($leave->datefrom);

                    $endleave = new DateTime($leave->dateto);

                    $endleave = $endleave->modify( '+1 day' ); 
                    
                    $intervalleave = new DateInterval('P1D');

                    $daterangeleave = new DatePeriod($beginleave, $intervalleave ,$endleave);

                    $daysperiodleave = array();

                    foreach($daterangeleave as $dateleave){

                        array_push($daysperiodleave,$dateleave->format("Y-m-d"));

                    }

                    $daysperiodholiday = array();

                    foreach ($getholidays as $getholiday) {

                        $beginholiday = new DateTime($getholiday->datefrom);

                        $endholiday = new DateTime($getholiday->dateto);

                        $endholiday = $endholiday->modify( '+1 day' ); 
                        
                        $intervalholiday = new DateInterval('P1D');

                        $daterangeholiday = new DatePeriod($beginholiday, $intervalholiday ,$endholiday);


                        foreach($daterangeholiday as $dateholiday){

                            array_push($daysperiodholiday,$dateholiday->format("Y-m-d"));

                        }

                    }
                    $numdaysholidays = 0;
                    $payholidaydays = 0;
                    foreach($daysperiodleave as $dayperiodleave){
                        if(in_array($dayperiodleave,$daysperiodholiday)){
                            $numdaysholidays+=1;
                            $payholidaydays+=($dailyrate* $getholiday->ratepercentagenowork)/100;
                            // $payholidaydays +=($dailyrate* $getholiday->ratepercentagenowork)/100;
                        
                        }
                    }
                    $getpay = DB::table('hr_leaves')
                        ->where('id',$leave->id)
                        ->where('deleted','0')
                        ->get();
                    if(count($getpay) == 0){
                        $leavesdeduct+=($dailyrate*$leavesnumdays);
                    }else{
                        if($getpay[0]->withpay == 0){
                            $leavesdeduct+=($dailyrate*$leavesnumdays);
                        }else{
                            $leavesearn+=($dailyrate*$leavesnumdays);
                        }
                    }
                    if($numdaysholidays>0){
                        $leavesearn+=$payholidaydays;
                        // if($leave->withpay == 1){
                        // }else{
                        //     $leavesdeduct+=($dailyrate*$leavesnumdays);
                        //     $leavesearn+=$payholidaydays;
                        // }
                    }
                    // return $numdaysholidays;
                
                }
            }

                
            // ====================================================================================================================== overtime

            $holidayovertimepay = 0;

            $overtimesalary = 0;

            $dailyovertimehours = 0;

            $overtimes = Db::table('employee_overtime')
                ->where('employee_overtime.deleted','0')
                ->where('employee_overtime.payrolldone','0')
                ->where('employee_overtime.status','approved')
                ->where('employee_overtime.payrollid',null)
                ->where('employee_overtime.employeeid',$employee->id)
                ->get();

            $daysperiodholiday = array();

            foreach ($getholidays as $getholiday) {

                $beginholiday = new DateTime($getholiday->datefrom);

                $endholiday = new DateTime($getholiday->dateto);

                $endholiday = $endholiday->modify( '+1 day' ); 
                
                $intervalholiday = new DateInterval('P1D');

                $daterangeholiday = new DatePeriod($beginholiday, $intervalholiday ,$endholiday);


                foreach($daterangeholiday as $dateholiday){

                    array_push($daysperiodholiday,$dateholiday->format("Y-m-d"));

                }

            }

            if(count($overtimes) > 0){
                
                foreach($overtimes as $overtime){
                    
                    foreach($overtimes as $overtime){

                        $daysovertimelist = array();

                        $beginovertime = new DateTime($overtime->datefrom);

                        $endovertime = new DateTime($overtime->dateto);

                        $endovertime = $endovertime->modify( '+1 day' ); 
                        
                        $intervalovertime = new DateInterval('P1D');

                        $daterangeovertime = new DatePeriod($beginovertime, $intervalovertime ,$endovertime);

                        foreach($daterangeovertime as $dateovertime){
                            array_push($daysovertimelist,$dateovertime->format("Y-m-d"));
                        }
                        // return 'ada';
                        // return $daterangeovertime;
                        // return $hourlyrate;
                        foreach($daysovertimelist as $dayovertime){
                            if(in_array($dayovertime,$daysperiodholiday)){
                                
                                $holidayovertimepay+=(($hourlyrate* $getholiday->workon)/100)*$overtime->numofhours;
                                
                            }else{
                                $overtimesalary+=$hourlyrate*$overtime->numofhours;
                            }
                        }
                    }
                }
            }else{
                $overtimes = Db::table('employee_overtime')
                    ->where('employee_overtime.deleted','0')
                    ->where('employee_overtime.payrolldone','0')
                    ->where('employee_overtime.status','approved')
                    ->where('employee_overtime.payrollid',$getdaterange[0]->id)
                    ->where('employee_overtime.employeeid',$employee->id)
                    ->get();
                foreach($overtimes as $overtime){
                    
                    foreach($overtimes as $overtime){

                        $daysovertimelist = array();

                        $beginovertime = new DateTime($overtime->datefrom);

                        $endovertime = new DateTime($overtime->dateto);

                        $endovertime = $endovertime->modify( '+1 day' ); 
                        
                        $intervalovertime = new DateInterval('P1D');

                        $daterangeovertime = new DatePeriod($beginovertime, $intervalovertime ,$endovertime);

                        foreach($daterangeovertime as $dateovertime){
                            array_push($daysovertimelist,$dateovertime->format("Y-m-d"));
                        }
                        // return 'ada';
                        // return $daterangeovertime;
                        // return $hourlyrate;
                        foreach($daysovertimelist as $dayovertime){
                            if(in_array($dayovertime,$daysperiodholiday)){
                                
                                $holidayovertimepay+=(($hourlyrate* $getholiday->workon)/100)*$overtime->numofhours;
                                
                            }else{
                                $overtimesalary+=$hourlyrate*$overtime->numofhours;
                            }
                        }
                    }
                }
            }
            

            // return $employee->id;

            // ====================================================================================================================== salary summary
            if(count($getrate) == 0){
                $basicpay = 0;
    
                $ratetype = "";

                $projectbasedtype = "";
            
                $attendancesalary = 0;

                // $overtimesalary = 0;

                // $holidaypay = 0;
                // $holidayovertimepay = 0;

            }else{
                
                $basicpay = ($getrate[0]->amount);
    
                $ratetype = $getrate[0]->type;

                $projectbasedtype = $getrate[0]->projectbasedtype;
            
                $attendancesalary = ($dailynumofhours*$hourlyrate);

                // $overtimesalary = ($dailyovertimehours*$hourlyrate);

                // $holidaypay = $holidaypay;
                // $holidayovertimepay = $holidayovertimepay;
            }
            // return $hourlyrate * 8;
            $totalearnings = ($attendancesalary + $overtimesalary + $totalStandardAllowance + $totalOtherAllowance + $holidaypay + $holidayovertimepay + $leavesearn);

            $totaldeductions = ($totalStandardDeductions + $totalOtherDeductions + $leavesdeduct + $latedeductionamount);

            $netsalary = ($totalearnings  -  $totaldeductions);

            // $employeesalaryinfo = array();

            
            array_push($employeesalaryinfo, (object)array(
                'employee_info'         => $employee,
                'basicpay'              => number_format($basicpay, 2, '.', ','),
                'ratetype'              => $ratetype,
                'projectratetype'       => $projectbasedtype,
                'allowancestandards'    =>  $standardallowances,
                'allowanceothers'       =>  $otherallowances,
                'deductionstandards'    =>  $standarddeductions,
                'deductionothers'       =>  $otherdeductions,
                'attendancesalary'      => number_format($attendancesalary, 2, '.', ','),
                'overtimepay'           => number_format($overtimesalary, 2, '.', ','),
                'latedeductions'        => number_format($latedeductionamount, 2, '.', ','),
                'holidaypay'            => number_format($holidaypay, 2, '.', ','),
                'holidayovertimepay'    => number_format($holidayovertimepay, 2, '.', ','),
                'leaves'                => $leaves,
                'leavesnumdays'         => $leavesnumdays,
                'leavesearn'            => number_format($leavesearn, 2, '.', ','),
                'leavesdeduct'          => number_format($leavesdeduct, 2, '.', ','),
                'totalearnings'         => number_format($totalearnings, 2, '.', ','),
                'totaldeductions'       => number_format($totaldeductions, 2, '.', ','),
                'netsalary'             => number_format($netsalary, 2, '.', ','),
                'netsalarystring'       => ucwords(Conversion::make($netsalary,' pesos')),
                'exists'                => $exists
            ));
        }
        // return $getdaterange;

        $schoolinfo = DB::table('schoolinfo')
            ->first();
        foreach($getdaterange as $daterange){
            foreach($daterange as $key => $value){
                if($key == 'datefrom'){
                    $daterange->datefrom = date('F d, Y', strtotime($value));
                }
                if($key == 'dateto'){
                    $daterange->dateto = date('F d, Y', strtotime($value));
                }
                if($key == 'createdby'){
                    $getcreatedname = Db::table('teacher')
                        ->where('id', $value)
                        ->where('isactive', '1')
                        ->first();
                    // return $getcreatedname;
                    $daterange->createdby = $getcreatedname->firstname.' '.$getcreatedname->middlename[0].'. '.$getcreatedname->lastname.' '.$getcreatedname->suffix;
                }
                if($key == 'createdon'){
                    $daterange->createdon = date('F d, Y h:i:s A', strtotime($value));
                }
            }
        }
        // return $request->all();
        $salarytype = $request->get('salarytype');
        if($request->get('displaytype') == 'individual'){
            $pdf = PDF::loadview('hr/pdf/multiplepayslip',compact('employeesalaryinfo','schoolinfo','getdaterange','salarytype','my_id'))->setPaper('letter','portrait');
    
            return $pdf->stream('Payslip.pdf');
        }else{
            $pdf = PDF::loadview('hr/pdf/paysliptablesummary',compact('employeesalaryinfo','schoolinfo','getdaterange','salarytype','my_id'))->setPaper('letter','portrait');
    
            return $pdf->stream('Payslip Summary.pdf');
        }
        // return $employeesalaryinfo;

    }
    public function payrollhistory(Request $request)
    {
        date_default_timezone_set('Asia/Manila');
        $defaultview = array();
        
        // return $request->get('changepayrollhistory');
        if($request->get('changepayrollhistory') == true){
                $getdaterange = Db::table('payroll')
                    ->orderByDesc('id')
                    ->get();
                
                // foreach()
                // return $request->get('payrollid');
                foreach($getdaterange as $daterange){
                    $daterange->datefrom = date('M d, Y', strtotime($daterange->datefrom));
                    $daterange->dateto = date('M d, Y', strtotime($daterange->dateto));  
                    if($daterange->id == $request->get('payrollid')){
                        $daterange->selected = 1;  
                    }else{
                        $daterange->selected = 0;  
                    }       
                }
                $history = Db::table('payroll_history')
                    ->select(
                        'payroll_history.id',
                        'payroll_history.employeeid',
                        'payroll_history.payrollid',
                        'payroll_history.payrolldatefrom',
                        'payroll_history.payrolldateto',
                        'payroll_history.netpay',
                        'payroll_history.basicpay',
                        'payroll_history.ratetype',
                        'payroll_history.attendancesalary',
                        'payroll_history.totalearnings',
                        'payroll_history.totaldeductions',
                        'payroll_history.overtimepay',
                        'payroll_history.holidaypay',
                        'payroll_history.holidayovertimepay',
                        'teacher.lastname',
                        'teacher.firstname',
                        'teacher.middlename',
                        'teacher.suffix',
                        'usertype.utype as designation'
                        )
                    ->join('teacher', 'payroll_history.employeeid','=','teacher.id')
                    // ->join('usertype', 'teacher.usertypeid','=','usertype.id')
                    ->join('usertype', 'teacher.usertypeid','=','usertype.id')
                    ->where('payrollid', $request->get('payrollid'))
                    ->get();
                foreach($history as $historydetail){
                    $getrange = DB::table('payroll')
                        ->where('id',$getdaterange[0]->id)
                        ->get();
                    $countdaysworked = Db::table('teacherattendance')
                        ->where('teacher_id',$historydetail->employeeid)
                        ->whereBetween('tdate',[$getrange[0]->datefrom,$getrange[0]->dateto])
                        ->get();
                    // $countdaysworked = Db::table('teacherattendance')
                    //     ->where('teacher_id',$historydetail->employeeid)
                    //     ->whereBetween('tdate',[$getrange[0]->datefrom,$getrange[0]->dateto])
                    //     ->get();
                
                    $begindate = new DateTime($getrange[0]->datefrom);
        
                    $enddate = new DateTime($getrange[0]->dateto);

                    $enddate = $enddate->modify( '+1 day' ); 
                    
                    $intervaldate = new DateInterval('P1D');

                    $daterange = new DatePeriod($begindate, $intervaldate ,$enddate);

                    $daysperiod = array();

                    foreach($daterange as $date){

                        array_push($daysperiod,$date->format("Y-m-d"));

                    }
                    $countdaysabsent = count($daysperiod) - count($countdaysworked);
                    
                    $details = Db::table('payroll_historydetail')
                        ->where('headerid', $historydetail->id)
                        ->get();
                    // return $details;
                    $historydetail->payrolldatefrom = date('M d, Y', strtotime($historydetail->payrolldatefrom));
                    $historydetail->payrolldateto = date('M d, Y', strtotime($historydetail->payrolldateto));
                    $historydetail->totalearnings = number_format($historydetail->totalearnings,2,'.',',');
                    $historydetail->totaldeductions = number_format($historydetail->totaldeductions,2,'.',',');
                    $historydetail->netpay = $historydetail->netpay;
                    $historydetail->holidaypay = number_format($historydetail->holidaypay,2,'.',',');
                    array_push($defaultview,(object)array(
                        'history'           => $historydetail,
                        'historydetail'     => $details,
                        'daysworked'        => count($countdaysworked),
                        'daysabsent'        => $countdaysabsent
                    ));
                }
        }else{
            $getdaterange = Db::table('payroll')
                ->orderByDesc('id')
                ->get();
            
            // foreach()
            foreach($getdaterange as $daterange){
                $daterange->datefrom = date('M d, Y', strtotime($daterange->datefrom));
                $daterange->dateto = date('M d, Y', strtotime($daterange->dateto));  
                if($daterange->status == 1){
                    $daterange->selected = 1;  
                }else{
                    $daterange->selected = 0; 
                }       
            }
            if(count($getdaterange)>0){
                $history = Db::table('payroll_history')
                    ->select(
                        'payroll_history.id',
                        'payroll_history.employeeid',
                        'payroll_history.payrollid',
                        'payroll_history.payrolldatefrom',
                        'payroll_history.payrolldateto',
                        'payroll_history.netpay',
                        'payroll_history.basicpay',
                        'payroll_history.ratetype',
                        'payroll_history.attendancesalary',
                        'payroll_history.totalearnings',
                        'payroll_history.totaldeductions',
                        'payroll_history.overtimepay',
                        'payroll_history.holidaypay',
                        'payroll_history.holidayovertimepay',
                        'teacher.lastname',
                        'teacher.firstname',
                        'teacher.middlename',
                        'teacher.suffix',
                        'usertype.utype as designation'
                        )
                    ->join('teacher', 'payroll_history.employeeid','=','teacher.id')
                    ->join('usertype', 'teacher.usertypeid','=','usertype.id')
                    ->where('payrollid', $getdaterange[0]->id)
                    ->get();
                    
                // return $history;
                // return $history;
                foreach($history as $historydetail){
                    $getrange = DB::table('payroll')
                        ->where('id',$getdaterange[0]->id)
                        ->get();
                    $countdaysworked = Db::table('teacherattendance')
                        ->where('teacher_id',$historydetail->employeeid)
                        ->whereBetween('tdate',[$getrange[0]->datefrom,$getrange[0]->dateto])
                        ->get();
                    // $countdaysworked = Db::table('teacherattendance')
                    //     ->where('teacher_id',$historydetail->employeeid)
                    //     ->whereBetween('tdate',[$getrange[0]->datefrom,$getrange[0]->dateto])
                    //     ->get();
                
                    $begindate = new DateTime($getrange[0]->datefrom);
        
                    $enddate = new DateTime($getrange[0]->dateto);

                    $enddate = $enddate->modify( '+1 day' ); 
                    
                    $intervaldate = new DateInterval('P1D');

                    $daterange = new DatePeriod($begindate, $intervaldate ,$enddate);

                    $daysperiod = array();

                    foreach($daterange as $date){

                        array_push($daysperiod,$date->format("Y-m-d"));

                    }
                    $countdaysabsent = count($daysperiod) - count($countdaysworked);
                    
                    $details = Db::table('payroll_historydetail')
                        ->where('headerid', $historydetail->id)
                        ->get();
                    // return $details;
                    $historydetail->payrolldatefrom = date('M d, Y', strtotime($historydetail->payrolldatefrom));
                    $historydetail->payrolldateto = date('M d, Y', strtotime($historydetail->payrolldateto));
                    $historydetail->totalearnings = number_format($historydetail->totalearnings,2,'.',',');
                    $historydetail->totaldeductions = number_format($historydetail->totaldeductions,2,'.',',');
                    $historydetail->netpay = $historydetail->netpay;
                    $historydetail->holidaypay = number_format($historydetail->holidaypay,2,'.',',');
                    array_push($defaultview,(object)array(
                        'history'           => $historydetail,
                        'historydetail'     => $details,
                        'daysworked'        => count($countdaysworked),
                        'daysabsent'        => $countdaysabsent
                    ));
                }
            }
        }
        // return $getdaterange;
        return view('hr.payrollhistory')
            ->with('getdaterange',$getdaterange)
            ->with('history',$defaultview);


    }
    // public function payslip($id, Request $request)
    // {
    //     date_default_timezone_set('Asia/Manila');
            
    //     $date_range_active = Db::table('job_payroll_history')
    //         ->where('isactive','1')
    //         ->first();

    //     if($id == 'generate'){

    //         $netpay = $request->get('netpay');

    //         $payslip_number = rand(1, 100000);
            
    //         $employee_id = Crypt::decrypt($request->get('empid'));
            
    //         $checkifexists = Db::table('job_payroll')
    //             ->where('employee_id', $employee_id)
    //             ->where('payroll_date_id',$date_range_active->id)
    //             ->get();
                
    //         if(count($checkifexists)==0){

    //             DB::insert('insert into job_payroll (payroll_date_id,employee_id,netpay,payslip_number,released_date,released_by,released) value(?,?,?,?,?,?,?)',[ $date_range_active->id,$employee_id,$netpay,$payslip_number,date('Y-m-d H:i:s'),0,1]);
                
    //         }

    //     }
    //     else{

    //         $employee_id = Crypt::decrypt($id);

    //     }
        
    //     $employee_info = Db::table('teacher')
    //         ->select('teacher.firstname','teacher.middlename','teacher.lastname','teacher.suffix','teacher.id','teacher.usertypeid','usertype.utype','teacher.picurl','teacher.licno')
    //         ->join('usertype','teacher.usertypeid','=','usertype.id')
    //         ->where('teacher.deleted','0')
    //         ->where('teacher.isactive','1')
    //         ->where('usertype.utype','!=','PARENT')
    //         ->where('teacher.id',$employee_id)
    //         ->first();

    //     //salarycomputation -------------------------------------------------

    //     $deductionslist = Db::table('job_deduction')
    //         ->where('deleted','0')
    //         ->get();

    //     $getAttendance = DB::table('teacherattendance')
    //         ->where('teacher_id', $employee_id)
    //         ->whereBetween('tdate', [$date_range_active->date_from, $date_range_active->date_to])
    //         ->get();

    //     $dailynumofhours = 0;

    //     foreach($getAttendance as $attendance){

    //         if($attendance->in_am == null){

    //             $am_in = explode(':', date('h:i:s')); 

    //         }
    //         else{

    //             $am_in = explode(':', $attendance->in_am); 

    //         }
    //         if($attendance->out_am == null){

    //             $am_out = explode(':', date('h:i:s')); 

    //         }
    //         else{

    //             $am_out = explode(':', $attendance->out_am); 

    //         }
    //         $totalam = (int)$am_out[0] - (int)$am_in[0] - (int)($am_out[1] < (int)$am_in[1]);
            
    //         if($attendance->in_pm == null){

    //             $pm_in = explode(':', date('h:i:s')); 

    //         }
    //         else{

    //             $pm_in = explode(':', $attendance->in_pm); 

    //         }
    //         if($attendance->out_pm == null){

    //             $pm_out = explode(':', date('h:i:s')); 

    //         }
    //         else{

    //             $pm_out = explode(':', $attendance->out_pm); 

    //         }

    //         $totalpm = (int)$pm_out[0] - (int)$pm_in[0] - (int)($pm_out[1] < (int)$pm_in[1]);

    //         $dailynumofhours += $totalam + $totalpm;

    //     }
        
    //     $rate = Db::table('job_description')
    //         ->select('hourly_rate')
    //         ->where('usertype_id',$employee_info->usertypeid)
    //         ->where('deleted','0')
    //         ->first();
            
    //     $salary = $dailynumofhours*$rate->hourly_rate;
        
    //     $deductionarray = array();

    //     $dailynumofhoursarray = array();

    //     $totaldeduction = 0;

    //     $totalearnings = $dailynumofhours*$rate->hourly_rate;
    
    //     foreach ($deductionslist as $deduction) {

    //         $deductions = Db::table('job_deductiondetail')
    //             ->select('job_deductiondetail.id','job_deduction.description','job_deduction.amount')
    //             ->join('job_deduction','job_deductiondetail.headerid','=','job_deduction.id')
    //             ->where('employee_id',$employee_id)
    //             ->where('job_deductiondetail.deleted','0')
    //             ->where('job_deductiondetail.headerid',$deduction->id)
    //             ->whereBetween('date_filed', [$date_range_active->date_from, $date_range_active->date_to])
    //             ->get();
                
    //         if(count($deductions)==0){

    //             array_push($deductionarray,(object)array(
    //                 'employee_id' => $employee_id,
    //                 'deductionid' => $deduction->id,
    //                 'description' => $deduction->description,
    //                 'amount' => $deduction->amount,
    //                 'status' => '0'
    //             ));

    //         }
    //         else{

    //             array_push($deductionarray, (object)array(
    //                 'employee_id' => $employee_id,
    //                 'deductionid' => $deduction->id,
    //                 'description' => $deduction->description,
    //                 'amount' => $deduction->amount,
    //                 'status' => '1'
    //             ));

    //             foreach($deductions as $deduction){

    //                 $salary = $salary - $deduction->amount;

    //                 $totaldeduction+=$deduction->amount;

    //             }

    //         }

    //     }
    
    //     $leavesarray = array();

    //     $leaves = DB::table('job_leavesdetail')
    //         ->select('job_leavesdetail.date_from','job_leavesdetail.date_to','job_leavesdetail.status','hr_leaves.leave_type','hr_leaves.withpay','job_description.hourly_rate','job_description.daily_rate')
    //         ->join('hr_leaves','job_leavesdetail.headerid','hr_leaves.id')
    //         ->join('teacher','job_leavesdetail.employee_id','teacher.id')
    //         ->join('job_description','teacher.usertypeid','job_description.usertype_id')
    //         ->where('job_leavesdetail.employee_id',$employee_id)
    //         ->whereBetween('job_leavesdetail.date_submitted', [$date_range_active->date_from, $date_range_active->date_to])
    //         ->where('job_leavesdetail.status','approved')
    //         ->where('job_description.deleted','0')
    //         ->get();
            
    //     if(count($leaves) > 0){
            
    //         foreach($leaves as $leave){

    //             $datediff = strtotime($leave->date_to) - strtotime($leave->date_from);

    //             $numdays = round((int)$datediff / (60 * 60 * 24));

    //             $leave->numDays = $numdays;

    //             array_push($leavesarray, $leave);

    //             if($leave->withpay == '1'){

    //                 $salary = $salary + ($leave->numDays*$leave->daily_rate);

    //             }
    //             elseif($leave->withpay == '0'){

    //                 $salary = $salary - ($leave->numDays*$leave->daily_rate);

    //             }

    //         }

    //     }

    //     $employeesarray = array();

    //     //salarycomputation -------------------------------------------------

    
    //     //basicsalarycomputation -------------------------------------------------

    //     $workdays = array();

    //     $type = CAL_GREGORIAN;

    //     $day_count = cal_days_in_month($type, date('m'), date('Y')); // Get the amount of days

    //     for ($i = 1; $i <= date('d'); $i++) {

    //         $date = date('Y').'/'.date('m').'/'.date('d'); //format date

    //         $get_name = Carbon::create($date)->isoFormat('ddd'); //get week day

    //         $day_name = substr($get_name, 0, 3); // Trim day name to 3 chars

    //         //if not a weekend add day to array
    //         if($day_name != 'Sun'){

    //             $workdays[] = date('Y').'-'.date('m').'-'.$i;
                
    //         }

    //     }

    //     $holidays = DB::table('schoolcal')
    //         ->select('datefrom','dateto')
    //         ->where('noclass','1')
    //         ->where('deleted','0')
    //         ->get();
            
    //     $holidaysArray = array();

    //     foreach($holidays as $twodates){

    //         $period = CarbonPeriod::create(date('Y-m-d',strtotime($twodates->datefrom)), date('Y-m-d',strtotime($twodates->dateto)));

    //         $daysarray = array();

    //         foreach ($period as $dateperiod) {

    //             $dateperiod = $dateperiod->format('Y-m-d');

    //             array_push($daysarray, $dateperiod);

    //         }

    //         array_push($holidaysArray, $daysarray);

    //     }
            
    //     $days_num = array();

    //     $days_str = array();

    //     $daysMonth = array();

    //     foreach ($workdays as $date) {

    //         $noMatch = true;

    //         foreach($holidaysArray as $holi){

    //             foreach($holi as $holiday){

    //                 if(date('M d Y',strtotime($date)) == date('M d Y',strtotime($holiday))){

    //                     $noMatch = false;

    //                 }

    //             }

    //         }

    //         if($noMatch){

    //             array_push($days_num,date('d',strtotime($date)));

    //             array_push($days_str,date('D',strtotime($date)));

    //             array_push($daysMonth,date('M d Y',strtotime($date)));

    //         }

    //     }

    //     $basicsalary = 0;

    //     foreach($days_num as $days){

    //         $basicsalary+=(8*$rate->hourly_rate);

    //     }
        
    //     //basicsalarycomputation -------------------------------------------------

    //     array_push($employeesarray, (object)array(
    //         'employee_info' => $employee_info,
    //         'netsalary' => number_format($salary,2),
    //         'netsalarydescription' => ucwords(Conversion::make($salary,' pesos')),
    //         'basicsalary' => number_format($basicsalary,2),
    //         'deductions' => $deductionarray,
    //         'leaves' => $leavesarray,
    //         'totalearnings' => number_format($totalearnings,2),
    //         'totaldeduction' => number_format($totaldeduction,2)
    //     ));

    //     $schoolinfo = DB::table('schoolinfo')
    //         ->first();
            
    //     if($id == 'generate'){

    //         $GLOBALS['bodyHeight'] = 0;

    //         $slipnum = Db::table('job_payroll')
    //             ->select('payslip_number')
    //             ->where('employee_id',$employee_id)
    //             ->where('payroll_date_id',$date_range_active->id)
    //             ->first();

    //         $pdf = PDF::loadview('hr/pdf/job_payslip',compact('employeesarray','schoolinfo','slipnum'))->setPaper(array(0,0,600,$GLOBALS['bodyHeight']+550));

    //         return $pdf->stream('Payslip.pdf');

    //     }else{

    //         return view('hr.payslip')
    //             ->with('payslip',$employeesarray)
    //             ->with('schoolinfo',$schoolinfo);
    //     }
        
    // }
    public function printpayrollhistory($id,Request $request)
    {
        $id = Crypt::decrypt($id);
        $getpayrollhistoryinfo = array();
        if($id == 'individual'){
            // return $request->all();
            $getpayrollhistory = Db::table('payroll_history')
                ->where('employeeid', $request->get('employeeid'))
                ->where('payrollid', $request->get('payrollid'))
                ->get();
            // return $getpayrollhistory
            foreach($getpayrollhistory as $payrollhistory){
                $getbasicinformation = Db::table('teacher')
                    ->where('id', $request->get('employeeid'))
                    ->where('isactive', 1)
                    ->first();
                // return $payrollhistory->payrolldatefrom;
                $payrollhistory->firstname          = $getbasicinformation->firstname;
                $payrollhistory->middlename         = $getbasicinformation->middlename;
                $payrollhistory->lastname           = $getbasicinformation->lastname;
                $payrollhistory->suffix             = $getbasicinformation->suffix;
                $payrollhistory->payrolldatefrom    = date('F d, Y',strtotime($payrollhistory->payrolldatefrom));
                $payrollhistory->payrolldateto      = date('F d, Y',strtotime($payrollhistory->payrolldateto));
                
                $gethistorydetail = Db::table('payroll_historydetail')
                    ->where('headerid',$payrollhistory->id)
                    ->get();
                // return $gethistorydetail;
                array_push($getpayrollhistoryinfo, (object)array(
                    'historyinfo'       => $payrollhistory,
                    'historydetail'     => $gethistorydetail
                ));
            }
            // return$getpayrollhistoryinfo;
            $schoolinfo = DB::table('schoolinfo')
                ->first();
            $GLOBALS['bodyHeight'] = 0;
                // return $getpayrollhistoryinfo;
            $pdf = PDF::loadview('hr/pdf/payrollhistorypayslip',compact('getpayrollhistoryinfo','schoolinfo'))->setPaper(array(0,0,600,$GLOBALS['bodyHeight']+550));

            return $pdf->stream('Payroll History.pdf'); 
            // payrollhistorypayslip.blade.php
            // return $getpayrollhistoryinfo;
        }
    }
    
}




                    
//                     foreach($workdays as $workdaydefault){
    
//                         if(strtolower(date('l', strtotime($workdaydefault))) != 'sunday'){
                            
//                             $same = 0;
        
//                             $holiday = 0;
        
//                             $holidaytype = "";
                            
//                             if(count($getAttendance) == 0){
                                
//                                 foreach ($getholidays as $getholiday) {
//                                     # code...
//                                     // if($getholiday->typename == 'REGULAR HOLIDAY'){?
        
                                        
//                                         $beginholiday = new DateTime($getholiday->datefrom);
        
//                                         $endholiday = new DateTime($getholiday->dateto);
        
//                                         $endholiday = $endholiday->modify( '+1 day' ); 
                                        
//                                         $intervalholiday = new DateInterval('P1D');
        
//                                         $daterangeholiday = new DatePeriod($beginholiday, $intervalholiday ,$endholiday);
        
//                                         $daysperiodholiday = array();
        
//                                         foreach($daterangeholiday as $dateholiday){
        
//                                             array_push($daysperiodholiday,$dateholiday->format("Y-m-d"));
        
//                                         }
                                        
//                                         if(in_array($workdaydefault,$daysperiodholiday)){
//                                             // return 'sadsada';
//                                             // foreach($getholidays as $getholiday){
//                                             //     if(strtolower($getholiday->description) == 'regular holiday'){
//                                                     // $getholidayrate = Db::table('holidayrates')
//                                                     //     ->where('description','like','%regular holiday')
//                                                     //     ->where('status','1')
//                                                     //     ->get();
//                                                     // return $getholiday->typename;
//                                                     $holidaypay += ($dailyrate * ($getholiday->ratepercentagenowork/100));
//                                             //     }
//                                             // }
        
//                                         }
        
//                                     // }
        
//                                 }
//                             }else{
//                                 // return $getAttendance;
        
//                                 foreach($getAttendance as $attendance){
    
//                                     if($workdaydefault == $attendance->tdate){
//                                         // return $attendance->tdate;
                                        
//                                         $same = 1;
                            
//                                         foreach ($getholidays as $getholiday) {
//                                             # code...
//                                             // if($getholiday->typename == 'REGULAR HOLIDAY'){
        
                                                
//                                                 $beginholiday = new DateTime($getholiday->datefrom);
        
//                                                 $endholiday = new DateTime($getholiday->dateto);
        
//                                                 $endholiday = $endholiday->modify( '+1 day' ); 
                                                
//                                                 $intervalholiday = new DateInterval('P1D');
        
//                                                 $daterangeholiday = new DatePeriod($beginholiday, $intervalholiday ,$endholiday);
        
//                                                 $daysperiodholiday = array();
        
//                                                 foreach($daterangeholiday as $dateholiday){
        
//                                                     array_push($daysperiodholiday,$dateholiday->format("Y-m-d"));
        
//                                                 }
//                                                 if(in_array($attendance->tdate,$daysperiodholiday)){
        
//                                                     $holiday = 1;
        
//                                                     $holidaytype = $getholiday->id;
        
//                                                 }
        
//                                             // }
        
//                                         }
        
//                                     }else{
                                
//                                         foreach ($getholidays as $getholiday) {
//                                             # code...
//                                             // if($getholiday->typename == 'REGULAR HOLIDAY'){
                
                                                
//                                                 $beginholiday = new DateTime($getholiday->datefrom);
                
//                                                 $endholiday = new DateTime($getholiday->dateto);
                
//                                                 $endholiday = $endholiday->modify( '+1 day' ); 
                                                
//                                                 $intervalholiday = new DateInterval('P1D');
                
//                                                 $daterangeholiday = new DatePeriod($beginholiday, $intervalholiday ,$endholiday);
                
//                                                 $daysperiodholiday = array();
                
//                                                 foreach($daterangeholiday as $dateholiday){
                
//                                                     array_push($daysperiodholiday,$dateholiday->format("Y-m-d"));
                
//                                                 }
//                                                 if(in_array($workdaydefault,$daysperiodholiday)){
                
//                                                     $holiday = 1;
        
//                                                     $holidaytype = $getholiday->id;
//                                                 }
                
//                                             // }
                
//                                         }
//                                     }
                                    
//                                 }
//                             }
                                
//                             if($same == 1){
    
//                                 // ============================================================================================================================================================
//                                 // ============================================================================= PRESENT ======================================================================
//                                 // ============================================================================================================================================================
                                
//                                 if($attendance->in_am == null){

//                                     $am_in = date('h:i:s', strtotime('12:00:00')); 
                    
//                                 }
//                                 else{
                                    
//                                     $am_in = $attendance->in_am; 

//                                 }
                                
//                                 if($attendance->out_am == null){

//                                     $am_out = date('h:i:s', strtotime('12:00:00')); 
                    
//                                 }else{

//                                     $am_out = $attendance->out_am; 

//                                 }
//                                 if($attendance->in_pm == null){

//                                     $pm_in = date('h:i:s', strtotime('05:00:00')); 
                    
//                                 }else{

//                                     $pm_in = $attendance->in_pm; 

//                                 }
                                
//                                 if($attendance->out_pm == null){

//                                     $pm_out = date('h:i:s', strtotime('05:00:00')); 
                    
//                                 }else{
//                                     $pm_out = $attendance->out_pm; 
//                                 }

                                
                                
                                
//                                 if(strtolower($getlatedeductionsetup->type) == 'custom' && count($deductiontardinessapplication) > 0){

//                                     $amdatetime1 = strtotime($gettimesched[0]->amin);

//                                     // $amdatetime2 = strtotime($attendance->in_am);
//                                     $amdatetime2 = strtotime(date('H:i:s',(strtotime($attendance->in_am.' AM'))));

//                                     $amtimedifference = $amdatetime2 - $amdatetime1 ;

//                                     if($amtimedifference > 0){

//                                         // $amminuteselapsed = ($amtimedifference) / 60 ;
//                                         $amminuteselapsed = (($amtimedifference) / 60 ) / 60;

//                                         // $lateminutes+=$amminuteselapsed;

//                                     }else{

//                                         $amminuteselapsed = 0 ;

//                                     }

//                                     if(count($deductioncomputation) > 0){

//                                         if($deductioncomputation[0]->minutes == 1){
                                            
//                                             if($deductioncomputation[0]->basisfixedamount == 1){

//                                                 $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * $deductioncomputation[0]->amount;

//                                             }
//                                             if($deductioncomputation[0]->basispercentage == 1){
                                                
//                                                 if(strtolower($getrate[0]->type) == 'hourly'){
//                                                     if($getrate[0]->mondays == 1){
//                                                         if(strtolower(date('l', strtotime($attendance->tdate))) == 'monday'){
//                                                             $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->mondayhours)/60);
//                                                         }
//                                                     }
//                                                     if($getrate[0]->tuesdays == 1){
//                                                         if(strtolower(date('l', strtotime($attendance->tdate))) == 'tuesday'){
//                                                         $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->tuesdayhours)/60);
//                                                         }
//                                                     }
//                                                     if($getrate[0]->wednesdays == 1){
//                                                         if(strtolower(date('l', strtotime($attendance->tdate))) == 'wednesday'){
//                                                         $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->wednesdayhours)/60);
//                                                         }
//                                                     }
//                                                     if($getrate[0]->thursdays == 1){
//                                                         if(strtolower(date('l', strtotime($attendance->tdate))) == 'thursday'){
//                                                         $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->thursdayhours)/60);
//                                                         }
//                                                     }
//                                                     if($getrate[0]->fridays == 1){
//                                                         if(strtolower(date('l', strtotime($attendance->tdate))) == 'friday'){
//                                                         $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->fridayhours)/60);
//                                                         }
//                                                     }
//                                                     if($getrate[0]->saturdays == 1){
//                                                         if(strtolower(date('l', strtotime($attendance->tdate))) == 'saturday'){
//                                                         $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->saturdayhours)/60);
//                                                         }
//                                                     }
//                                                     if($getrate[0]->sundays == 1){
//                                                         if(strtolower(date('l', strtotime($attendance->tdate))) == 'sunday'){
//                                                         $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->sundayhours)/60);
//                                                         }
//                                                     }
//                                                 }
//                                                 elseif(strtolower($getrate[0]->type) == 'daily'){

//                                                     $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->hoursperday)/60);
                                                    
//                                                 }
//                                                 elseif(strtolower($getrate[0]->type) == 'monthly'){

//                                                     $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->hoursperday)/60);

//                                                 }
//                                                 elseif(strtolower($getrate[0]->type) == 'project'){

//                                                     $latedeductionamount+= ($amminuteselapsed/$deductioncomputation[0]->lateduration) * (($dailyrate/$getrate[0]->hoursperday)/60);

//                                                 }

//                                             }


//                                         }


//                                     }
//                                     // $lateminutes+=$amminuteselapsed;

//                                 }else{

//                                     $amdatetime1 = strtotime('08:00:00');

//                                     $amdatetime2 = strtotime(date('H:i:s',(strtotime($am_in.' AM'))));

//                                     $amtimedifference = $amdatetime2 - $amdatetime1 ;

//                                     if($amtimedifference > 0){

//                                         // $amminuteselapsed = ($amtimedifference) / 60 ;
//                                         $amminuteselapsed = (($amtimedifference) / 60 ) / 60;

//                                         // $lateminutes+=$amminuteselapsed;

//                                     }else{

//                                         $amminuteselapsed = 0 ;

//                                     }                                                           

                                    
                                    
//                                     if(strtolower($getrate[0]->type) == 'hourly'){
                                        
//                                         if($getrate[0]->mondays == 1){
//                                             if(strtolower(date('l', strtotime($attendance->tdate))) == 'monday'){
//                                                 $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->mondayhours)/60);
//                                             }
//                                         }
//                                         if($getrate[0]->tuesdays == 1){
//                                             if(strtolower(date('l', strtotime($attendance->tdate))) == 'tuesday'){
//                                             $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->tuesdayhours)/60);
//                                             }
//                                         }
//                                         if($getrate[0]->wednesdays == 1){
//                                             if(strtolower(date('l', strtotime($attendance->tdate))) == 'wednesday'){
//                                             $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->wednesdayhours)/60);
//                                             }
//                                         }
//                                         if($getrate[0]->thursdays == 1){
//                                             if(strtolower(date('l', strtotime($attendance->tdate))) == 'thursday'){
//                                             $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->thursdayhours)/60);
//                                             }
//                                         }
//                                         if($getrate[0]->fridays == 1){
//                                             if(strtolower(date('l', strtotime($attendance->tdate))) == 'friday'){
//                                             $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->fridayhours)/60);
//                                             }
//                                         }
//                                         if($getrate[0]->saturdays == 1){
//                                             if(strtolower(date('l', strtotime($attendance->tdate))) == 'saturday'){
//                                             $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->saturdayhours)/60);
//                                             }
//                                         }
//                                         if($getrate[0]->sundays == 1){
//                                             if(strtolower(date('l', strtotime($attendance->tdate))) == 'sunday'){
//                                             $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->sundayhours)/60);
//                                             }
//                                         }
//                                     }
//                                     elseif(strtolower($getrate[0]->type) == 'daily'){

//                                         $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->hoursperday)/60);
                                        
//                                     }
//                                     elseif(strtolower($getrate[0]->type) == 'monthly'){
                                        
//                                         $latedeductionamount+= ($amminuteselapsed) * $hourlyrate;
//                                         // $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->hoursperday)/60);

                                        

//                                     }
//                                     elseif(strtolower($getrate[0]->type) == 'project'){

//                                         $latedeductionamount+= ($amminuteselapsed) * (($dailyrate/$getrate[0]->hoursperday)/60);

//                                     }

//                                     // $lateminutes+=$amminuteselapsed;


//                                 }
// // 
                                    
                    
//                                 // }
//                                 // if($attendance->out_am == null){
                                    
//                                 //     $am_out = date('h:i:s'); 
                    
//                                 // }
//                                 // else{
                    
//                                 //     $am_out = explode(':', $attendance->out_am); 

//                                 //     if($am_out[0] == 00){

//                                 //         $am_out = date('h:i:s', strtotime('12'.':'.$am_out[1].':'.$am_out[0]));

//                                 //     }else{

//                                 //         $am_out = $attendance->out_am; 

//                                 //     }
                    
//                                 // }

//                                 $amto_time = strtotime($am_out);

//                                 $amfrom_time = strtotime($am_in);

//                                 $totalam = round(abs($amto_time - $amfrom_time) / 60) / 60;
                                
                                

//                                 // if($attendance->in_pm == null){

//                                 //     $pm_in = date('h:i:s'); 
                    
//                                 // }
//                                 // else{
//                                     // $pmminuteselapsed = round(abs($pmdatetime1 - $pmdatetime2) / 60);

//                                 if(strtolower($getlatedeductionsetup->type) == 'custom' && count($deductiontardinessapplication) > 0){

//                                     $pmdatetime1 = strtotime($gettimesched[0]->pmin);

//                                     $pmdatetime2 = strtotime(date('H:i:s',(strtotime($attendance->in_pm.' PM'))));

//                                     $pmtimedifference = $pmdatetime2 - $pmdatetime1 ;

//                                     if($pmtimedifference > 0){

//                                         $pmminuteselapsed = (($pmtimedifference) / 60 ) / 60;

                                        
//                                         $lateminutes+=$pmminuteselapsed;

//                                     }else{

//                                         $pmminuteselapsed = 0 ;

//                                     }
                                
//                                     if(count($deductioncomputation) > 0){

//                                         if($deductioncomputation[0]->minutes == 1){

//                                             if($deductioncomputation[0]->basisfixedamount == 1){

//                                                 $latedeductionamount+= ($pmminuteselapsed/$deductioncomputation[0]->lateduration) * $deductioncomputation[0]->amount;
                                                
//                                             }
//                                             if($deductioncomputation[0]->basispercentage == 1){
                                                
//                                                 if(strtolower($getrate[0]->type) == 'hourly'){
//                                                     if($getrate[0]->mondays == 1){
//                                                         if(strtolower(date('l', strtotime($attendance->tdate))) == 'monday'){
//                                                             $latedeductionamount+= ($pmminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->mondayhours)/60);
//                                                         }
//                                                     }
//                                                     if($getrate[0]->tuesdays == 1){
//                                                         if(strtolower(date('l', strtotime($attendance->tdate))) == 'tuesday'){
//                                                         $latedeductionamount+= ($pmminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->tuesdayhours)/60);
//                                                         }
//                                                     }
//                                                     if($getrate[0]->wednesdays == 1){
//                                                         if(strtolower(date('l', strtotime($attendance->tdate))) == 'wednesday'){
//                                                         $latedeductionamount+= ($pmminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->wednesdayhours)/60);
//                                                         }
//                                                     }
//                                                     if($getrate[0]->thursdays == 1){
//                                                         if(strtolower(date('l', strtotime($attendance->tdate))) == 'thursday'){
//                                                         $latedeductionamount+= ($pmminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->thursdayhours)/60);
//                                                         }
//                                                     }
//                                                     if($getrate[0]->fridays == 1){
//                                                         if(strtolower(date('l', strtotime($attendance->tdate))) == 'friday'){
//                                                         $latedeductionamount+= ($pmminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->fridayhours)/60);
//                                                         }
//                                                     }
//                                                     if($getrate[0]->saturdays == 1){
//                                                         if(strtolower(date('l', strtotime($attendance->tdate))) == 'saturday'){
//                                                         $latedeductionamount+= ($pmminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->saturdayhours)/60);
//                                                         }
//                                                     }
//                                                     if($getrate[0]->sundays == 1){
//                                                         if(strtolower(date('l', strtotime($attendance->tdate))) == 'sunday'){
//                                                         $latedeductionamount+= ($pmminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->sundayhours)/60);
//                                                         }
//                                                     }
//                                                 }
//                                                 elseif(strtolower($getrate[0]->type) == 'daily'){

//                                                     $latedeductionamount+= ($pmminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->hoursperday)/60);
                                                    
//                                                 }
//                                                 elseif(strtolower($getrate[0]->type) == 'monthly'){

//                                                     $latedeductionamount+= ($pmminuteselapsed/$deductioncomputation[0]->lateduration) * ((($dailyrate*($deductioncomputation[0]->dailyratepercentage/100))/$getrate[0]->hoursperday)/60);

//                                                 }
//                                                 elseif(strtolower($getrate[0]->type) == 'project'){

//                                                     $latedeductionamount+= ($pmminuteselapsed/$deductioncomputation[0]->lateduration) * (($dailyrate/$getrate[0]->hoursperday)/60);

//                                                 }

//                                             }

//                                         }

//                                     }
//                                     // $lateminutes+=$amminuteselapsed;
                                    
//                                 }else{

//                                     $pmdatetime1 = strtotime('12:00:00');

//                                     $pmdatetime2 = strtotime(date('H:i:s',(strtotime($attendance->in_pm.' PM'))));
//                                     // return $attendance->in_pm;
//                                     $pmtimedifference = $pmdatetime2 - $pmdatetime1 ;
                                    
//                                     if($pmtimedifference > 0){
                                        
//                                         $pmminuteselapsed = (($pmtimedifference) / 60 ) / 60;

                                        
//                                         // $lateminutes+=$pmminuteselapsed;

//                                     }else{

//                                         $pmminuteselapsed = 0 ;

//                                     }

//                                     // return $pmminuteselapsed
                                    
                                    
                                    
//                                     if(strtolower($getrate[0]->type) == 'hourly'){
                                        
//                                         if($getrate[0]->mondays == 1){
//                                             if(strtolower(date('l', strtotime($attendance->tdate))) == 'monday'){
//                                                 $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->mondayhours)/60);
//                                             }
//                                         }
//                                         if($getrate[0]->tuesdays == 1){
//                                             if(strtolower(date('l', strtotime($attendance->tdate))) == 'tuesday'){
//                                             $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->tuesdayhours)/60);
//                                             }
//                                         }
//                                         if($getrate[0]->wednesdays == 1){
//                                             if(strtolower(date('l', strtotime($attendance->tdate))) == 'wednesday'){
//                                             $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->wednesdayhours)/60);
//                                             }
//                                         }
//                                         if($getrate[0]->thursdays == 1){
//                                             if(strtolower(date('l', strtotime($attendance->tdate))) == 'thursday'){
//                                             $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->thursdayhours)/60);
//                                             }
//                                         }
//                                         if($getrate[0]->fridays == 1){
//                                             if(strtolower(date('l', strtotime($attendance->tdate))) == 'friday'){
//                                             $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->fridayhours)/60);
//                                             }
//                                         }
//                                         if($getrate[0]->saturdays == 1){
//                                             if(strtolower(date('l', strtotime($attendance->tdate))) == 'saturday'){
//                                             $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->saturdayhours)/60);
//                                             }
//                                         }
//                                         if($getrate[0]->sundays == 1){
//                                             if(strtolower(date('l', strtotime($attendance->tdate))) == 'sunday'){
//                                             $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->sundayhours)/60);
//                                             }
//                                         }
//                                     }
//                                     elseif(strtolower($getrate[0]->type) == 'daily'){

//                                         $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->hoursperday)/60);
                                        
//                                     }
//                                     elseif(strtolower($getrate[0]->type) == 'monthly'){
                                        
//                                         // return $hourlyrate;
//                                         $latedeductionamount+= ($pmminuteselapsed) * ($hourlyrate/60);
//                                         // $latedeductionamount+= ($pmminuteselapsed) * ((($dailyrate/$getrate[0]->hoursperday)/60));

//                                     }
//                                     elseif(strtolower($getrate[0]->type) == 'project'){
                                        
//                                         $latedeductionamount+= ($pmminuteselapsed) * (($dailyrate/$getrate[0]->hoursperday)/60);

//                                     }
//                                     // $lateminutes+=$pmminuteselapsed;


//                                 }
                                    
//                                     // $pm_in = explode(':', $attendance->in_pm); 

//                                     // if($pm_in[0] == 00){

//                                     //     $pm_in = date('h:i:s', strtotime('12'.':'.$pm_in[1].':'.$pm_in[0]));

//                                     // }else{

//                                     //     $pm_in = $attendance->in_pm; 

//                                     // }
                    
//                                 // }
//                                 // if($attendance->out_pm == null){
                    
//                                 //     $pm_out = date('h:i:s'); 
                    
//                                 // }
//                                 // else{

//                                 //     $pm_out = explode(':', $attendance->out_pm); 

//                                 //     if($pm_out[0] == 00){

//                                 //         $pm_out = date('h:i:s', strtotime('12'.':'.$pm_out[1].':'.$pm_out[0]));

//                                 //     }else{

//                                 //         $pm_out = $attendance->out_pm; 

//                                 //     }
                    
//                                 // }
                                
//                                 // $pmto_time = strtotime($pm_out);
//                                 $pmto_time = strtotime($pm_out.' PM');

//                                 $pmfrom_time = strtotime($pm_in);

//                                 // $totalpm = round(abs($pmto_time - $pmfrom_time) / 60) / 60;
                                
//                                 $totalpm = round(abs($pmto_time - $pmfrom_time) / 60) / 60;
                                
                                
//                                 $totalhours = ($totalam + $totalpm);
                                
//                                 if($holiday == 1){
                                        
//                                     // ========================================================================== IF NOT HOLIDAYS =================================================================
//                                     // ========================================================================== IF NOT HOLIDAYS =================================================================
    
//                                     $getholidayrate = Db::table('schoolcaltype')
//                                         ->where('id',$holidaytype)
//                                         ->get();
    
//                                     if(strtolower($getrate[0]->type) == 'hourly'){
                                            
//                                         if($getrate[0]->mondays == 1){
//                                             if(strtolower(date('l', strtotime($attendance->tdate))) == 'monday'){
//                                                 if($totalhours==$getrate[0]->mondayhours){
    
//                                                     $dailynumofhours += $getrate[0]->mondayhours; 
    
//                                                     $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                
//                                                 }
//                                                 // elseif($totalhours>$getrate[0]->mondayhours){
                                                    
//                                                 //     $dailynumofhours += $getrate[0]->mondayhours; 
//                                                 //     $dailyovertimehours += ($totalhours - $getrate[0]->mondayhours);
    
//                                                 //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                    
//                                                 //     $holidayovertimepay+= (($totalhours - $getrate[0]->mondayhours) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
                
//                                                 // }
//                                                 elseif($totalhours<$getrate[0]->mondayhours){
                                                    
//                                                     $dailynumofhours += $totalhours; 
    
//                                                     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
//                                                 }
//                                             }
//                                         }
//                                         if($getrate[0]->tuesdays == 1){
//                                             if(strtolower(date('l', strtotime($attendance->tdate))) == 'tuesday'){
//                                                 if($totalhours==$getrate[0]->tuesdayhours){
    
//                                                     $dailynumofhours += $getrate[0]->tuesdayhours; 
    
//                                                     $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                
//                                                 }
//                                                 // elseif($totalhours>$getrate[0]->tuesdayhours){
                                                    
//                                                 //     $dailynumofhours += $getrate[0]->tuesdayhours; 
//                                                 //     $dailyovertimehours += ($totalhours - $getrate[0]->tuesdayhours);
    
//                                                 //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                    
//                                                 //     $holidayovertimepay+= (($totalhours - $getrate[0]->tuesdayhours) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
                
//                                                 // }
//                                                 elseif($totalhours<$getrate[0]->tuesdayhours){
                                                    
//                                                     $dailynumofhours += $totalhours; 
    
//                                                     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
//                                                 }
//                                             }
//                                         }
//                                         if($getrate[0]->wednesdays == 1){
//                                             if(strtolower(date('l', strtotime($attendance->tdate))) == 'wednesday'){
//                                                 if($totalhours==$getrate[0]->wednesdayhours){
    
//                                                     $dailynumofhours += $getrate[0]->wednesdayhours; 
    
//                                                     $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                
//                                                 }
//                                                 // elseif($totalhours>$getrate[0]->wednesdayhours){
                                                    
//                                                 //     $dailynumofhours += $getrate[0]->wednesdayhours; 
//                                                 //     $dailyovertimehours += ($totalhours - $getrate[0]->wednesdayhours);
    
//                                                 //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                    
//                                                 //     $holidayovertimepay+= (($totalhours - $getrate[0]->wednesdayhours) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
                
//                                                 // }
//                                                 elseif($totalhours<$getrate[0]->wednesdayhours){
                                                    
//                                                     $dailynumofhours += $totalhours; 
    
//                                                     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
//                                                 }
//                                             }
//                                         }
//                                         if($getrate[0]->thursdays == 1){
//                                             if(strtolower(date('l', strtotime($attendance->tdate))) == 'thursday'){
//                                                 if($totalhours==$getrate[0]->thursdayhours){
    
//                                                     $dailynumofhours += $getrate[0]->thursdayhours; 
    
//                                                     $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                
//                                                 }
//                                                 // elseif($totalhours>$getrate[0]->thursdayhours){
                                                    
//                                                 //     $dailynumofhours += $getrate[0]->thursdayhours; 
//                                                 //     $dailyovertimehours += ($totalhours - $getrate[0]->thursdayhours);
    
//                                                 //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                    
//                                                 //     $holidayovertimepay+= (($totalhours - $getrate[0]->thursdayhours) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
                
//                                                 // }
//                                                 elseif($totalhours<$getrate[0]->thursdayhours){
                                                    
//                                                     $dailynumofhours += $totalhours; 
    
//                                                     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
//                                                 }
//                                             }
//                                         }
//                                         if($getrate[0]->fridays == 1){
//                                             if(strtolower(date('l', strtotime($attendance->tdate))) == 'friday'){
//                                                 if($totalhours==$getrate[0]->fridayhours){
    
//                                                     $dailynumofhours += $getrate[0]->fridayhours; 
    
//                                                     $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                
//                                                 }
//                                                 // elseif($totalhours>$getrate[0]->fridayhours){
                                                    
//                                                 //     $dailynumofhours += $getrate[0]->fridayhours; 
//                                                 //     $dailyovertimehours += ($totalhours - $getrate[0]->fridayhours);
    
//                                                 //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                    
//                                                 //     $holidayovertimepay+= (($totalhours - $getrate[0]->fridayhours) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
                
//                                                 // }
//                                                 elseif($totalhours<$getrate[0]->fridayhours){
                                                    
//                                                     $dailynumofhours += $totalhours; 
    
//                                                     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
//                                                 }
//                                             }
//                                         }
//                                         if($getrate[0]->saturdays == 1){
//                                             if(strtolower(date('l', strtotime($attendance->tdate))) == 'saturday'){
//                                                 if($totalhours==$getrate[0]->saturdayhours){
    
//                                                     $dailynumofhours += $getrate[0]->saturdayhours; 
    
//                                                     $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                
//                                                 }
//                                                 // elseif($totalhours>$getrate[0]->saturdayhours){
                                                    
//                                                 //     $dailynumofhours += $getrate[0]->saturdayhours; 
//                                                 //     $dailyovertimehours += ($totalhours - $getrate[0]->saturdayhours);
    
//                                                 //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                    
//                                                 //     $holidayovertimepay+= (($totalhours - $getrate[0]->saturdayhours) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
                
//                                                 // }
//                                                 elseif($totalhours<$getrate[0]->saturdayhours){
                                                    
//                                                     $dailynumofhours += $totalhours; 
    
//                                                     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
//                                                 }
//                                             }
//                                         }
//                                         if($getrate[0]->sundays == 1){
//                                             if(strtolower(date('l', strtotime($attendance->tdate))) == 'sunday'){
    
//                                                 if($totalhours==$getrate[0]->sundayhours){
    
//                                                     $dailynumofhours += $getrate[0]->sundayhours; 
    
//                                                     $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                
//                                                 }
//                                                 // elseif($totalhours>$getrate[0]->sundayhours){
                                                    
//                                                 //     $dailynumofhours += $getrate[0]->sundayhours; 
//                                                 //     $dailyovertimehours += ($totalhours - $getrate[0]->sundayhours);
    
//                                                 //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                    
//                                                 //     $holidayovertimepay+= (($totalhours - $getrate[0]->sundayhours) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
                
//                                                 // }
//                                                 elseif($totalhours<$getrate[0]->sundayhours){
                                                    
//                                                     $dailynumofhours += $totalhours; 
    
//                                                     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
//                                                 }
//                                             }
//                                         }
    
//                                     }
//                                     elseif(strtolower($getrate[0]->type) == 'daily'){
                                        
//                                         if(count($getholidayrate)>0){
    
//                                             if($totalhours==$getrate[0]->hoursperday){
    
//                                                 $dailynumofhours += $getrate[0]->hoursperday; 
    
//                                                 $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
            
//                                             }
//                                             // elseif($totalhours>$getrate[0]->hoursperday){
                                                
//                                             //     $dailynumofhours += $getrate[0]->hoursperday; 
//                                             //     $dailyovertimehours += ($totalhours - $getrate[0]->hoursperday);
    
//                                             //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                
//                                             //     $holidayovertimepay+= (($totalhours - $getrate[0]->hoursperday) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
            
//                                             // }
//                                             elseif($totalhours<$getrate[0]->hoursperday){
                                                
//                                                 $dailynumofhours += $totalhours; 
    
//                                                 $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
//                                             }
    
//                                         }
    
//                                     }
//                                     elseif(strtolower($getrate[0]->type) == 'monthly'){
                                        
                                        
//                                         if(count($getholidayrate)>0){
    
//                                             if($totalhours==$getrate[0]->hoursperday){
    
//                                                 $dailynumofhours += $getrate[0]->hoursperday; 
    
//                                                 $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
            
//                                             }
//                                             // elseif($totalhours>$getrate[0]->hoursperday){
                                                
//                                             //     $dailynumofhours += $getrate[0]->hoursperday; 
//                                             //     $dailyovertimehours += ($totalhours - $getrate[0]->hoursperday);
    
//                                             //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                
//                                             //     $holidayovertimepay+= (($totalhours - $getrate[0]->hoursperday) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
            
//                                             // }
//                                             elseif($totalhours<$getrate[0]->hoursperday){
                                                
//                                                 $dailynumofhours += $totalhours; 
    
//                                                 $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
//                                             }
    
//                                         }
//                                     }
//                                     elseif(strtolower($getrate[0]->type) == 'project'){
                                        
//                                         if(count($getholidayrate)>0){
    
//                                             if($totalhours==$getrate[0]->hoursperday){
    
//                                                 $dailynumofhours += $getrate[0]->hoursperday; 
    
//                                                 $holidaypay+= ($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
            
//                                             }
//                                             // elseif($totalhours>$getrate[0]->hoursperday){
                                                
//                                             //     $dailynumofhours += $getrate[0]->hoursperday; 
//                                             //     $dailyovertimehours += ($totalhours - $getrate[0]->hoursperday);
    
//                                             //     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
                                                
//                                             //     $holidayovertimepay+= (($totalhours - $getrate[0]->hoursperday) * ($hourlyrate*($getholidayrate[0]->ratepercentageworkon/100)));
            
//                                             // }
//                                             elseif($totalhours<$getrate[0]->hoursperday){
                                                
//                                                 $dailynumofhours += $totalhours; 
    
//                                                 $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentageworkon/100));
//                                             }
    
//                                         }
//                                     }
//                                 }else{
//                                     // return 'asdasd';
//                                     // ========================================================================== IF NOT HOLIDAYS =================================================================
//                                     // ========================================================================== IF NOT HOLIDAYS =================================================================
    
//                                     if(strtolower($getrate[0]->type) == 'hourly'){
//                                         if($getrate[0]->mondays == 1){
//                                             if(strtolower(date('l', strtotime($attendance->tdate))) == 'monday'){
//                                                 if($totalhours<$getrate[0]->mondayhours){
                    
//                                                     $dailynumofhours += $totalhours; 
                    
//                                                 }elseif($totalhours>$getrate[0]->mondayhours){
                                                    
//                                                     $dailynumofhours += $getrate[0]->mondayhours; 
                    
//                                                 }
//                                             }
//                                         }
//                                         if($getrate[0]->tuesdays == 1){
//                                             if(strtolower(date('l', strtotime($attendance->tdate))) == 'tuesday'){
//                                                 if($totalhours<$getrate[0]->tuesdayhours){
                    
//                                                     $dailynumofhours += $totalhours; 
                    
//                                                 }elseif($totalhours>$getrate[0]->tuesdayhours){
                                                    
//                                                     $dailynumofhours += $getrate[0]->tuesdayhours; 
                    
//                                                 }
//                                             }
//                                         }
//                                         if($getrate[0]->wednesdays == 1){
//                                             if(strtolower(date('l', strtotime($attendance->tdate))) == 'wednesday'){
//                                                 if($totalhours<$getrate[0]->wednesdayhours){
                    
//                                                     $dailynumofhours += $totalhours; 
                    
//                                                 }elseif($totalhours>$getrate[0]->wednesdayhours){
                                                    
//                                                     $dailynumofhours += $getrate[0]->wednesdayhours; 
                    
//                                                 }
//                                             }
//                                         }
//                                         if($getrate[0]->thursdays == 1){
//                                             if(strtolower(date('l', strtotime($attendance->tdate))) == 'thursday'){
//                                                 if($totalhours<$getrate[0]->thursdayhours){
                    
//                                                     $dailynumofhours += $totalhours; 
                    
//                                                 }elseif($totalhours>$getrate[0]->thursdayhours){
                                                    
//                                                     $dailynumofhours += $getrate[0]->thursdayhours; 
                    
//                                                 }
//                                             }
//                                         }
//                                         if($getrate[0]->fridays == 1){
//                                             if(strtolower(date('l', strtotime($attendance->tdate))) == 'friday'){
//                                                 if($totalhours<$getrate[0]->fridayhours){
                    
//                                                     $dailynumofhours += $totalhours; 
                    
//                                                 }elseif($totalhours>$getrate[0]->fridayhours){
                                                    
//                                                     $dailynumofhours += $getrate[0]->fridayhours; 
                    
//                                                 }
//                                             }
//                                         }
//                                         if($getrate[0]->saturdays == 1){
//                                             if(strtolower(date('l', strtotime($attendance->tdate))) == 'saturday'){
//                                                 if($totalhours<$getrate[0]->saturdayhours){
                    
//                                                     $dailynumofhours += $totalhours; 
                    
//                                                 }elseif($totalhours>$getrate[0]->saturdayhours){
                                                    
//                                                     $dailynumofhours += $getrate[0]->saturdayhours; 
                    
//                                                 }
//                                             }
//                                         }
//                                         if($getrate[0]->sundays == 1){
//                                             if(strtolower(date('l', strtotime($attendance->tdate))) == 'sunday'){
//                                                 if($totalhours<$getrate[0]->sundayhours){
                    
//                                                     $dailynumofhours += $totalhours; 
                    
//                                                 }elseif($totalhours>$getrate[0]->sundayhours){
                                                    
//                                                     $dailynumofhours += $getrate[0]->sundayhours; 
                    
//                                                 }
//                                             }
//                                         }
//                                     }
//                                     elseif(strtolower($getrate[0]->type) == 'daily'){
        
//                                         if($totalhours==$getrate[0]->hoursperday){
    
//                                             $dailynumofhours += $getrate[0]->hoursperday; 
        
//                                         }elseif($totalhours>$getrate[0]->hoursperday){
                                            
//                                             $dailynumofhours += $getrate[0]->hoursperday; 
//                                             // $dailyovertimehours += ($totalhours - $getrate[0]->hoursperday);
        
//                                         }elseif($totalhours<$getrate[0]->hoursperday){
                                            
//                                             $dailynumofhours += $totalhours; 
    
//                                         }
    
//                                     }
//                                     elseif(strtolower($getrate[0]->type) == 'monthly'){
    
//                                         if($totalhours>=$getrate[0]->hoursperday){
    
//                                             $dailynumofhours += $getrate[0]->hoursperday; 
    
//                                         }
//                                         // elseif($totalhours>$getrate[0]->hoursperday){
                                            
//                                         //     $dailynumofhours += $getrate[0]->hoursperday; 

//                                         //     // $dailyovertimehours += ($totalhours - $getrate[0]->hoursperday);
    
//                                         // }
//                                         elseif($totalhours<$getrate[0]->hoursperday){
                                            
//                                             $dailynumofhours += $totalhours; 
    
//                                         }
    
//                                     }
//                                     elseif(strtolower($getrate[0]->type) == 'project'){
//                                         $dailynumofhours += $totalhours; 
//                                     }
//                                 }
    
//                             }else{
    
//                                 // ============================================================================================================================================================
//                                 // ============================================================================= ABSENT =======================================================================
//                                 // ============================================================================================================================================================
                                
//                                 if($holiday == 1){
//                                     $getholidayrate = Db::table('schoolcaltype')
//                                         // ->where('description','like','%regular holiday')
//                                         ->where('id',$holidaytype)
//                                         ->get();
//                                     $holidaypay+=($dailyrate * ($getholidayrate[0]->ratepercentagenowork/100));
//                                 }
//                             }
//                         }
    
//                     }




                                    $intimeamtardy = ( strtotime($attendance->in_am) - strtotime('08:00:00') )   /60;
                                    $outtimeamtardy = ( strtotime('12:00:00') - strtotime($attendance->out_am) ) /60;

                                    
                                    $intimepmtardy = (  strtotime($attendance->in_pm) - strtotime('13:00:00') ) /60;
                                    $outtimepmtardy = ( strtotime('05:00:00') - strtotime($attendance->out_pm) ) /60;

                                    if($intimeamtardy > 0 ){
                                        $lateminutes += $intimeamtardy;
                                    }
                                    if($outtimeamtardy > 0 ){
                                        $lateminutes += $outtimeamtardy;
                                    }
                                    if($intimepmtardy > 0 ){
                                        $lateminutes += $intimepmtardy;
                                    }
                                    if($outtimepmtardy > 0 ){
                                        $lateminutes += $outtimepmtardy;
                                    }